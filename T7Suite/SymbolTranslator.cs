using System;
using System.Collections.Generic;

namespace T7
{
    class SymbolTranslator
    {
        public static string ToHelpText(string symbolname, int ApplicationLanguage)
        {
            string description = "";
            if (ApplicationLanguage == 31)
            {
                description = toNL(symbolname);
            }
            else
            {
                description = toEN(symbolname);
            }
            return description;
        }

        private static string toNL(string symbolname)
        {
            string description = "";
            switch (symbolname)
            {
                case "E85.X_EthAct_Tech2":
                    description = "Ethanol adaptie waarde (percentage E85 in de tank). Resolutie is 0.1 %";
                    break;
                case "BFuelAdap.V_FuelConsMap":
                    description = "Brandstof verbruik matrix. Bijgewerkt wanneer lambda controller in closed loop draait. Resolutie is 1 ml. Interval is 100 ms. ";
                    break;
                case "IgnNormCal.GasMap":
                    description = "Normale ontsteking kaart als Gas-modus actief is. Wordt geactiveerd wanneer FlashSave.ST_GasHybridAct is ingesteld (wordt vastgesteld door Tech2 hybride auto's op gas) en een fles mislukte injectie. In dit geval Lambda.ST_GasActive krijgt ingesteld. Tegelijkertijd diagnostische modus is gedwongen in LOBD. Resolutie 0,1 °. ";
                    break;
                case "TorqueCal.M_NominalMap":
                    description = "Data-matrix voor nominale koppel. Motortoerental en airmass worden gebruikt als ondersteuning punten. De waarde in de matrix wordt de motor output koppel bij de inlaat van airmass (- wrijving airmass) wordt gebruikt in combinatie met de werkelijke motortoerental pointers. ";
                    break;
                case "TorqueCal.fi_IgnLimMap":
                    description = "Data-matrix voor de ontsteking hoek beperken, waar eerder vonk zal het koppel. Resolutie is 0,1 graad. ";
                    break;
                case "IgnNormCal.Map":
                    description = "Normale ontsteking kaart. Resolutie 0,1 °. ";
                    break;
                case "KnkFuelCal.EnrichmentMap":
                    description = "Brandstof correctie factor afhankelijk van de werkelijke domino gecompenseerd. Resolutie is 0.001%. ";
                    break;
                case "IgnLOffCal.fi_MapOffset":
                    description = "Light off ontsteking gecompenseerd matrix. Resolutie 0,1 °. ";
                    break;
                case "IgnKnkCal.IndexMap":
                    description = "Index kaart voor hoeveel IgnKnkProt.fi_OffNorm moet zijn adjustet met als IgnKnk.fi_Offset worden berekend. Resolutie is 0,01. ";
                    break;
                case "PedalMapCal.m_RequestMap":
                    description = "Rerquested airmass van de bestuurder als een functie van het toerental en acceleratiesystemen pedalposition. Resolutie is 1 mg / c. ";
                    break;
                case "BstKnkCal.MaxAirmassAu":
                    description = "Kaart voor max. toegestaan airmass voor automatische versnellingsbak, m_nHigh. Resolutie is 1 mg / c. ";
                    break;
                case "BstKnkCal.MaxAirmass":
                    description = "Kaart voor max. toegestaan airmass voor handgeschakelde versnellingsbak, m_nHigh. Resolutie is 1 mg / c. ";
                    break;
                case "AirCtrlCal.map":
                    description = "omgeving. Beschrijft de relatie tussen airmass, toerental van de motor en het gebied. Ruimte = functie (airmass, toerental van de motor). Resolutie is 10 bit. ";
                    break;
                case "F_KnkDetAdap.FKnkCntMap":
                    description = "Kaart voor het opslaan van de valse domino indicaties. ";
                    break;
                case "AngleLimCal.ThrottFilter":
                    description = "Filter parameter voor gasklep vraag filter. Resolutie is 1 bit. ";
                    break;
                case "MAFCal.m_RedundantAirMap":
                    description = "Redundante m_AirInlet Kaart. Geïnterpoleerde van toerental en belasting van de motor ondersteuning punten. Belasting van de motor wordt berekend uit het inlaatspruitstuk druk en aangepast afhankelijk van de motortemperatuur en temperatuur van de inlaatlucht. Resolutie is 1 mg / c. ";
                    break;
                case "InjAnglCal.Map":
                    description = "Kaart voor injectie endangle. Resolutie 0,1 °. ";
                    break;
                case "TorqueCal.X_AccPedalMap":
                    description = "Data-matrix voor de berekening van ca. pedaal posities voor Out.X_AccPedal. Resolutie is 0,1%. ";
                    break;
                case "TorqueCal.m_AirTorqMap":
                    description = "Data-matrix voor nominale airmass. Motortoerental en het koppel worden gebruikt als ondersteuning punten. De waarde in de matrix + wrijving airmass (stationair airmass) zal de gewezen koppel bij de gewezen motortoerental. Resolutie is 1 mg / c. ";
                    break;
                case "KnkFuelCal.fi_MapMaxOff":
                    description = "Max toegestaan ontsteking gecompenseerd afhankelijk kloppen. Mirror kaart voor domino impuls matrix. Resolutie 0,1 °. ";
                    break;
                case "AirCompCal.PressMap":
                    description = "Matrix voor de werkelijke druk voor de gasklep bij het kalibreren van de ruimte matrix werd gedaan. Resolutie is 0,1 kPa. ";
                    break;
                case "KnkDetCal.KnockWinOffs":
                    description = "haakse hoek tussen ontsteking en het starten van de knock-venster, afhankelijk van toerental en belasting (OBS! Ondersteuning punten chared met KnkDetProt.RefFactorMap) ";
                    break;
                case "F_KnkDetAdap.RKnkCntMap":
                    description = "Kaart voor het opslaan van de echte knock indicaties. ";
                    break;
                case "KnkDetAdap.KnkCntMap":
                    description = "Deze kaart bevat aantal domino detecties op specifieke belasting punten. Op elk interval is knock detectie. ";
                    break;
                case "MissfAdap.MissfCntMap":
                    description = "Deze kaart bevat aantal detecties missfire op specifieke belasting punten. Op elk interval is missfire detectie. ";
                    break;
                case "BFuelCal.StartMap":
                    description = "Kaart voor vermenigvuldigings brandstof factor afhankelijk van de belasting en toerental van de motor. Deze kaart wordt gebruikt wanneer de motor start temp is binnen de limieten en de lambda closed loop controle nog niet begonnen. Gebruikt om de verrijking van hoge belasting wanneer de motor koud is, ter vermindering van zwarte rook. Resolutie is 0,01 (1%). ";
                    break;
                case "BFuelCal.E85Map":
                    description = "E85 VE Map. Resolutie is 0,01 (1%). ";
                    break;
                case "TorqueCal.M_IgnInflTorqMap":
                    description = "Data-matrix voor de ontsteking invloed op het koppel. Resolutie is 0,1 Nm / graad. ";
                    break;
                case "BFuelCal.Map":
                    description = "Kaart voor vermenigvuldigings brandstof factor afhankelijk van de belasting en toerental van de motor. Deze kaart wordt gebruikt als compensatie voor volymetric efficiëntie en lambda verrijking op hogere lasten. Resolutie is 0,01 (1%). ";
                    break;
                case "BFuelCal2.StartMap":
                    description = "Kaart voor vermenigvuldigings brandstof factor afhankelijk van de belasting en toerental van de motor. Deze kaart wordt gebruikt wanneer de motor start temp is binnen de limieten en de lambda closed loop controle nog niet begonnen. Gebruikt om de verrijking van hoge belasting wanneer de motor koud is, ter vermindering van zwarte rook. Resolutie is 0,01 (1%). ";
                    break;
                case "BFuelCal2.Map":
                    description = "Kaart voor vermenigvuldigings brandstof factor afhankelijk van de belasting en toerental van de motor. Deze kaart wordt gebruikt als compensatie voor volymetric efficiëntie en lambda verrijking op hogere lasten. Resolutie is 0,01 (1%). ";
                    break;
                case "BoostCal.RegMap":
                    description = "Main constante matrix. Resolutie is 0,1%. ";
                    break;
                case "KnkDetCal.RefFactorMap":
                    description = "Knock gevoeligheid kaart, gebruikt om de gevoeligheid voor dit type motor. KnkDetProt.RefFactor gebruikt deze kaart. ";
                    break;
                case "KnkAdapt1Prot.Buffer":
                    description = "Buffer waar U_Knock worden opgeslagen. Resolutie is 1 mV. ";
                    break;
                case "KnkAdapt1Prot2.Temp":
                    description = "buffer gebruikt tijdens berekening uitgeschakeld mediane waarde. ";
                    break;
                case "KnkAdapt1Prot2.Buffer":
                    description = "Buffer waar U_Knock worden opgeslagen. Resolutie is 1 mV. ";
                    break;
                case "KnkAdapt1Prot.Temp":
                    description = "buffer gebruikt tijdens berekening uitgeschakeld mediane waarde. ";
                    break;
                case "BoostCal.HighAltMap":
                    description = "Matrix voor hoge hoogte compensatie van regelgever constant. Resolutie is 0,1%. ";
                    break;
                case "MAFCal.cd_ThrottleMap":
                    description = "luchtstroom coëfficiënt (Cd-waarde) die gebruikt worden in de berekening van de luchtstroom uit gasklep gebied. Deze waarde is verschoven 10 posities naar links (dus vermenigvuldigd met 1024). ";
                    break;
                case "IgnTempCal.EngMap":
                    description = "Engine temperatuur gecompenseerd kaart. Resolutie 0,1 °. ";
                    break;
                case "IgnTempCal.AirMap":
                    description = "Air temperatuur gecompenseerd kaart. Resolutie 0,1 °. ";
                    break;
                case "MissfCal.DetectLoadLevel":
                    description = "Laad boven deze limiet, worden de ontstekingsfouten detectie. ";
                    break;
                case "TempTiCal.map":
                    description = "Parameter voor I-deel van airmass-controller verandert het gedrag van de controller. kortere tijd => sneller het I-deel van de controller. Resolutie is 1 ms. ";
                    break;
                case "IgnCal.MinMap":
                    description = "Min toegestaan ontsteking kaart als TCM niet actief. Resolutie 0,1 °. ";
                    break;
                case "LoadCoCal.Q_ACDynamicMap":
                    description = "Dynamische airmass voor schadevergoeding als gevolg van extra stroomverbruik AC-opstarten. Resolutie is 0,01 g / s. ";
                    break;
                case "LambdaCal.DecStepMap":
                    description = "Negativ stap kaart voor gesloten lus integrator. Resolutie is 0,01%. ";
                    break;
                case "TransCal.AccFacMap":
                    description = "Verrijking factor berekend wanneer de delta gebied verzoek ligt boven trigg beperken. Deze factor zal worden gebruikt indien deze hoger is dan de laatste factor vermenigvuldigd met oprit waarde. ";
                    break;
                case "IgnIdleCal.fi_IdleMap":
                    description = "Idle ontsteking matrix voor R4. Resolutie is 0.1. ";
                    break;
                case "TransCal.DecFacMap":
                    description = "Decrement factor berekend wanneer de delta gebied verzoek is hieronder trigg beperken en StartAirMode = 0. Deze factor wordt gebruikt als het lager is dan de laatste factor gedeeld met oprit waarde. ";
                    break;
                case "LambdaCal.IncCombMap":
                    description = "Aantal zelfontbrandingen met constante integrator voor negatieve stap. Resolutie: 1. ";
                    break;
                case "SwitchCal.A_SwitchPoint":
                    description = "A_SwitchPoint = f (T_Engine, n_Engine). Resolutie is 1 mm ^ 2. ";
                    break;
                case "SAICal.FuellingMap":
                    description = "Additative HCI brandstofgegevensbestand Bank 1 op V6. Resolutie is 0,01 mg / c. ";
                    break;
                case "LambdaCal.DecRampMap":
                    description = "Negativ oprit kaart voor gesloten lus integrator. Resolutie is 0,01%. ";
                    break;
                case "CatDiagCal.Ox2DevMaxMap":
                    description = "kalibratiegegevens voor kat evaluatie. Dit ijkwaarde wordt gebruikt om de maximale afwijking van de absolute gefiltreerd signaal van de zuurstofsensor 2. ";
                    break;
                case "LambdaCal.IncRampMap":
                    description = "Positieve oprit kaart voor gesloten lus integrator. Resolutie is 0,01%. ";
                    break;
                case "LambdaCal.IncStepMap":
                    description = "positieve stap kaart voor gesloten lus integrator. Resolutie is 0,01%. ";
                    break;
                case "KnkFuelCal.WeightTab":
                    description = "Procent Tabel voor hoeveel brandstof verrijking moeten we gebruiken. Resolutie is 1%. ";
                    break;
                case "LambdaCal.DecCombMap":
                    description = "Aantal zelfontbrandingen met constante integrator voor positieve stap. Resolutie: 1. ";
                    break;
                case "LoadCoCal.Q_ACCompAirMap":
                    description = "Airmassflow matrix voor AC compensatie Air. Resolutie is 0,01 g / s. ";
                    break;
                case "GearAdap.ST_TCSCANBased":
                    description = "Adaptieve opslag voor ECMStat.ST_TCSCANBased. ";
                    break;
                case "TorqueProt.n_engbuf":
                    description = "Opgeslagen oude waarden van In.n_Engine10ms om te worden gebruikt als aanwijzer in de omschakeling van torquemaster te m_Air en Max motorkoppel ";
                    break;
                case "BoostCal.IMap":
                    description = "Ik constanten kaart voor de berekening van deel I (Manuel versnellingsbak). (Stel waarde - p_AirInlet) * Ik constante I = I + 1000 ";
                    break;
                case "BoostCal.DMap":
                    description = "D constanten kaart voor de berekening van D deel (handtherapiën versnellingsbak). (p_AirInlet_10_msec_old - p_AirInlet) * D constante D = 20 ";
                    break;
                case "BoostCal.PMap":
                    description = "P constanten kaart voor de berekening van P deel (handtherapiën versnellingsbak). (Stel waarde - p_AirInlet) * P constante P = 100 ";
                    break;
                case "TqToHiCal.Q_AirInletMap":
                    description = "Kaart voor max luchtstroom (Q) in limphome. Resolutie is 0,01 g / s. ";
                    break;
                case "IdleCal.Q_IdleOffsMAP":
                    description = "Extra lucht te krijgen tot het stationaire gecompenseerd. Resolutie is 0,01 g / s. ";
                    break;
                case "IgnOffsCal.DNCompFast":
                    description = "Ontstekingssysteem gecompenseerd worden gecontroleerd door de werkelijke extra stationair lucht te wijten aan D / N-compensatie en de motor temperatureUsed in de snel negatieve IGN oprit. Resolutie 0,1 °. ";
                    break;
                case "IgnOffsCal.DNCompSlow":
                    description = "Ontstekingssysteem gecompenseerd worden gecontroleerd door de werkelijke extra stationair lucht te wijten aan D / N-compensatie en de motor gebruikte temperatuur in de langzame negatieve IGN. oprit. Resolutie 0,1 °. ";
                    break;
                case "SAICal.m_AirSAIMAP":
                    description = "Air geïnjecteerd gedurende een periode van 500 ms. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "MissfCal.RPMDiffLimMAP":
                    description = "Kaart voor rpm diff filter lim ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "TCompCal.EnrFacAutMap":
                    description = "Laad-en rpm afhankelijk factor voor het aanpassen van de factor van de temperatuur \"TCompCal.EnrFacTab\". EnrFac1 = f (° C), range (1,0 - 2,0) EnrFac2 = f (Mair, Rpm) reeks (0 - 255)% EnrFac = ((EnrFac1 - 1,0) * EnrFac2) / 100 + 1.0 gebruikt worden in auto's met een automatische versnellingsbak op temperaturen boven een grens (mogelijk te kalibreren). Resolutie is 1%. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "LoadCoCal.Q_ColdFricMap":
                    description = "Koude wrijving compensatie matrix. Temperatuur en toerental van de motor, afhankelijk compensatie. Resolutie is 1 g / s. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "TCompCal.EnrFacMap":
                    description = "Laad-en rpm afhankelijk factor voor het aanpassen van de factor van de temperatuur \"TCompCal.EnrFacTab\". EnrFac1 = f (° C), range (1,0 - 2,0) EnrFac2 = f (Mair, Rpm) reeks (0 - 255)% EnrFac = ((EnrFac1 - 1,0) * EnrFac2) / 100 + 1.0. Resolutie is 1%. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "TCompCal.EnrFacE85Map":
                    description = "Laad-en rpm afhankelijk factor (voor E85 brandstof) voor het aanpassen van de factor van de temperatuur \"TCompCal.EnrFacTab\". EnrFac1 = f (° C), range (1,0 - 2,0) EnrFac2 = f (Mair, Rpm) reeks (0 - 255)% EnrFac = ((EnrFac1 - 1,0) * EnrFac2) / 100 + 1.0. Resolutie is 1%. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "AftSt2ExtraCal.EnrFacMap":
                    description = "Afterstart verrijking extra gecompenseerd factor afhankelijk van de motor temperatuur en omgevingsdruk. Resolutie is 0,01 (1%). ";
                    //category = XDFCategories.AftSt2ExtraCal;

                    break;
                case "StartCal.HighAltFacMap":
                    description = "High Altitude factor matrix. Gebruikt voor het verrijken extra op zeer hoge hoogtes. Vermenigvuldigt starten met brandstof ";
                    //category = XDFCategories.StartCal;

                    break;
                case "AftSt1ExtraCal.EnrFacMap":
                    description = "Afterstart verrijking extra gecompenseerd factor afhankelijk van de motor temperatuur en omgevingsdruk. Resolutie is 0,01 (1%). ";
                    //category = XDFCategories.AftSt1ExtraCal;

                    break;
                case "MissfProt.t_FilterActive":
                    description = "In thisd array, elke ontstekingsfouten filter geeft haar begintijd wanneer het wordt geactiveerd. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "IdleCal.StartRedFacMat":
                    description = "Decrement factor voor Q_StartOffs, afhankelijk van rpm owershoot. newQ_Start = oldQ_Start * StartRedFac. Resolutie is 0.001. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "CruiseCal.a_DecReqMap":
                    description = "Aangezochte decelaration = f (v_Diff, v_Actual). Resolutie is 0.01984 m / s";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "IgnStartCal.fi_StartMap":
                    description = "Start ontsteking hoek, afhankelijk van airtemp en rpm Voorwaarden om Start Ontstekingssysteem: Engine gestart vlag niet ingesteld (ECMStat.ST_EngineStarted) of motortoerental onder \"IgnStartCal.n_EngLowLim\". Voorwaarden uit te schakelen Start Ontstekingssysteem: Engine gestart vlag instellen en toerental van de motor boven de nominale stationair toerental. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnStartCal;

                    break;
                case "FuelConsCal.n_EngineYSP":
                    description = "Motortoerental steunpunten voor brandstof kaart waar brandstof verbruik worden opgeslagen. Resolutie is 1 tpm. ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "FuelConsCal.m_AirInlXSP":
                    description = "Airmass ondersteuning voor brandstof kaart waar brandstof verbruik worden opgeslagen. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "IgnLOffCal.m_AirXSP":
                    description = "Steun voor de werkelijke belasting. Resolutie is 1 mg / c. ";


                    break;
                case "MissfCal.m_AirXSP":
                    description = "Draagplatform punten voor de ontstekingsfouten tellen kaart. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "IgnNormCal.m_AirXSP":
                    description = "Normale ontsteking kaart airmass site. Ook gebruikt voor gas kaart. Resolutie is xxx. ";


                    break;
                case "TorqueCal.m_AirXSP":
                    description = "Air massa supportpoints voor Ontstekingssysteem hoek beperken influenceing koppel tabel, Ignition-hoek invloed op koppel tabel en nominale koppel tabel. Resolutie is 1 mg / verbranding. ";


                    break;
                case "IgnKnkCal.m_AirXSP":
                    description = "Steun voor de werkelijke belasting. Resolutie is 1 mg / c. ";


                    break;
                case "BFuelCal.AirXSP":
                    description = "Airmass ondersteuning voor brandstof kaart. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BFuelCal;

                    break;
                case "TorqueCal.n_Eng5GearSP":
                    description = "Motortoerental supportpoints voor Max motorkoppel op de vijfde versnelling. Resolutie is 1 tpm. ";


                    break;
                case "AirMinLimCal.n_EngineSP":
                    description = "Motortoerental supportpoints voor Q_MinLoad tabel. Resolutie is 1 tpm. ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "BoostCal.p_DiffILimMap":
                    description = "Support punten voor de berekening van de compensatie factor voor ruimte matrix aanwijzer. Resolutie is 0.001. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "InjAnglCal.AirXSP":
                    description = "Airmass steunpunten voor injectie endangle kaart. Resolutie is 1 mg / c. ";


                    break;
                case "InjAnglCal.RpmYSP":
                    description = "Motortoerental steunpunten voor injectie endangle kaart. Resolutie is 1 tpm. ";


                    break;
                case "TorqueCal.M_OverBoostTab":
                    description = "Max motorkoppel bij overboost. Resolutie is 1 Nm. ";


                    break;
                case "IgnKnkCal.n_EngYSP":
                    description = "Ondersteuning voor motortoerental. Resolutie is 1 tpm. ";


                    break;
                case "TorqueCal.M_EngMaxTab":
                    description = "Gegevens-tabel voor de maximale motor uit zetten koppel handleiding voor auto's. Resolutie is 1 Nm. ";
                    break;
                case "TorqueCal.M_EngMaxE85Tab":
                    description = "Gegevens-tabel voor de maximale motor uit zetten koppel op E85 handleiding voor auto's. Resolutie is 1 Nm. ";
                    break;
                case "TorqueCal.M_5GearLimTab":
                    description = "Gegevens-tabel voor de maximale motor uit zetten koppel handleiding voor auto's op de vijfde versnelling. Resolutie is 1 Nm. ";


                    break;
                case "KnkDetCal.n_EngYSP":
                    description = "Motortoerental suportpoints voor de berekening van de referentie-factor. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "IgnNormCal.n_EngYSP":
                    description = "Normale ontsteking RPM site. Ook gebruikt voor gas kaart. Resolutie: 1. ";


                    break;
                case "KnkFuelCal.m_AirXSP":
                    description = "Ondersteuning voor motortoerental. Resolutie is 1 mg / c. ";


                    break;
                case "PedalMapCal.n_EngineMap":
                    description = "Pedal kaart supportpoints voor de x-as (n_Engine);. Resolutie is 1 tpm;. ";


                    break;
                case "KnkAdaptCal.WeightMap2":
                    description = "Kaart voor mogelijkheid om de waarde van In.U_Knock voordat het wordt opgeslagen in de buffer-, raam-2. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkDetCal.m_AirXSP":
                    description = "Laad suportpoints voor de berekening van de referentie-factor. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "TransCal.AccTempFacTab":
                    description = "Temperatuur afhankelijk acceleratie verrijking. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "BoostCal.n_EngSP":
                    description = "Motortoerental suportpoints voor: BoostCal.LoadOffsMap, BoostCal.P_LimTab, BoostCal.I_LimTab, BoostCal.RegMap ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.P_LimTab":
                    description = "Laad beperken tabblad. in staat te stellen deel van de P impuls regelgever. Als de belasting verzoek van kapitein airmass boven deze waarde plus de hysteres is de P deel ingeschakeld. Als de belasting verzoek van airmass kapitein onder deze waarde is de P deel uitgeschakeld. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "TransCal.T_EngineSP":
                    description = "Engine temperatuur supportpoints voor transiënte brandstof tabellen. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.DecTempFacTab":
                    description = "Temperatuur afhankelijk deceleratie factor. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "BstKnkCal.OffsetXSP":
                    description = "Ondersteuning voor ontsteking gecompenseerd. Resolutie is 0.1 ° (Ioff)";


                    break;
                case "BoostCal.I_LimTab":
                    description = "Laad beperken tabblad. in staat te stellen deel van de I impuls regelgever. Als de belasting verzoek van kapitein airmass boven deze waarde plus de hysteres is het ik deel ingeschakeld en de gasklep gesloten lus is uitgeschakeld. Als de belasting verzoek van airmass kapitein onder deze waarde is de I Deel gehandicapten en het gaspedaal wordt alowed te lopen in een gesloten lus. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BstKnkCal.n_EngYSP":
                    description = "Ondersteuning voor motortoerental. Resolutie is 1 tpm. ";


                    break;
                case "LambdaCal.MinLoadTab":
                    description = "Min belasting tabblad voor gesloten lus. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.RpmSp":
                    description = "Motortoerental steunpunten voor gesloten lus, afhankelijk van de werkelijke belasting. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "PedalMapCal.X_PedalMap":
                    description = "Pedal kaart supportpoints voor de y-as (X_AccPedal);. Resolutie is 0,1%. ";


                    break;
                case "LambdaCal.MaxLoadNormTab":
                    description = "Max belasting tabblad voor gesloten lus, niet kloppen. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.MaxLoadTimeTab":
                    description = "Wanneer lading heeft deze limiet overschreden (MaxLoadTimeTab) voor een bepaalde tijd door TimeOpenLoop systeem zal worden uitgevoerd in de open lus. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "KnkAdaptCal.WeightMap1":
                    description = "Kaart voor mogelijkheid om de waarde van In.U_Knock voordat het wordt opgeslagen in de buffer-, raam-1. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "TorqueCal.M_EngXSP":
                    description = "motorkoppel supportpoints voor nominale airmass tabel. Resolutie is 1 Nm. ";


                    break;
                case "IgnTempCal.T_AirYSP":
                    description = "Ondersteuning voor offset, temperatuur van de inlaatlucht. Resolutie: 1 ° C. Interval is elke 1000 ms. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "BFuelCal.RpmYSP":
                    description = "Motortoerental steunpunten voor brandstof kaart. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BFuelCal;

                    break;
                case "TorqueCal.n_EngYSP":
                    description = "Motortoerental supportpoints voor Ontstekingssysteem hoek beperken influenceing koppel tabel, Ignition-hoek invloed op koppel tabel, Nominaal koppel tabel, Max motorkoppel en nominale Airmass tabel. Resolutie is 1 tpm. ";


                    break;
                case "LambdaCal.N_TransDelay":
                    description = "Verbrandingscyclus vertraging na HW controle uit te voeren open lus tijdens transiënten. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "IgnTempCal.T_EngYSP":
                    description = "Support punten voor offset, motor temperatuur. Resolutie: 1 ° C. Interval is elke 1000 ms. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "LambdaCal.N_BeforeHW":
                    description = "Aantal verbranding te wachten voordat de hardware controleren. dwz U_lambda_probe <300mV EN U_lambda_probe> 600mV. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "MAFCal.LoadYSP":
                    description = "Engine draagplatform punten berekend vanaf het inlaatspruitstuk druk en temperatuur invloed. Voor q_air_from_airinlet berekening van de steun wordt berekend op basis van in.p_airinlet alleen. Resolutie: 1. ";


                    break;
                case "MissfCal.n_EngYSP":
                    description = "Motortoerental ondersteuning voor de ontstekingsfouten rekenen kaart. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "IgnKnkCal.ReduceTime":
                    description = "Tijd om te wachten na kloppen totdat het platform begint te oprit de offset terug naar nul. Supportpoints = n_Engine / 400. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.m_PedYSP":
                    description = "Air massa supportpoints voor (Calc) X_AccPedalMap. Resolutie is 1 mg / verbranding. ";


                    break;
                case "IgnKnkCal.AdpLowLimTab":
                    description = "Boven deze belasting beperken zijn adaptatie gebruikt. Resolutie is 1 mg / c. ";


                    break;
                case "MAFCal.n_EngXSP":
                    description = "Motortoerental ondersteuning voor matrix voor ontslagen m_AirInlet en q_air_from_airinlet, berekend op basis van het inlaatspruitstuk druk. Resolutie is 1 tpm. ";


                    break;
                case "LambdaCal.CombNrTab2":
                    description = "Aantal verbranding te wachten na hardware check. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "AirCtrlCal.x_axis":
                    description = "Airmass waarden voor de x-as. Input parameter voor de tabel AirCtrlCal. Resolutie is 1 mg / c. ";


                    break;
                case "AirCtrlCal.y_axis":
                    description = "Motortoerental waarden voor y-as. Input parameter voor de tabel AirCtrlCal. Resolutie is 1 tpm. ";


                    break;
                case "TorqueCal.M_EngMaxAutTab":
                    description = "Gegevens-tabel voor de maximale motor uit zetten koppel voor automatische auto's. Resolutie is 1 Nm. ";


                    break;
                case "IgnLOffProt.m_requestbuf":
                    description = "winkel m_request te kunnen vertragen het Proefvertalingen tijd = 10 ms ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "LambdaCal.TempCthrTab":
                    description = "Min koelwater temp voor gesloten lus met gesloten gasklep. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.TempOthrTab":
                    description = "Min koelwater temp voor gesloten lus met open gasklep. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.TempSp":
                    description = "Koelwaterverbruik temp ondersteuning voor kaarten die berekening start van de gesloten lus. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "IgnLOffCal.n_EngYSP":
                    description = "Ondersteuning voor motortoerental. Resolutie is 1 tpm. ";


                    break;
                case "MAFCal.DiagLoadYSP":
                    description = "Engine draagplatform punten berekend vanaf het inlaatspruitstuk druk. Resolutie: 1. ";


                    break;
                case "AreaCal.Area":
                    description = "De waarden voor x-as. Geeft de tabel AreaCal.table ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "IgnKnkCal.AdpHighLimTab":
                    description = "Boven deze belasting beperken zijn adaptatie bijgewerkt. Resolutie is 1 mg / c. ";


                    break;
                case "MAFCal.Diagn_EngXSP":
                    description = "Motortoerental ondersteuning voor matrix voor corr_AirFromp. Resolutie is 1 tpm. ";


                    break;
                case "AirCtrlCal.m_MaxAirTab":
                    description = "Airmass waarde uit controller waar ruimte kaart heeft bereikt max-gebied en er is geen punt om het I-deel. Resolutie is 1 mg / c. ";


                    break;
                case "AreaCal.Table":
                    description = "Conversie ruimte in relatieve gasklep bits. Bits = functies (oppervlakte). Resolutie: 1. ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "MonStim.S":
                    description = "Berekening waarde na elke module te controleren. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "StartCal.T_EngineSP":
                    description = "Engine temperatuur steunpunten voor startende brandstof. Resolutie: 1 ° C. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "TCompCal.EnrFacTab":
                    description = "Tabel voor temperatuur compensatie factor. Indien de motor temperatuur hoger is dan de laatste supportpoint, zal de compensatie factor vast te stellen op 1.000. De temperatuur is ook aangepast aan tpm en airmass met een factor van \"TCompCal.EnrFacMap\". Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "CruiseProt.t_delta":
                    description = "Ring geheugen voor cyclusarbeid tijd (100ms lus) nodig zal zijn voor de correctie van versnelling meting. Resolutie is 5 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "TransCal3.EnrFacTab":
                    description = "Afterstart verrijking factor afhankelijk van de motor temperatuur. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TransCal3;

                    break;
                case "StartCal.EnrFacTab":
                    description = "Verrijking factor voor fundamenteel injectie massa tijdens het starten, afhankelijk van de watertemperatuur. Resolutie is 0,01 (1%). ";
                    //category = XDFCategories.StartCal;

                    break;
                case "CruiseProt.v_delta":
                    description = "Ring geheugen voor de werkelijke versnelling meting (de snelheid van het voertuig deviatie). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "AftStCal1.EnrFacTab":
                    description = "Afterstart verrijking factor afhankelijk van de motor temperatuur. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStCal1;

                    break;
                case "TransCal3.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.TransCal3;

                    break;
                case "TransCal2.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.TransCal2;

                    break;
                case "AftStCal1.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.AftStCal1;

                    break;
                case "TransCal2.EnrFacTab":
                    description = "Afterstart verrijking factor afhankelijk van de motor temperatuur. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TransCal2;

                    break;
                case "MissfCal.EngTempSP":
                    description = "Nr verbrandingsgas te filteren na voorbijgaand. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "HotStCal1.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.HotStCal1;

                    break;
                case "HotStCal1.EnrFacTab":
                    description = "Afterstart verrijking factor afhankelijk van de motor temperatuur. Resolutie is 0,001 (0,1%).";
                    //category = XDFCategories.HotStCal1;

                    break;
                case "TCompCal.T_EngineSP":
                    description = "Engine temperatuur ondersteuning voor temperatuur compensatie. Indien de motor temperatuur hoger is dan de laatste supportpoint, zal de compensatie factor vast te stellen op 1.000. Resolutie: 1 ° C. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "TCompCal.T_EngineAutSP":
                    description = "Engine temperatuur ondersteuning voor temperatuur compensatie. Indien de motor temperatuur hoger is dan de laatste supportpoint, zal de schadevergoeding vast te stellen op een factor 1,000 gebruikt worden in auto's met automatische versnellingsbak bij temperaturen boven een grens (mogelijk te kalibreren). Resolutie: 1 ° C. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "AftStCal2.EnrFacTab":
                    description = "Afterstart verrijking factor afhankelijk van de motor temperatuur. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStCal2;

                    break;
                case "StartCal.m_FuelBefStart":
                    description = "Fuelmass gebruikt voor de voor de start. Resolutie is 1 mg. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "AftStCal2.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.AftStCal2;

                    break;
                case "StartCal.m_ReStBefFuel":
                    description = "Fuelmass gebruikt voor het opnieuw opstarten voordat Brandstof. Resolutie is 1 mg. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "TCompCal.EnrFacAutTab":
                    description = "Tabel voor temperatuur compensatie factor. Indien de motor temperatuur hoger is dan de laatste supportpoint, zal de compensatie factor vast te stellen op 1.000. De temperatuur is ook aangepast aan tpm en airmass met een factor van \"TCompCal.EnrFacMap\". Gebruikt in auto's met automatische versnellingsbak bij temperaturen boven een grens (mogelijk te kalibreren). Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "AirCompCal.AirTab":
                    description = "Tabel voor compensatie van m_request afhankelijk van de temperatuur van de inlaatlucht. Resolutie is 0.001%. ";


                    break;
                case "AirCompCal.T_AirSP":
                    description = "temperatuur van de inlaatlucht ondersteuning punten. Resolutie: 1 ° C. ";


                    break;
                case "AirCompCal.AirLimTab":
                    description = "Tabel voor compensatie van m_request afhankelijk van de temperatuur van de inlaatlucht. Resolutie is 0.001%. ";


                    break;
                case "KnkDetCal.KnockWinAngle":
                    description = "Hoek tussen begin-en eindtijd van domino-venster, afhankelijk van het motortoerental. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "MAFCal.p_InletGradYSP":
                    description = "Inlet manifold druk gradiënt ondersteuning voor gewicht coëfficiënt matrix voor de berekening van MAF.m_AirInletFuel. Resolutie is 1 kPa. ";


                    break;
                case "AirCompCal.T_AirLimSP":
                    description = "temperatuur van de inlaatlucht ondersteuning punten. Resolutie: 1 ° C. ";


                    break;
                case "TransCal.m_TriggMaxTab":
                    description = "Als airmass verzoek is boven dit toerental van de motor, afhankelijk beperken zal de m_Request delta op nul zetten: if (laatste m_Request <m_TriggMax) m_ReqDelta = laatste m_Request - vorige m_Request anders als (vorige m_Request <m_TriggMax) m_ReqDelta = laatste m_Request - m_TriggMax anders m_ReqDelta = 0 Interval is elke 10ms. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "IgnLOffCal.T_EngineSP":
                    description = "Ondersteuning voor belasting. Resolutie: 1 ° C. ";


                    break;
                case "IgnLOffCal.CombTab":
                    description = "Aantal uitgeschakeld zelfontbrandingen na de start als een functie van In.T_Engine met geactiveerde licht af ontsteking gecompenseerd. De laagste van CombTab en N_AirTab zal worden gebruikt -> opgeslagen in IgnLOffProt.NrCombustion. Deze dubbele controle zal voorkomen dat een \"valse\" trigg van LO. Voorbeeld: Na een koude start bij -20 geen LO wordt gebruikt. Als motor kramen en opnieuw weer watertemp kunnen hebben verhoogd tot een temperatuur waarbij LO actief is. Om dit te vermijden LO activering een dubbele controle wordt gedaan met de T_AirInlet en het laagste aantal kam wordt gebruikt. Resolutie: 1. ";


                    break;
                case "MAFCal.p_DiffCoeffTab":
                    description = "Coëfficiënt voor Px/P0 (waar Px = inlaatdruk en P0 is druk voor de gasklep) die gebruikt worden in de berekening van de luchtstroom uit gasklep gebied. Deze waarde is verschoven 10 posities naar links (dus vermenigvuldigd met 1024) en vermenigvuldigd met 10. De reden voor de laatste vermenigvuldiging is om a. Resolutie van 0,01 g in de berekende luchtstroom. ";


                    break;
                case "IgnLOffCal.N_AirTab":
                    description = "Aantal uitgeschakeld zelfontbrandingen na de start als een functie van In.T_AirInlet met geactiveerde licht af ontsteking gecompenseerd. De laagste van CombTab en N_AirTab zal worden gebruikt -> opgeslagen in IgnLOffProt.NrCombustion. Deze dubbele controle zal voorkomen dat een \"valse\" trigg van LO. Voorbeeld: Na een koude start bij -20 geen LO wordt gebruikt. Als motor kramen en opnieuw weer watertemp kunnen hebben verhoogd tot een temperatuur waarbij LO actief is. Om dit te vermijden LO activering een dubbele controle wordt gedaan met de T_AirInlet en het laagste aantal kam wordt gebruikt. Resolutie: 1. ";


                    break;
                case "MAFCal.PQuoteYSP":
                    description = "Pressure citaat (voor / na de gasklep) steun punten te krijgen Cd-waarde van cd_ThrottleMap. Resolutie is 0,01. ";


                    break;
                case "BoostCal.HighAltTabSP":
                    description = "p_Air ondersteuning voor hoge hoogte compensatie. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "MAFCal.PDiffSP":
                    description = "Pressure verschil steun voor p_DiffCoeffTab. ";


                    break;
                case "IgnLOffCal.T_AirInletSP":
                    description = "Ondersteuning voor N_AirTab. Resolutie: 1 ° C. ";


                    break;
                case "InjCorrCal.BattCorrSP":
                    description = "Supportpoints voor de aanpassing van injectiontime afhankelijk van de accuspanning. Resolutie is 0,1 V. ";
                    //category = XDFCategories.InjCorrCal;

                    break;
                case "AirCompCal.p_PresSP":
                    description = "Ondersteuning voor druk compensatie van m_request. Resolutie is 0.001%. ";


                    break;
                case "IdleCal.LOffTab":
                    description = "Extra Q-air gecompenseerd afhankelijk van ligh uitgeschakeld ontsteking gecompenseerd. Deze waarde zal worden toegevoegd aan de stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "KnkAdaptCal.MaxRef":
                    description = "Tabel voor max toegestaan domino-niveau, naar gelang motortoerental. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "CruiseComCal.v_Actual":
                    description = "Steun voor de werkelijke snelheid van het voertuig. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "IdleCal.LOffSP":
                    description = "Steun voor extra Q-lucht, afhankelijk van ligh uitgeschakeld ontsteking gecompenseerd. Resolutie 0,1 °. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "InjCorrCal.BattCorrTab":
                    description = "Tabel voor de aanpassing van injectiontime afhankelijk van de accuspanning. Resolutie is 1 ons. ";
                    //category = XDFCategories.InjCorrCal;

                    break;
                case "IgnIdleCal.n_EngDiffSP":
                    description = "Idle ontsteking tabblad x site (rpm diff afhankelijk). Resolutie: 1. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnIdleCal.Tab":
                    description = "Idle ontsteking tabblad. De stationair ontsteking wordt ingeschakeld wanneer de motor is in idle-modus (Idle.ST_Enable ingesteld) en de \"IgnIdleCal.ST_Enable\" is ingesteld. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "AirCompCal.PresTab":
                    description = "Tabel voor druk compensatie van m_request. Resolutie is 0.001%. ";


                    break;
                case "FCutCal.n_CombSP":
                    description = "Ondersteuning voor brandstof enricment na fuelcut. Aantal verbranding, omdat de brandstof werd ingeschakeld na een fuelcut. Geen interpolatie is verricht. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "StartCal.n_CombSP":
                    description = "Steun voor de tabel met factor afhankelijk van het aantal zelfontbrandingen. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.CombFacTab":
                    description = "Tabel met inbegrip startfactor afhankelijk van aantal zelfontbrandingen sinds cranking begint. Resolutie is 0,01 (1%). ";
                    //category = XDFCategories.StartCal;

                    break;
                case "SAICal.m_AirInjReq":
                    description = "SAI lucht te injecteren als functie van de temperatuur van het water beginnen. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "FCutCal.FuelFactor":
                    description = "Fuelfactor afhankelijk van aantal zelfontbrandingen omdat de brandstof werd ingeschakeld na een fuelcut. Geen interpolatie is verricht. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "SAICal.T_EngineSP":
                    description = "Engine temperatuur ondersteuning punten. Resolutie: 1 ° C. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.N_PumpStart":
                    description = "zelfontbrandingen na de start bij het SAI pomp begint. Resolutie is 1 kam. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.N_FuellingStart":
                    description = "zelfontbrandingen na de start bij het bijtanken begint Bank 1 op V6. Resolutie is 1 Comb. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "TransProt.m_RequestBuff":
                    description = "Buffer met Airmass verzoek. Gebruikt voor de berekening van m_Request delta. Schaalinterval wordt elke 20 msec. ";
                    //category = XDFCategories.TransProt;

                    break;
                case "SwitchCal.A_AmbPresMap":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint te compenseren voor hoge hoogte. (Laag omgevingslucht druk). Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SAICal.N_ClosedLoopDelay":
                    description = "zelfontbrandingen na hardware controleren wanneer gesloten lus is toegestaan. HCI Lean klem zal ook worden ingeschakeld nadat deze vertraging. Lambda.Status = 18 wanneer deze vertraging is actief. Resolutie is 1 Comb. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "OBDAdap.ImmoHistory":
                    description = "Opgeslagen status bytes vanaf immobilisatiesysteem functie ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "IgnJerkCal.fi_Tab":
                    description = "Anti eikel ontsteking gecompenseerd tabel. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IdleCal.I_PartSP":
                    description = "Motortoerental verschil ondersteuning voor I, deel tabel. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IgnJerkCal.n_DiffXSP":
                    description = "Ondersteuning voor offset-, motor-delta. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IdleCal.I_PartTab":
                    description = "Ik deel van idlespeed regelgever, afhankelijk van enginespeed verschil. Het I-deel is niet toegestaan om als stationair airmass is lager dan minload airmass of indien Out.A_ThrottleDemand <= 10 mm2. Als het I-deel beperkt is zal het stationaire adaptatie worden gestopt. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.P_PartSP":
                    description = "Motortoerental verschil steunpunten voor P deel tabel. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.P_PartTab":
                    description = "P onderdeel van idlespeed toezichthouder afhankelijk van enginespeed verschil. IdleProt.n_EngineDiff * X IdleProt.P_Part = 1000 (X is het resultaat van deze kaart) ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "TransCal.AccTriggSP":
                    description = "Ondersteuning voor acc. trigg tabel. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TqToHiCal.T_AirInletXSP":
                    description = "Steun voor de temperatuur van de inlaatlucht. Resolutie is 1 C. ";
                    //category = XDFCategories.TqToHiCal;

                    break;
                case "FuelConsCal.Tab":
                    description = "Tabel voor de aanpassing van het brandstofverbruik. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "TorqueCal.fi_IgnMinTab":
                    description = "Minimaal toegestane absolute ontstekingsstijdstip wanneer de vermindering van het koppel, afhankelijk van motor temperatuur. Resolutie is 0,1 graad. ";


                    break;
                case "FuelConsCal.AirSP":
                    description = "Airmass steunpunten voor brandstofverbruik tabel. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "IdleCal.T_EngineSP":
                    description = "Engine temperatuur supportpoints voor de berekening van de nominale stationair toerental. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "LoadCoCal.n_EngineSP":
                    description = "Motortoerental supportpoints voor AC compensatie airmassMap, delaytime AC-en AC-off delaytime tabellen. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "TCompCal.EnrFacAutXSP":
                    description = "Airmass ondersteuning voor temp verrijking kaart. Gebruikt in auto's met automatische versnellingsbak bij temperaturen boven een grens (mogelijk te kalibreren). Resolutie is 1 mg / c. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "IdleCal.n_EngNomNeutral":
                    description = "Nominaal toerental van de motor afhankelijk van de watertemperatuur als er geen signaal Drive is geactiveerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "TCompCal.EnrFacAutYSP":
                    description = "Motortoerental ondersteuning voor temp verrijking kaart. Gebruikt in auto's met automatische versnellingsbak bij temperaturen boven een grens (mogelijk te kalibreren). Resolutie is 1 tpm. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "AirMinLimCal.n_EngYSP":
                    description = "Deze dummy variabele is nodig bij het koppelen van uitvoerbare programma's met link332.bat partij fil. Switchpoint berekeningen is het gebruik van deze gegevens. ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "IdleCal.n_EngNomDrive":
                    description = "Nominaal toerental van de motor afhankelijk van de watertemperatuur als de Drive-signaal wordt geactiveerd op een automatische versnellingsbak. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "LoadCoCal.p_ACSP":
                    description = "Supportpoints voor AC-druk in AC compensatie airmassMap en Dynamic (AC opstarten) comp airmass tabel. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "TCompCal.EnrFacYSP":
                    description = "Motortoerental ondersteuning voor temp verrijking kaart. Resolutie is 1 tpm. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "TCompCal.EnrFacXSP":
                    description = "Airmass ondersteuning voor temp verrijking kaart. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "IdleCal.T_EngRPMOffSP":
                    description = "Ondersteuning voor stationair gecompenseerd matrix. Resolutie is 1 C. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "KnkFuelCal.WeightXSP":
                    description = "Motortoerental ondersteuning voor gewicht factor tabel. Resolutie is 1%. ";


                    break;
                case "MAFCal.T_EngineSP":
                    description = "koelwater temp ondersteuning voor consttable. Resolutie: 1 ° C. ";


                    break;
                case "TempTiCal.x_axis":
                    description = "waarden voor de x-as Verloop van p_Airinlet gemeten elke 50 ms. Input parameter voor de tabel TempTiCal. Resolutie is 1 tpm. ";
                    //category = XDFCategories.TempTiCal;

                    break;
                case "TempTiCal.y_axis":
                    description = "Airmass afwijking waarden voor y-as input parameter voor de tabel TempTiCal. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.TempTiCal;

                    break;
                case "MAFCal.n_EngineXSP":
                    description = "Motortoerental ondersteuning voor gewicht coëfficiënt matrix voor de berekening van MAF.m_AirInletFuel. Resolutie is 0,1%. ";


                    break;
                case "KnkFuelCal.WeightYSP":
                    description = "Ondersteuning voor gewicht factor Table (echte gecompenseerd / max toegestaan gecompenseerd). Resolutie is 1%.";


                    break;
                case "LambdaCal.RichStep":
                    description = "Lambda rijke stap aanpassing tafel. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus rijke stap om een evenwicht te vinden tussen de katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.LeanStep":
                    description = "Lambda mager stap aanpassing tabel. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus mager stap om een evenwicht te vinden tussen katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.XSp":
                    description = "Load (airmass) afhing ondersteuning voor integrator kaarten (IncStep, IncRamp ..). Geen interpolatie worden in deze kaarten. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "IgnKnkCal.fi_Offset":
                    description = "Hoek te verminderen domino gecompenseerd, afhankelijk van het aantal domino in rij voor elke cilinder. Resolutie 0,1 °. ";


                    break;
                case "LambdaCal.U_AdjStepSP":
                    description = "Lambda stap aanpassing supportpoints. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.YSp":
                    description = "Motortoerental afhing ondersteuning voor integrator kaarten (Stap platforminspecties ..). Geen interpolatie worden in deze kaarten. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "MAFCal.AreaXSP":
                    description = "Throttle gebied ondersteuning punten te krijgen Cd-waarde van cd_ThrottleMap. Resolutie is 1 mmý. ";


                    break;
                case "MAFCal.T_AirInlSP":
                    description = "temperatuur van de inlaatlucht ondersteuning voor consttable. Resolutie 0,1 ° C. ";


                    break;
                case "CatDiagCal.RpmTab":
                    description = "Rpm site voor kalibratie kaarten. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.LoadTab":
                    description = "Laad site voor kalibratie kaarten. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "IdleCal.C_PartNeutral":
                    description = "Constant deel stationair regelaar afhankelijk van de motor temperatuur (drive niet geactiveerd op auto's met een automatische versnellingsbak). Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "TransCal.AccTriggLim":
                    description = "Trigg limiet voor transiënte brandstof verrijking. Als de m_request delta ligt boven deze grens is een nieuwe fuelfactor te lezen uit de versnelling factor kaart en temperatuur compensatie tabel. De trigg limiet is afhankelijk van de werkelijke retardatie factor. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "LoadCoCal.Q_NomIdleSP":
                    description = "Ondersteuning voor hoger stationair toerental vanwege servokleppen druk. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "SwitchCal.T_Engine":
                    description = "T_Engine ondersteuning voor de kaart A_switchpoint = f (T_Engine, n_Engine). Resolutie: 1 ° C. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.n_Engine":
                    description = "n_Engine ondersteuning voor de kaart A_switchpoint = f (T_Engine, n_Engine). Resolutie is 1 tpm. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "IdleCal.DelayDriveRel":
                    description = "Vertraging tijd voordat het station Q is vrijgegeven en neutrale Q wordt gebruikt. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.DelayDriveAct":
                    description = "Vertraging tijd voordat het station Q is geactiveerd. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "LoadCoCal.n_NomIdleTab":
                    description = "Tabel voor hoger stationair toerental vanwege servokleppen druk. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "TransCal.DecTriggLim":
                    description = "Trigg limiet voor transiënte brandstof decrement. m_request delta is onder deze limiet en als StartAirMode = 0 wordt een nieuw fuelfactor lezen van de deceleratie factor kaart en temperatuur compensatie tabel. De trigg limiet is afhankelijk van de werkelijke versnelling factor. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.DecSP":
                    description = "Throttle gebied verzoek delta, ondersteuning voor de decrement kaart. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "IgnIdleCal.n_EngYSP":
                    description = "Uitlaatgasrecirculatie ontsteking RPM site. Resolutie: 1. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnIdleCal.m_AirXSP":
                    description = "Airmass ondersteuning voor fi_IdleMap. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnIdleCal.n_EngMinSP":
                    description = "Uitlaatgasrecirculatie ontsteking RPM site. Resolutie: 1. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnIdleCal.fi_MinTab":
                    description = "Min toegestaan fundamentele stationair ontsteking wanneer IgnIdleCal.fi_Idle zijn aangepast met domino adaptatie en temperatuur gecompenseerd. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "TransCal.RpmSP":
                    description = "Motortoerental ondersteuning voor de AccFacMap en DecFacMap. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.AccSP":
                    description = "Throttle gebied verzoek delta, ondersteuning voor de verrijking kaart. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "SAICal.n_EngineYSP":
                    description = "Motortoerental ondersteuning voor HCI kaart. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "RampCal.Gradient":
                    description = "oprit van de werkelijke i deel niveau omlaag naar zero.The oprit is actief elke 10 ms met het kleurverloop is gekalibreerd. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.RampCal;

                    break;
                case "TransCal.DecTriggSP":
                    description = "Ondersteuning voor december trigg tabel. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "MissfCal.LeanStep":
                    description = "Lambda mager stap aanpassing tabel. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus mager stap om een evenwicht te vinden tussen katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "BoostCal.SetLoadXSP":
                    description = "Laad ingestelde waarde suportpoints voor BoostCal.RegMap ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "IgnCal.m_AirXSP":
                    description = "Support punten voor de feitelijke belasting, min toegestaan ontsteking. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.IgnCal;

                    break;
                case "IgnCal.n_EngYSP":
                    description = "Ondersteuning voor motortoerental, min toegestaan ontsteking. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnCal;

                    break;
                case "BoostCal.m_AirAdapSP":
                    description = "M_AirInlet ondersteuning voor het berekenen procent regelgever constante inclusief aanpassing gedeeld met PWM moeten zijn. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "LoadCoCal.T_EngYSP":
                    description = "Engine temperatuur steunpunten gebruikt in koude wrijving compensatie matrix. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "BoostCal.PercAdapTab":
                    description = "Procent tabel voor het berekenen procent regelgever constante inclusief aanpassing gedeeld met PWM moeten zijn. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "MissfCal.RichStep":
                    description = "Lambda rijke stap aanpassing tafel. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus rijke stap om een evenwicht te vinden tussen de katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "LoadCoCal.t_ACOffDlyTab":
                    description = "Vertraging tijd voordat AC-stop na ACOff-verzoek te kunnen afhaalmaaltijden compensatie lucht. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.I_LoadSP":
                    description = "ALTERNATOR huidige supportpoints in elektrische lading compensatie tabel. Resolutie is 1 A. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LimEngCal.TurboSpeedTab":
                    description = "Max toegestaan m_request afhankelijk van de lucht. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LimEngCal;

                    break;
                case "TransCal.DecRampFac":
                    description = "Factor (motortoerental afhing) te verdelen de laatste decrement factor bij de oprit decrement terug naar 1,0 (1,0-last_factor) * \"DecRampFac\" \"ActualFactor\" = 1,0 tot 1,0 ";
                    //category = XDFCategories.TransCal;

                    break;
                case "BoostCal.SetLoad2XSP":
                    description = "Support aanwijzer voor hoge alt compensatie ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "LimEngCal.p_AirSP":
                    description = "Omgevingslucht druk ondersteuning voor max. turbo snelheid. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.LimEngCal;

                    break;
                case "LimEngCal.n_EngSP":
                    description = "Motortoerental ondersteuning voor max. turbo snelheid. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LimEngCal;

                    break;
                case "LimEngCal.TurboSpeedTab2":
                    description = "Compensatie factor afhankelijk van toerental van de motor wordt gebruikt voor de aanpassing van max. toegestaan m_request afhankelijk van de lucht. Resolutie is 0.001. ";
                    //category = XDFCategories.LimEngCal;

                    break;
                case "LoadCoCal.Q_ElLoadCoTab":
                    description = "Airflow tabel voor compensatie vanwege wisselstroomgenerator stroomverbruik. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_ACOnDlyTab":
                    description = "Vertraging tijd voordat AC-opstarten na AC-aanvraag voor te bereiden voor extra lucht. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "MissfCal.n_EngineSP":
                    description = "Ondersteuning voor motortoerental. Resolutie is 1 tpm. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "IdleCal.C_PartDrive":
                    description = "Constant deel stationair regelaar afhankelijk van de motor temperatuur (schijf geactiveerd op auto's met een automatische versnellingsbak). Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.Q_StartOffsTab":
                    description = "Extra Q-air gecompenseerd worden gebruikt tijdens het starten. Deze waarde zal worden toegevoegd aan de stationair constant en adaptatie deel. Tot de motor gestart vlag is ingesteld en rpm is abowe nominale toerental van de motor, zal de nominale toerental van de motor worden gebruikt voor Q naar m en m tot gebied omschakeling. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "TransCal.AccRampFac":
                    description = "Factor (motortoerental afhing) vermenigvuldigd met de laatste verrijking factor oprit de verrijking terug tot 1,0: (Langduriger oprit na de start) AccRampFac = TransCal.AccRampFac * TransProt3.EnrFac TransProt.ActualFactor = (last_factor-1.0) * AccRampFac + 1,0 ";
                    //category = XDFCategories.TransCal;

                    break;
                case "MissfCal.M_LimTab":
                    description = "Koppel beperking wanneer ontstekingsfouten diagnosticeren heeft een fout. Resolutie is 1 Nm. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "AftStCal2.DecrDelayTab":
                    description = "Aantal zelfontbrandingen tussen een decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStCal2;

                    break;
                case "TransCal2.DecrDelayTab":
                    description = "Aantal zelfontbrandingen tussen een decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.TransCal2;

                    break;
                case "HotStCal1.DecrDelayTab":
                    description = "Aantal zelfontbrandingen tussen een decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.HotStCal1;

                    break;
                case "AftStCal1.DecrDelayTab":
                    description = "Aantal zelfontbrandingen tussen een decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStCal1;

                    break;
                case "TransCal3.DecrDelayTab":
                    description = "Aantal zelfontbrandingen tussen een decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.TransCal3;

                    break;
                case "DisplAdap.LamScannerTab1":
                    description = "Convertiontable voor de berekening van de scanner lambda-waarde wordt gebruikt voor ontwikkeling. ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "CruiseCal.M_GradientPos":
                    description = "Aangezochte gradiënt voor positieve veranderingen koppel eenheid motorkoppel / s. Resolutie is 1 Nm / s. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "DisplAdap.LamScannerTab3":
                    description = "Convertiontable voor de berekening van de scanner lambda-waarde wordt gebruikt voor ontwikkeling. ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "FlashSave.RpmMaxFreeze":
                    description = "Sla max rpm en andere gegevens op te sporen rpm overtoerental. byte 0 MSB n_Engine byte 1 LSB n_Engine byte 2 MSB v_Vehicle byte 3 LSB v_Vehicle byte 4 MSB m_AirInlet byte 5 LSB m_AirInlet byte 6 MSB X_AccPedal byte 7 LSB X_AccPedal byte 8 MSB TotalRunTime (4byte, 32bit) byte 11 LSB TotalRunTime byte 12 ST_BrakeLight byte 13 ST_ClutchBrake ";
                    //category = XDFCategories.FlashSave;

                    break;
                case "BoostCal.PIDYSP":
                    description = "Motortoerental afhing ondersteuning voor P, I en D constanten kaarten. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "DisplAdap.LamScannerTab2":
                    description = "Convertiontable voor de berekening van de scanner lambda-waarde wordt gebruikt voor ontwikkeling. ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "BoostCal.PIDXSP":
                    description = "Ondersteuning voor P, I en D constanten kaarten. Verschil tussen de ingestelde waarde en de werkelijke belasting. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "DisplAdap.AD_ScannerSP":
                    description = "Supportpoints voor de berekening van Lambda waarde ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "CruiseCal.M_GradientNeg":
                    description = "Aangezochte gradiënt voor negatieve koppel veranderingen eenheid motorkoppel / s. Resolutie is 1 Nm / s. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.M_GradActual":
                    description = "Ondersteuning voor werkelijke motorkoppel. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "PedalMapCal.X_AutFacTab":
                    description = "De stand van het pedaal aanwijzer in het pedaal kaart worden vermenigvuldigd met deze factor voor de interpolatie is gedaan om te berekenen m_Driver. De factor is gerelateerd aan de snelheid van het voertuig. Gebruikt in de normale modus (geen sport of economisch-modus), voor automatische versnellingsbak wanneer de snelheid van het voertuig signaal is OK. Resolutie is 0.001. ";


                    break;
                case "PedalMapCal.v_VehAutSP":
                    description = "AutFacTab supportpoints (v_Vehicle);. Resolutie is 0,1 km / h;. ";


                    break;
                case "AirMinLimCal.p_AirAmbTab":
                    description = "Offset op minload afhankelijk van de omgevingsdruk ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "PedalMapCal.v_VehManSP":
                    description = "ManFacTab supportpoints (v_Vehicle);. Resolutie is 0,1 km / h;. ";


                    break;
                case "IdleCal.n_RPMOffYSP":
                    description = "Ondersteuning voor stationair gecompenseerd matrix. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "PedalMapCal.X_ManFacTab":
                    description = "De stand van het pedaal aanwijzer in het pedaal kaart worden vermenigvuldigd met deze factor voor de interpolatie is gedaan om te berekenen m_Driver. De factor is gerelateerd aan de snelheid van het voertuig. Gebruikt in de normale modus (geen sport of economisch-modus), voor de handgeschakelde versnellingsbak als de snelheid van het voertuig signaal is OK. Resolutie is 0.001. ";


                    break;
                case "IdleCal.n_EngLOffSP":
                    description = "Rpm gecompenseerd steunpunten voor de berekening van de extra stationair lucht tijdens licht af rpm gecompenseerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "MissfAdap.MissfCntCyl":
                    description = "Aantal missfire detecties op elke specifieke cilinder. Op elk interval is missfire detectie.";
                    //category = XDFCategories.MissfAdap;

                    break;
                case "PedalMapCal.X_CabFacTab":
                    description = "De stand van het pedaal aanwijzer in het pedaal kaart worden vermenigvuldigd met deze factor voor de interpolatie is gedaan om te berekenen m_Driver. De factor is gerelateerd aan de snelheid van het voertuig. Gebruikt in de normale modus (geen sport of economisch-modus), voor converteerbare wanneer de snelheid van het voertuig signaal is OK. Resolutie is 0.001. ";


                    break;
                case "KnkDetCal.U_BattSP":
                    description = "Ondersteuning voor KnkWinOffTab. Resolutie is 0,1 V. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "AirMinLimCal.p_AirAmbSP":
                    description = "Support aanwijzer voor min. belasting ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "IgnOffsCal.Q_ExtraSP":
                    description = "SP voor de extra q_air van de D / N-compensatie. Gebruikt in de DNComp kaart. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IgnOffsCal;

                    break;
                case "TorqueCal.M_CabGearLim":
                    description = "Maximaal motorkoppel limiet op handmatige Converteerbare auto's voor elke versnelling. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.M_ManGearLim":
                    description = "Maximaal motorkoppel limiet voor elk vistuig in de manuele versnellingsbak. Resolutie is 1 Nm. ";


                    break;
                case "HotStCal2.t_RestartSP":
                    description = "Ondersteuning voor hotstart verrijking. Tijd motor is ingeschakeld van. Resolutie is 1 sec. ";
                    //category = XDFCategories.HotStCal2;

                    break;
                case "TqToHiCal.X_AccPedYSP":
                    description = "Ondersteuning voor gaspedaal positie. Resolutie is 0,1%. ";
                    //category = XDFCategories.TqToHiCal;

                    break;
                case "HotStCal2.RestartFacTab":
                    description = "Aanpassing op de hotstart verrijking factor afhankelijk van soaktime (soak_fac). HotStProt2.EnrFac = (HotStProt1.EnrFac-1,000) * soak_fac + 1,000. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.HotStCal2;

                    break;
                case "IdleCal.Q_LOffRpmNeutral":
                    description = "Extra licht uit de lucht tijdens verhoogd tpm, afhankelijk van de werkelijke rpm gecompenseerd voor licht uit te schakelen. Deze tabel wordt gebruikt wanneer de automatische versnellingsbak in de neutrale stand of handgeschakelde versnellingsbak .. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.Q_LOffRpmDrive":
                    description = "Extra licht uit de lucht tijdens verhoogd tpm, afhankelijk van de werkelijke rpm gecompenseerd voor licht uit te schakelen. Deze tabel wordt gebruikt wanneer de automatische versnellingsbak is in station positie. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "AirMinLimCal.v_VehicleSP":
                    description = "Support aanwijzer voor min. belasting ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "MissfCal.n_EngRPMDiffYSP":
                    description = "RPM ondersteuning voor de ontstekingsfouten rpm verschillenvensters filter. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MissfCal.LoadRPMDiffXSP":
                    description = "Draagplatform punten voor de ontstekingsfouten rpm diff filter. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "IdleCal.T_EngineLOffSP":
                    description = "Engine temperatuur supportpoints voor de berekening van extra licht uitgeschakeld rpm gecompenseerd. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IgnJerkCal.n_LimTabSP":
                    description = "Ondersteuning voor motortoerental delta limiet te activeren functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "DiffPSCal.M_EngineSP":
                    description = "De werkelijke motorkoppel supportpoints voor de berekening van de vertragingstijd voor de beperking van het motorkoppel. Resolutie is 1 Nm. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "DiffPSCal.M_LimitTab":
                    description = "Maximaal motorkoppel = f (v_Diff). Max motorkoppel voor de verschillenvensters bescherming systeem afhankelijk van de snelheid differance versnellingsbak tussen snelheid en een voorwiel snelheid. Dit koppel wordt gezonden aan de limiet wiel meester. Resolutie is 1 Nm. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "DiffPSCal.v_DiffSP":
                    description = "Speed differance supportpoints voor de berekening van max. diff bescherming koppel. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "MAFCal.T_TempCoeffTab":
                    description = "Coëfficiënt van temperatuur-factor in de berekening van de luchtstroom uit gasklep gebied. Deze factor is: sqrt (R * T0), waarbij R = 287 en T0 is temperatuur voordat gasklep in Kelvin. ";


                    break;
                case "DiffPSCal.t_LimDelayTab":
                    description = "Koppel beperking vertraging = f (Out.M_Engine). Motorkoppel beperking voor de bescherming van de differentiële vistuig wordt uitgesteld tot een calibrational tijd, afhankelijk van de werkelijke motorkoppel. Resolutie is 1 ms. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "MAFCal.TCompSP":
                    description = "Temperatuur ondersteuning voor p_DiffCoeffTab. ";


                    break;
                case "IdleCal.n_EngLOffNeutral":
                    description = "Licht uit rpm compensatie afhankelijk van de motor temperatuur wanneer de versnellingsbak in de neutrale positie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IgnJerkCal.n_LimTab":
                    description = "Motortoerental delta limiet te activeren functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "KnkDetCal.KnkWinOffTab":
                    description = "Tabel voor hoeveel domino-venster dient te zijn gedaald met een lage batterij. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "LambdaCal.HeatLoadLimTab":
                    description = "Tabel inclusief max. belasting voor sond voorverwarming. Boven deze belasting zal de sond preheater voor zowel sonds worden uitgeschakeld. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "IdleCal.n_EngLOffDrive":
                    description = "Licht uit rpm compensatie afhankelijk van de motor temperatuur wanneer de versnellingsbak in de Drive stand. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "LambdaCal.HeatRpmSP":
                    description = "Rpm steunpunten voor tafel inclusief max. sondheat belasting. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "MaxSpdCal.T_EngineSP":
                    description = "Temperatuur suportpoints voor tabel met max toerental van de motor. Resolutie: 1 ° C. ";
                    //category = XDFCategories.MaxSpdCal;

                    break;
                case "SyncCal.T_EngMultiIgnSP":
                    description = "Engine temperatuur ondersteuning voor SyncCal.n_CombMultiIgnTab. Resolutie: 1 ° C. ";
                    //category = XDFCategories.SyncCal;

                    break;
                case "MaxSpdCal.n_EngLimAir":
                    description = "Deze tabel bevat de maximale toerental van de motor beperkt. Boven deze grens zal de airmass worden verlaagd indien een hogere versnelling wordt gedetecteerd. Het is altijd fuelcut boven deze limiet + 200rpm. Resolutie is 1 tpm. ";
                    //category = XDFCategories.MaxSpdCal;

                    break;
                case "IdleCal.n_EngDiffSP":
                    description = "Ondersteuning voor StartRedFacTab. Verschil tussen de werkelijke en nominale toerental stationair toerental. diff = In.n_Engine - Idle.n_EngineNominal. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IgnStartCal.n_EngXSP":
                    description = "Motortoerental ondersteuning voor lucht-en motor gecompenseerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnStartCal;

                    break;
                case "IgnTempCal.n_EngXSP":
                    description = "Motortoerental ondersteuning voor lucht-en motor gecompenseerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "BoostCal.PWMTempSP":
                    description = "T_AirInlet ondersteuning voor lucht compensatie. Resolutie: 1 ° C. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "OBDAdapRes.Flank_pTank":
                    description = "bevat het aantal flankshifts op de p_fueltank siganl wanneer de p_fueltank signaal ripples met een amplitude boven de limiet. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "IgnStartCal.T_AirSP":
                    description = "Start ontsteking hoek, afhankelijk van airtemperature. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IgnStartCal;

                    break;
                case "OBDAdapRes.TAirAtMaxTime":
                    description = "Langste tijdstip waarop de T_AirInlet fout criteria is fullfilld tijdens deze reis. Deze waarde wordt vastgesteld wanneer de T_AirInlet diag verslagen goed of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.Flank_SensFrq":
                    description = "Aantal Lamba integrator schakelaars sinds lambda controler zijn restared afhankelijk van de motor te stoppen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.Comb_SensFrq":
                    description = "Aantal zelfontbrandingen sinds motor werd gestart. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.T_EngStart":
                    description = "De temperatuur van de koelvloeistof van de motor op ontsteking op. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.t_LambdaStart":
                    description = "De tijd in ms. het duurt om in gesloten lus. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "MissfCal.T_EngXSP":
                    description = "Engine temp ondersteuning voor detecteren belasting niveau kaart ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "OBDAdapRes.evapLeakFact":
                    description = "Bevat de evap. lekkage factor wanneer het evap diag verslagen goed of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.BoostAdap":
                    description = "Adaptie% PWM over APC ventiel. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.m_boostSet":
                    description = "Laad ingestelde waarde voor het stimuleren regelgever als stimulans diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.n_IdleSpeed":
                    description = "Werkelijke toerental van de motor bij stationair diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.t_LowSensPost":
                    description = "De langste tijd tijdens de rit dat de achterste sensor signaal is lim hieronder voor het instellen van achteren sensor lage faultcode. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.U_SensPre":
                    description = "Probe sensor signaal voor katalysator-omzetter ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.n_IdleNom":
                    description = "Nominale stationair toerental van de motor bij stationair diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.BlockAdaption":
                    description = "De AD waarde van de gasklep pot. wanneer het gaspedaal wordt gesloten. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.U_HiSensPost":
                    description = "De hoogste achterste sensor signaal gemeten tijdens de reis. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.mulFuelAdap":
                    description = "Multicative fueladaption waarde als lange termijn diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.missf1000":
                    description = "Aantal misf tijdens 1000revs uit eng. starten vanaf 850 tpm. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.p_AmbAirInl":
                    description = "Bevat de ign.off of ing.on test gegevens van de inlaatdruk sensor. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.p_AmbAirAmb":
                    description = "Bevat de ign.off of ing.on test gegevens van de omgevingsdruk sensor. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.addFuelAdap":
                    description = "Additative fueladaption waarde als lange termijn diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.missfCnt":
                    description = "Max aantal ontstekingsfouten tijdens een blok, deze rijcyclus. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.catEvalValue":
                    description = "Gefilterde deviatie verschil ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.catv6Result":
                    description = "V6 Cat diagnosticeren resultaat. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.catv6catTemp":
                    description = "Catalyst temp tijdens v6 cat. diagnosticeren. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.catv6loadAv":
                    description = "Gemiddelde belasting tijdens v6 katalysator diagnosticeren. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.p_AirInlDiff":
                    description = "Verschil tussen inlaatspruitstuk lucht druk na gasklep en externe luchtdruk. Voor pbefhose Diag. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.I_HeatPost":
                    description = "Werkelijke stroom door de reare sonde. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.I_HeatPre":
                    description = "Werkelijke stroom door het voorste sonde. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.p_AirBefDiff":
                    description = "Verschil tussen luchtdruk voordat gasklep en externe lucht pressure.For pbefhose Diag. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.T_Sync":
                    description = "Engine start temp wanneer motor sync diag verslagen goed of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.adap_add":
                    description = "Bevat de olie adaption. Deze waarde wordt ingesteld wanneer qairinlet diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.adap_mul":
                    description = "Bevat de Mul brandstof adaption. Deze waarde wordt ingesteld wanneer qairinlet diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.p_AmbAirBef":
                    description = "Bevat de ign.off of ing.on test gegevens van de BEF gasklep druksensor. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.T_EngActual":
                    description = "De werkelijke temperatuur van de koelvloeistof van de motor bij het diagnosticeren van rapporten goed of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.n_CombSync":
                    description = "Aantal zelfontbrandingen sinds motor werd gestart. Deze vlag wordt gewist wanneer de motor te herstarten syncronice ontsteking en wordt gebruikt voor het synchroniseren diagnosticeren. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "CruiseCal.v_LimitNormal":
                    description = "v limiet voor het verminderen van de a_Request0 boven v_limit a_Request1 = a_Request0 deze tabel wordt gebruikt als cruise is in staat 4,5,6 of hervatten modus. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_LimitNeg":
                    description = "v limiet voor het verminderen van de a_Request0 boven v_limit a_Request1 = a_Request0 deze tabel wordt gebruikt als acc afwijking negatief is (te snel). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_RequestPos":
                    description = "Support punten voor de snelheid van het voertuig verzocht deze tabel wordt gebruikt als acc afwijking positief (te langzaam). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_RequestNeg":
                    description = "Support punten voor de snelheid van het voertuig verzocht deze tabel wordt gebruikt als acc afwijking negatief (te snel). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "OBDAdapRes.addfueladap":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus de add brandstof ADAP wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "CruiseCal.a_DecRequest":
                    description = "Aangezochte kust decelaration = f (In.v_Vehicle). Resolutie is 0.01984 m / sy. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.a_AccRequest":
                    description = "Aangezochte accelaration = f (In.v_Vehicle). Resolutie is 0.01984 m / sy. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_actual":
                    description = "Steun voor de werkelijke snelheid van het voertuig. Resolutie is 0,1 km / h.";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_LimitPos":
                    description = "v limiet voor het verminderen van de a_Request0 boven v_limit a_Request1 = a_Request0 deze tabel wordt gebruikt als acc afwijking positve (te langzaam). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "OBDAdapRes.knkadaphiwin":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus het domino ADAP in hi-venster wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "CruiseCal.v_DiffXSP":
                    description = "Support punten voor de snelheid van het voertuig verschil (v_Actual - v_Requested). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "IdleCal.t_yaxis":
                    description = "Supportpointer voor StartRedFacMat ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "OBDAdap.FuelLevResult":
                    description = "bevat de 5 meest recente resultaten van de fuellevel sensor Diag. Bevat het gemeten verbruik tijdens de laatste 5 runs van het Diag. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "IdleCal.Q_AirAmbTab":
                    description = "Hoogte schadevergoeding tabel naar stationair lucht. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "GearCal.Ratio":
                    description = "Ratio voor het lokaliseren van de werkelijke versnelling. De ratio wordt berekend als volgt: rpm * 10 = verhouding km / h ";
                    //category = XDFCategories.GearCal;

                    break;
                case "IdleCal.p_AirAmbSP":
                    description = "Ambient druk ondersteuning voor Hoogteverschil schadevergoeding aan stationair lucht. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "ShiftSupCal.M_HystTab":
                    description = "Hysterese gebruikt om te vermijden dat een daling van X_Offset (en een verschuiving up) voordat er motorkoppel beschikbaar te verschuiven up. Deze waarde wordt de extra motorkoppel nodig om over te stappen op een plus offset. Wanneer de max. motorkoppel (omgerekend naar wiel koppel) groter is dan de werkelijke integrator plus hysterese (omgerekend naar wiel koppel), X_Offset is afgenomen (oprit omlaag) om een versnelling op. Resolutie is 1 Nm. ";
                    //category = XDFCategories.ShiftSupCal;

                    break;
                case "OBDAdapRes.mulfueladap":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus de Mul brandstof ADAP wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "CruiseCal.v_ActualYSP":
                    description = "Steun voor de werkelijke snelheid van het voertuig. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "StartCal.t_RestartSP":
                    description = "Ondersteuning voor herstart factor. Tijd motor is ingeschakeld van. Resolutie is 1 sec. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "ShiftSupCal.M_RLoadSP":
                    description = "Ondersteuning voor M_HystTab. Resolutie is 1 Nm. ";
                    //category = XDFCategories.ShiftSupCal;

                    break;
                case "StartCal.RestartFacTab":
                    description = "Herstart factor tabel afhankelijk van de tijd de motor is ingeschakeld van. De herstart factor van invloed restartfuel en beide afterstart verrijkingen. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.StartCal;

                    break;
                case "OBDAdapRes.knkadaplowin":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus het domino ADAP in lo venster wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.airmTEng":
                    description = "Engine temp wanneer airmass vergelijken diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.airmTAir":
                    description = "Air inlaat temp wanneer airmass vergelijken diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.misfatstart":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus het aantal ontstekingsfouten aan het begin wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "SwitchCal.p_AmbientYSP":
                    description = "Omgevingslucht druk ondersteuning voor de lucht druk compensatie compenseren matrix in de schakelaar punt functie. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "OBDAdapRes.starttime":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus de ECMStat.t_Starttime wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.qairCompThr":
                    description = "De gemiddelde waarde van de diff tussen gasklep airmass en HFM airmass. Voor qairinlet diagnosticeren. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.m_boostActAir":
                    description = "Plaats in mg / c wanneer impuls diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.amp_Bypass":
                    description = "Greatest druk voordat gasklep amplitude tijdens de reis. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.qairCompHiThr":
                    description = "De gemiddelde waarde van de diff tussen gasklep airmass en HFM airmass. Van de hi flow deel van de meting. Voor qairinlet diagnosticeren. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.qairAmbAir":
                    description = "In.p_AirAmbient wanneer qairinlet diag verslagen ok of fout. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.idledriveadap":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus de ruststand ADAP in station wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "SAICal.p_AltCompSP":
                    description = "Ondersteuning voor hoge hoogte HCI brandstof compensatie. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAIProt.LoadBuff":
                    description = "Buffer te berekenen gemiddelde MAF.m_AirInletFuel ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "OBDAdapRes.boostadap":
                    description = "Als eerste Mul fueladap gebeurt elke rijcyclus de impuls ADAP wordt opgeslagen. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "SAICal.AltComp":
                    description = "High Altitude HCI brandstof compensatie. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "F_KnkDet.CycleCnt":
                    description = "Deze teller wordt gebruikt voor het tellen van de zelfontbrandingen voordat evaluatie. Begint te tellen bij het domino is aangegeven en stopt na het bereiken van de calibratied evaluatie waarde. Interval is Wanneer stoot is aangegeven en tot en met evaluatie. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "F_KnkDet.U_AveKnk":
                    description = "Gefilterde In.U_Knock. Interval is Every verbranding. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "SAIDiagCal.m_WSHAirSP":
                    description = "Support punten voor Werk winkel Test van HCI ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_WSHAirTab2":
                    description = "Tabel van lambda integartor verschillen in functie van de gemiddelde belasting tijdens de test. Als lambdadiff minder is dan deze tabel HCI pomp werkt met een beperkte capaciteit ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "F_KnkDetAdap.RKnkCntCyl":
                    description = "Variabele aangesloten op de kaart RKnkCntMap. ";


                    break;
                case "F_KnkDetAdap.FKnkCntCyl":
                    description = "Variabele aangesloten op de kaart FKnkCntCyl. ";


                    break;
                case "SAIDiagCal.m_AirSP":
                    description = "Support aanwijzingen voor het melden van schuld intrusief HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_WSHAirTab1":
                    description = "Tabel van lambda integartor verschillen in functie van de gemiddelde belasting tijdens de test. Als lambdadiff minder is dan deze tabel HCI pomp werkt niet ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_AirTab":
                    description = "Tabel voor de beslissing, indien het verschil in lambdaintegrator is groot genoeg om verslag fout ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "TorqueCal.M_1GearTab":
                    description = "Maximumkoppelomvorming op automatische transmissie in de eerste versnelling ";


                    break;
                case "O2SPreCal.t_O2SFrontTime":
                    description = "O2 Sensor voor Cat. Ondersteuning voor de starttijd. Gebruikt voor de tijd om te wachten voordat test van dode sensor. ";
                    //category = XDFCategories.O2SPreCal;

                    break;
                case "TorqueCal.n_Eng1GearSP":
                    description = "Steun voor de berekening van de maximale koppel op de automatische transmissie in de eerste versnelling ";


                    break;
                case "O2SPreCal.T_O2SFrontTemp":
                    description = "O2 Sensor voor Cat. Ondersteuning voor de start gebruikte temperatuur voor de tijd om te wachten vóór test van dode sensor. ";
                    //category = XDFCategories.O2SPreCal;

                    break;
                case "IdleCal.p_AltStartSP":
                    description = "Altidude druk steunpunten voor startende lucht compensatie. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.Q_AltStartTAB":
                    description = "Extra lucht compensatie voor hoge altidudes Deze luchtstroom wordt toegevoegd aan de normale start lucht compensatie. IdleCal.Q_StartOffsTab resultaat + IdleCal.Q_AltStartTAB resultaat = IdleProt.Q_StartOffs. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.T_AirTab":
                    description = "Constant deel stationair regelaar afhankelijk van de temperatuur van de lucht. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.T_AirSP":
                    description = "temperatuur van de inlaatlucht ondersteuning voor T_AirTab. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_RpmDiffLOffSP":
                    description = "Gedaald licht af stationair RPM lucht op grote hoogte ondersteuning tabel ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "TorqueCal.n_EngMinSP":
                    description = "Motortoerental supportpoints voor min ontsteking hoek. Resolutie is 1 tpm. ";


                    break;
                case "StartCal.p_HighAltSP":
                    description = "High Altitude factor steunpunten ";
                    //category = XDFCategories.StartCal;

                    break;
                case "BoostCal.p_DiffILimXSP":
                    description = "Support punten voor de berekening van de compensatie factor voor ruimte matrix aanwijzer. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "IdleCal.n_DeltaTAB":
                    description = "Tabel van waar het gewicht fac voor de DN comp IGN gecompenseerd wordt opgehaald. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_DeltaSP":
                    description = "SP voor de tabel waar het gewicht fac voor de DN comp IGN gecompenseerd wordt opgehaald. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "BoostCal.AntiHowlPresTab":
                    description = "drukverschil nodig is voor de opening van de bypass klep zonder gehuil. Wanneer een negatieve afgeleide van m_Request triggers opening van de bypass-ventiel, het is alleen geopend als de inlaat luchtdruk lager is dan In.p_Air - BoostCal.AntiHowlPresTab waardoor de klep te openen met voldoende druk te vermijden gehuil. Deze vergelijking is gemaakt tussen m_Request en airmass uit limphome airmass kaart wees de hand van de berekende druk boven en motor snelheid ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.p_DiffILimYSP":
                    description = "Support punten voor de berekening van de compensatie factor voor ruimte matrix aanwijzer. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AntiHowlPairSP":
                    description = "Omgevingslucht druk steunpunten voor anti janken functie ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "MonStimCal.Tab2":
                    description = "Tafel voor tafel-toegang in module 101. ";
                    //category = XDFCategories.MonStimCal;

                    break;
                case "MissfCal.T_EngSP":
                    description = "Engine start temp steunpunten in de startDelay tabel. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MonStimCal.TabSta":
                    description = "Start waarden voor toezicht op controle van de 339-software. MonStim.Stimulation = 0 Tab [0] MonStim.Stimulation = 1 Tab [1]. . . MonStim.Stimulation = 7 Tab [7] ";
                    //category = XDFCategories.MonStimCal;

                    break;
                case "MissfCal.startDelayTAB":
                    description = "Bevat de vertraging in zelfontbrandingen voor het activeren van de opsporing van tafel en de transiënte en rpm filters. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "PwmLimitCal.U_Batt":
                    description = "steunpunten voor tafel pwmlimit = f (u_Batt). Resolutie is 0,1 Volt. ";
                    //category = XDFCategories.PwmLimitCal;

                    break;
                case "MonStimCal.TabAns":
                    description = "Antwoord waarden voor toezicht op controle van de 592-software. ComProt.To592MonStim = 0 Tab [0] ComProt.To592MonStim = 1 Tab [1]. . . ComProt.To592MonStim = 7 Tab [7] ";
                    //category = XDFCategories.MonStimCal;

                    break;
                case "KnkAdaptCal.m_AirXSP2":
                    description = "Airmass ondersteuning voor WeightMap. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.n_EngYSP1":
                    description = "Motortoerental ondersteuning voor WeightMap, raam 1. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.fi_OffsetSP":
                    description = "Knock gecompenseerd ondersteuning voor KnkAdaptCal.ConstantTab en KnkDetCal.X_AverageTab. Resolutie is 0.1. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "IgnKnkAdap.fi_OffsetAdap":
                    description = "Aanpassing voor domino adaption. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnkAdap;

                    break;
                case "MissfProt.DetectLevelCyl":
                    description = "Actueel Detectlevel opgeslagen voor elke cilinder. Alleen gebruikt voor ontwikkeling. Cyl AdressOffset 1 0 2 2 3 4 4 6 5 8 10 6 Interval is Iedere tweede revolutie. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "KnkAdaptCal.n_EngYSP2":
                    description = "Motortoerental ondersteuning voor WeightMap, venster 2. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdapt.IgnOffset":
                    description = "Ontstekingssysteem gecompenseerd gebruikt terwijl domino adaption monsters worden bemonsterd. Resolutie 0,1 °. ";
                    //category = XDFCategories.KnkAdapt;

                    break;
                case "KnkAdaptCal.m_AirXSP1":
                    description = "Airmass ondersteuning voor WeightMap. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkDetAdap.KnkCntCyl":
                    description = "Aantal domino detecties op elke specifieke cilinder. Op elk interval is knock detectie. ";
                    //category = XDFCategories.KnkDetAdap;

                    break;
                case "IgnKnkProt.n_Engine":
                    description = "Motortoerental voor het laatst klop. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnKnkProt;

                    break;
                case "FCompCal.FuelCompCyl":
                    description = "Cilinder individuele fuelcompensation factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.FCompCal;

                    break;
                case "IgnKnkProt.KnockNumber":
                    description = "Aantal ononderbroken domino voor elke cilinder. Resolutie: 1. ";
                    //category = XDFCategories.IgnKnkProt;

                    break;
                case "LoadCoCal.n_EngXSP":
                    description = "Motortoerental steunpunten gebruikt in koude wrijving compensatie matrix. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "TransCal.FilterConstAir":
                    description = "Airmass filter constant airmass controle. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletAir old_value -> oud MAF.m_AirInletAir new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstAir Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. istead van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe (800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "MissfCal.T_EngOutOfLimSP":
                    description = "Engine start temp steunpunt tabel voor vertraging ontstekingsfouten als uit milieu-omstandigheden. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "KnkFuelProt.FuelAdjust":
                    description = "Real brandstof correctie factor afhankelijk van de werkelijke domino gecompenseerd. Resolutie is 0.001. ";
                    //category = XDFCategories.KnkFuelProt;

                    break;
                case "IgnKnk.fi_OffNorm":
                    description = "Ontstekingssysteem domino offset waarde zonder correctie voor de index. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "IgnKnk.fi_Offset":
                    description = "Knock gecompenseerd voor elke cilinder. IgnKnk.Index * IgnKnkProt.fi_OffNorm [Cyl] IgnKnk.fi_Offset [Cyl] = 100. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "TempLimPosCal.Airmass":
                    description = "waarden voor de x-as geeft u de tabel TempLimPosCal.table ";
                    //category = XDFCategories.TempLimPosCal;

                    break;
                case "TempLimPosCal.Limit":
                    description = "Positieve beperken het I-deel voor de addional id-controller limit = f (airmass). Resolutie: 1. ";
                    //category = XDFCategories.TempLimPosCal;

                    break;
                case "GearCal.t_SULTurnOffDly":
                    description = "Vertraging uitschakeltijd te vermijden flicering Shift Up Lamp. De. Resolutie van de vertraging zal zijn, afhankelijk van hoe vaak de Shift-up functie heet!. Resolutie is 1 ms. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "MAFCal.ConstT_EngineTab":
                    description = "koelwater temperatuur Const tabel voor de berekening van de belasting-pointer in redundante airmassflow Kaart. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolutie: 1. ";


                    break;
                case "Lambda.IntegratorBuf":
                    description = "Dit buffert bevat de laatste 4 lambdaprot.lambdaint waarden bemonsterd direct na elke stap in de lambda-verordening. Deze monsters kunnen worden gebruikt voor het berekenen van meanvalue van de lambdaintegrator. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "GearCal.m_SULAtGear":
                    description = "Airmass grenzen te activeren Shift Up Lamp. Eerste woord waarde voor de eerste versnelling enz. resolutie is 1 mg / c. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "CruiseComCal.M_Offset":
                    description = "Koppel gecompenseerd aan de werkelijke motorkoppel te beperken integrator. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "KnkAdaptCal.ConstantTab":
                    description = "Constant tabel voor de berekening uit domino referentieniveau. X-ondersteuning punt variabele IgnKnk, fi_OffNorm (knock ontsteking offset). In de tabel worden gebruikt om het domino referentieniveau. De variabele KnkDetProt.Constant is met behulp van deze tabel. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkDetProt.U_KnockCyl":
                    description = "werkelijke waarde op \"U_LevelActual\" voor een specifieke cilinder. (Niet gebruikt door de software, alleen voor de aanvraag). Resolutie is 1 mV. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "IgnOffsCal.fi_OffsCyl":
                    description = "Cilinder individuele ontsteking gecompenseerd gecontroleerde alleen door de toepassing steun. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnOffsCal;

                    break;
                case "KnkDetCal.X_AverageTab":
                    description = "Aantal lezingen voor de berekening van de gemiddelde U_Knock signaal. Resolutie: 1. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "MAFCal.ConstT_AirInlTab":
                    description = "Inlet verzamelleiding luchttemperatuur Const tabel voor de berekening van de belasting-pointer in redundante airmassflow Kaart. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolutie is 0,01. ";


                    break;
                case "CruiseComCal.v_Delta":
                    description = "Support punten voor offset te motorkoppel te beperken integrator. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "TransCal.n_FilterSP":
                    description = "Motortoerental limiet voor keuze van het filter constant. if (In.n_Engine <n_FilterSP [0]) gebruik FilterConstAir [0]; anders als (In.n_Engine <n_FilterSP [1]) gebruik FilterConstAir [1]; anders als (In.n_Engine <n_FilterSP [2]) gebruik FilterConstAir [2]; anders gebruik FilterConstAir [3];. Resolutie is 1 tpm. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "In.ImmoCode":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "LimpIn.ImmoCode":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "TorqueCal.n_EngSP":
                    description = "Motortoerental supportpoints voor achteruitrijdend beperking tabel op automatische auto's. Resolutie is 1 tpm. ";


                    break;
                case "ActualIn.ImmoCode":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LambdaCal.t_HeatFront":
                    description = "Tijd om te draaien voor verwarming met een bepaalde PWM niveau ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.t_HeatRear":
                    description = "Tijd om te lopen achterzijde kachel met een bepaalde PWM niveau ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "Out.ImmoCode":
                    description = "immobilisatiesysteem code uitvoereenheid: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is Event transmittion alleen. ";
                    //category = XDFCategories.Out;

                    break;
                case "TorqueCal.M_ReverseTab":
                    description = "Max koppel tabel voor achteruitrijdend beperking op automatische auto's. Resolutie is 1 Nm. ";


                    break;
                case "OBDAdapRes.lambAdapRich":
                    description = "Aangepast waarde toe te voegen aan mager const. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "OBDAdapRes.lambAdapLean":
                    description = "Aangepast waarde toe te voegen aan Rich const. ";
                    //category = XDFCategories.OBDAdapRes;

                    break;
                case "TorqueCal.ms_ShDoDelay":
                    description = "Out.X_AccPedal worden bevroren gedurende deze tijd na een verschuiving naar beneden. Dit om te voorkomen dat verdere verschuiving in de buurt van de eerste shift naar beneden. Alleen gebruikt in de automatische auto's bij het rijden met cruise control en niet dwingende cruise met gaspedaal. Resolutie is 1 ms. ";


                    break;
                case "BFuelProt.t_InjBasic":
                    description = "Basic inj tijd afhankelijk van fuelmass en injector constant. Resolutie is 1 ons. ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "ThrErrCal.ThrSensSum":
                    description = "Throttle sensoren som schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_ThrottleActual boven ThrADLimit, tweede gegevens indien AD_ThrottleActual boven ThrADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "AdpPrgCal.PurgeTime":
                    description = "Tijd spoellucht moet zijn ingeschakeld voordat brandstof adaption. Resolutie is 1 msec. ";
                    //category = XDFCategories.AdpPrgCal;

                    break;
                case "BFuelProt.m_FuelConsAdd":
                    description = "Brandstof factor toegevoegd sinds toets is ingeschakeld. Deze waarde werd sturen naar VBUS elke seconde en daarna gewist. EENHEID: mg * 8 ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "ThrErrCal.PedSensSum":
                    description = "Pedal sensoren som schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "Angle.ThrottleFilterOld":
                    description = "oud filter uitgang. Resolutie is 1 bit. ";
                    //category = XDFCategories.Angle;

                    break;
                case "BFuel.CatModel":
                    description = "Bevat de BFuelProt.FuelAdjFac en wordt gebruikt in de kat temp model. ";
                    //category = XDFCategories.BFuel;

                    break;
                case "ThrErrCal.PedMutAff":
                    description = "onderlinge pedaal sensor signaal genegenheid. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "MapChkCal.CheckSum":
                    description = "Checksum berekend uit de kalibreringsgegevens bestand, dat kan toenemen airmass vraag. ";
                    //category = XDFCategories.MapChkCal;

                    break;
                case "ThrErrCal.DkSensLim":
                    description = "Throttle sensor D1 uit spec. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_ThrottleActual boven ThrADLimit, tweede gegevens indien AD_ThrottleActual boven ThrADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "MapChk.CheckSum":
                    description = "Checksum berekend in de achtergrond van de gegevens die kunnen verhogen airmass vraag. ";
                    //category = XDFCategories.MapChk;

                    break;
                case "AdpPrgCal.AdaptTime":
                    description = "Tijd brandstof adaptatie moet zijn ingeschakeld nadat spoellucht zijn uitgeschakeld. Resolutie is 1 msec. ";
                    //category = XDFCategories.AdpPrgCal;

                    break;
                case "CurrToHiCal.Time":
                    description = "Max toegestane tijd met hoge stroomsterkte in mechanische pechstrategie. Eerste keer gebruikt, indien de stand van het pedaal is meer dan 50% open, anders zijn tweede keer gebruikt. Resolutie is 1 msec. ";
                    //category = XDFCategories.CurrToHiCal;

                    break;
                case "AdpPrgCal.TimeFirstAdap":
                    description = "Wanneer deze tijd verstreken zijn normale tijd scheduler voor spoellucht brandstof / adaptatie geldig, zelfs als eerste brandstof adaptatie niet zijn gebeurd. Resolutie is 1 msec. ";
                    //category = XDFCategories.AdpPrgCal;

                    break;
                case "ThrErrCal.AdapSumErr":
                    description = "Pedal sensoren som overschrijdt aangepast bedrag. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "TorqueCal.t_gearShAct":
                    description = "Tijd dat filter actief moet zijn. Resolutie is 100 ms. ";


                    break;
                case "PowInhProt.I_Sum":
                    description = "De som van de lezingen van de huidige tijdens een test bij de H-brug wordt geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "PowInhProt.I_Average":
                    description = "De gemiddelde stroomsterkte tijdens een test bij de H-brug wordt geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "PowInhProt.I_Average2":
                    description = "De gemiddelde stroomsterkte tijdens een test bij de H-brug is NIET geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "PowInhProt.I_Sum2":
                    description = "De som van de lezingen van de huidige tijdens een test bij de H-brug is NIET geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "AdpFuelProt.LambAdd":
                    description = "Lambda int wordt toegevoegd aan dit variabel. Gebruikt voor het evalueren adp Mul factor. ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "AdpFuelProt.LambAdd2":
                    description = "Lambda int wordt toegevoegd aan dit variabel. Gebruikt voor het evalueren adp toevoegen factor. ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "TorqueProt.t_gearShift":
                    description = "Tijd bij de filtering van start ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "AdpFuelProt.AddFuelAdapt":
                    description = "Additative fueladaption waarde. Resolutie is 0,01 mg / c.";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "Block.ms_Counter":
                    description = "Variabele die slaat de ECMStat.msCounter indien ontsteking en voornaamste relais is uitgeschakeld. 30 seconden later het blok adaptatie zal worden geactiveerd. Resolutie is 1 ms. Interval is een keer als adaptatie is actief tijdens de macht uit. ";
                    //category = XDFCategories.Block;

                    break;
                case "TorqueCal.T_EngSP":
                    description = "Temperatuur ondersteuning voor minimaal toegestane absolute ontstekingsstijdstip tabel. Resolutie: 1 ° C. ";


                    break;
                case "TorqueProt.ms_ShDown":
                    description = "laatste systeem TCM tijd een verschuiving naar beneden. Resolutie is 1 ms. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.ms_ShUp":
                    description = "laatste systeem tijd TCM een verschuiving op. Resolutie is 1 ms. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "BFuelAdap.V_FuelConsumed":
                    description = "Milli liter brandstof verbruikt, omdat deze gegevens uit het App7 of van de ECU was aangesloten de eerste keer. Wanneer contactsleutel is uitgeschakeld is het Out.Vol_FuelConsumed toegevoegd aan deze gegevens. Resolutie 1 ml. ";
                    //category = XDFCategories.BFuelAdap;

                    break;
                case "ThrErrCal.PedSensLim":
                    description = "Pedal sensor beperken schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "AdpFuelCal.t_AfterCloop":
                    description = "Na lambda controle zijn in een gesloten lus meest dit moment zijn gepasseerd voordat zij de mogelijkheid te hebben aangepast. Resolutie is 1 msec. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "TorqueCal.ms_ShUpDelay":
                    description = "Out.X_AccPedal worden bevroren gedurende deze tijd na een verschuiving op. Dit om te voorkomen dat verdere verschuiving van dichtbij op de eerste shift up. Alleen gebruikt in de automatische auto's bij het rijden met cruise control en geen dwingende cruise met gaspedaal. Resolutie is 1 ms. ";


                    break;
                case "BFuelProt.t_InjActual":
                    description = "Actueel inj tijd, resultaat van fundamentele injectie tijd en batterij compensatie. Resolutie is 1 ons. ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "BlockPoti2.ms_Counter":
                    description = "Variabele die slaat de ECMStat.msCounter indien ontsteking en voornaamste relais is uitgeschakeld. 10 seconden later het blok adaptatie van poti2 zal worden geactiveerd. Resolutie is 1 ms. Interval is een keer als adaptatie is actief tijdens de stroom uit. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "App7Cal.X_AccPedReqLow":
                    description = "Dit is de lage stand van het pedaal tijdens een AirmassStep lopen. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "PwmLimitCal.PwmLimit":
                    description = "PWM limiet voor de H_bridge. Overgedragen aan de 592 cpu 139 => 100% PWM 0 => 0% PWM tussen deze waarden is de functie lineair. Resolutie is 1%. ";
                    //category = XDFCategories.PwmLimitCal;

                    break;
                case "CCRatioProt.FilterOutOld":
                    description = "Filter output oud voor werkelijke overbrengingsverhouding zal alleen gebruikt worden voor de omrekening van M_Wheel te M_Engine ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "ShiftSupport.ms_TapUp":
                    description = "laatste tijd TAP UP-knop werd ingedrukt. Gebruikt voor het voorkomen van toename van Out.X_AccPedal dicht bij een TAP UP. Een aantal van TAP UP kan leiden tot een onnodige verschuiving omlaag. ";
                    //category = XDFCategories.ShiftSupport;

                    break;
                case "IgnIdleCal.fi_Idle":
                    description = "Idle ontsteking constant V6. Eerste waarde cyl 1,3 en 5, tweede waarde cyl 2,4 en 6. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "CruiseProt.M_DeltaWheel":
                    description = "Delta wiel koppel op basis van delta acc. en van het voertuig constant. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_DelWheelLim":
                    description = "Limited delta wiel koppel gebaseerd op delta acc. en van het voertuig constant. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "DiffPSProt.t_StartTimer":
                    description = "Tijd als koppel beperking werd actief (ST_LimActive == 1). Resolutie is 1 ms. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "DiffPSProt.t_Delay":
                    description = "Delay time = f (Out.M_Engine) Tijd voor koppel beperking is geactiveerd. Resolutie is 1 ms. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "KnkDetCal.T_EngKnkCntrl":
                    description = "Water temp tabel voor de berekening van airtemp afhankelijk watertemp limiet voor de aanwerving van domino controle vervangt de eerder vastgestelde limiet van 60 graden. Toegevoegd door MEA-TLN 2001-02-28. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "CruiseProt.M_RoadLoad0":
                    description = "Ongefilterde weg belasting. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_WheelActual":
                    description = "Actueel wiel koppel baseren op de werkelijke motorkoppel en gearratio. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_Accelerate":
                    description = "Actueel wiel koppel op basis van de werkelijke acceleratie en voertuig constant. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_DelWheel50":
                    description = "Delta wiel koppel op basis van ACC-delta en van het voertuig constant voor 50ms lus (M_DelWheelLim gedeeld door 2). Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CCRatioProt.FilterOut":
                    description = "Filter uitgang voor werkelijke overbrengingsverhouding zal alleen gebruikt worden voor de omrekening van M_Wheel te M_Engine ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "CruiseProt.M_DelWheelOld":
                    description = "Limited delta wiel koppel gebaseerd op delta acc een lus voorheen. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "ActualIn.t_TDC_TDC":
                    description = "Tijd tussen twee bovenste dode centrum, bijvoorbeeld tussen het trekken zelfontbrandingen EENHEID: ons / timerticks MAX: 65000 MIN: 0 TRANS: V = P. resolutie is 7,6 ons. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "CruiseProt.M_WheelIntegr":
                    description = "Delta wiel koppel integrator. Integreert de M_DelWhell50 elke 50ms. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "WUSPCal.MinTemp":
                    description = "Min beginnen temperatuur voor actieve WUSP (werking automatische versnellingsbak te gebruiken sport programma). Resolutie: 1 ° C. ";
                    //category = XDFCategories.WUSPCal;

                    break;
                case "ThrErr2Cal.AdapSumErr":
                    description = "Pedal sensoren som overschrijdt aangepast bedrag. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErr2Cal.PedMutAff":
                    description = "onderlinge pedaal sensor signaal genegenheid. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErr2Cal.ThrSensSum":
                    description = "Throttle sensoren som schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_ThrottleActual boven ThrADLimit, tweede gegevens indien AD_ThrottleActual boven ThrADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "IgnProt.fi_Ramp":
                    description = "Hoog. Resolutie oprit factor. Resolutie is 0.001 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "MissfCal.n_CombAftSync":
                    description = "Aantal zelfontbrandingen na synchronisatie de ontstekingsfouten filter toe te schrijven aan voorbijgaande en druk is uitgeschakeld indien niet acc pedaal wordt ingedrukt. Resolutie is 1 verbranding. Interval is Every verbranding. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "ThrErr2Cal.PedSensSum":
                    description = "Pedal sensoren som schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Eerste gegevens worden gebruikt als AD_AccPedal1 boven PedalADLimit, tweede gegevens indien AD_AccPedal1 boven PedalADLimit. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErrCal.t_HBShortCut":
                    description = "Spring naar de 12V in de H-brug. Wanneer de 592-verslag \"DK Snelkoppelingsmenu\" de 339 zal deze tijd wachten voordat de fout \"Spring in de H-brug\" wordt gemeld. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "KnkAdaptCal.AdaptPeriod":
                    description = "Min tijd tussen aanpassingen. Resolutie is 1 msec. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "BoostProt.IBuff":
                    description = "Buffer I, deel gebruikt voor de berekening. Update: elke 10 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BypassCal.releaseTime":
                    description = "Max tijd tussen de inlaat en vrijgegeven pedaal. Resolutie is 1 ms. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "CruiseProt.M_DefOffset":
                    description = "Negatieve compenseren de standaardstijl roadload zal worden gebruikt voor het initialiseren van de M_WheelIntegr. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SwitchProt.t_SwitchErr":
                    description = "Debouncing timer voor een veiligheidsschakelaar fout. Resolutie is 1 ms. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "CruiseProt.msCounterOld":
                    description = "ECMStat.msCounter laatste 100 ms lus. Resolutie is 5 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "ADC2Cal.MaxTime":
                    description = "Als verschil van 1 pedaal signaal zijn naar hoog langer dan deze tijd zijn systeem gaan in limphome. Resolutie is 0 tot 65535 msec. ";
                    //category = XDFCategories.ADC2Cal;

                    break;
                case "OBDCal.EnableOBD2Limit":
                    description = "Als deze vlag is ingesteld, outofOBD2 limieten worden ingesteld wanneer omgevingsdruk is dan 78 kPa of enigne of lucht temp lager is dan -7 C. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "OBDCal.StopPlotDelayTime":
                    description = "De tijd in MS voordat de standaard plot wordt gestopt (delaytime) na een diagnose heeft een fout. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "OBDCal.evapTestTimeLim":
                    description = "maximale tijd de mode8 evaptest kan worden geactiveerd. Na dit tijdstip is het opschonen en purgediag zijn vrijgegeven. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "SwitchProt.t_EngStartOff":
                    description = "Debouncing timer voor gebied gecompenseerd vanwege Start lucht. Resolutie is 1 ms. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "CruiseProt.v_FilterOut":
                    description = "Filter uitgang voor de werkelijke snelheid van het voertuig. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_FilterOut":
                    description = "Filter uitgang voor werkelijke accelaration. Resolutie is 0.06944 m / s ^ 2. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "Angle.ThrottleFilterIn":
                    description = "Filter input absolute gasklep vraag de input komt uit de productie van de advertentie-ruimte conversie. Resolutie is 1 bit. ";
                    //category = XDFCategories.Angle;

                    break;
                case "CruiseProt.m_FilterOut":
                    description = "Filter uitgang voor werkelijke airmass gevraagd van de cruise control. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "BoosDiagCal.APCOkTime":
                    description = "Tijd met voldaan OK totdat OK is gemeld. Resolutie is 1 ms. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "SwitchCal.t_EngStartOff":
                    description = "Veiligheidsschakelaar moet beperkt het tijdstip beginnen compenseren .. De SwitchCal.A_StartOffset wordt toegevoegd aan de kaart SwitchCal.A_SwitchPoint zolang: - het begin actief is (Idle.StartAirMode> 0) en - de tijd die sinds toerental van de motor bereikt SwitchCal.n_EngStartOff minder dan SwitchCal.t_EngStartOff. Resolutie is 1 ms. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "KnkDetCal.T_InletAirXSP":
                    description = "Air temp supportpoints voor de berekening van airtemp afhankelijk watertemp limiet voor de aanwerving van domino controle vervangt de eerder vastgestelde limiet van 60 graden. Toegevoegd door MEA-TLN 2001-02-28. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "SAIProt.t_Ramp_time":
                    description = "gebruikt voor de evaluatie rampfactors in HCI. Bank 1. Resolutie is 1 ms. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "CruiseProt.M_FiltRoad":
                    description = "Actual filter uitgang voor weg belasting. Resolutie is 0,1 / 256 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_FiltRoadOld":
                    description = "Oud-filter uitgang voor weg belasting. Resolutie is 0,1 * 256 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_DefLowRange":
                    description = "Standaard roadload - M_DefOffset. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_DefaultRoad":
                    description = "Standaard roadload van de kaart. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SwitchCal.n_EngXSP":
                    description = "Engine ondersteuning voor de lucht druk compensatie compenseren matrix in de schakelaar punt functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "CruiseProt.M_DeltaRoad":
                    description = "Deviaition tussen de standaard en de werkelijke roadload. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SwitchCal.t_SwitchErr":
                    description = "Debouncing tijd te ontdekken dat het pedaal geeft de status inactief en het gaspedaal status niet stationair dat betekent dat de beperking niet werkt. Na deze debouncing tijd zal het systeem verder in E_Gas pechsituaties. Resolutie is 1 ms. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "AdpFuelAdap.AddFuelAdapt":
                    description = "Additative fueladaption waarde. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.AdpFuelAdap;

                    break;
                case "SwitchProt1.t_SwitchErr":
                    description = "Debouncing timer voor switch fout. Resolutie is 10 ms. ";
                    //category = XDFCategories.SwitchProt1;

                    break;
                case "Cruise.M_RoadLoad1":
                    description = "Gefilterde weg belasting. Resolutie is 0,1 Nm. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "ADCCal.MaxTime":
                    description = "Als verschil van 1 pedaal signaal zijn naar hoog langer dan deze tijd zijn systeem gaan in limphome. Resolutie is 0 tot 65535 msec. ";
                    //category = XDFCategories.ADCCal;

                    break;
                case "SAIProt.t_timestamp":
                    description = "Tijd stempel te berekenen gemiddelde belasting ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIDiagCal.IntLim":
                    description = "Het gebied voor de lambdaberekening integrator tijdens Lean Klem wordt gebruikt in de diagnose. Dit is de grens waar de fout is ingesteld. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "BrLghtDiagCal.t_HighLim":
                    description = "Hoge limiet timer voor Diag. Resolutie is 1 s. ";
                    //category = XDFCategories.BrLghtDiagCal;

                    break;
                case "IdleCal.v_VehicleLim":
                    description = "Voertuig snelheidsbeperkingen gebruikt om te interpoleren tussen station en neutrale C-deel en adaptatie-gedeelte. Onder de lage snelheid is het station gedeeltelijk gebruikt en vooral de hoge limiet is het neutrale deel gebruikt. Deze functie is alleen geactiveerd op automatische versnellingsbakken. Resolutie van 1 km / h. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "BrLghtDiagCal.t_LowLim":
                    description = "Lage limiet timer voor Diag. Resolutie is 1 s. ";
                    //category = XDFCategories.BrLghtDiagCal;

                    break;
                case "ECMStat.n_CombWhenSync":
                    description = "De verbranding tellen als motor gesynchroniseerd. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "AirctlData.iPartRest":
                    description = "I-deel van de rest-airmass controller. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "LambdaCal.t_FCutDelay":
                    description = "Vertraging na FCut.ST_FuelCut gegaan laag Achteroverbouw Sond Adaptie is toegestaan opnieuw. Resolutie is 1 ms. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "In.t_TDC_TDC":
                    description = "Tijd tussen twee bovenste dode centrum, bijvoorbeeld tussen het trekken zelfontbrandingen EENHEID: ons / timerticks MAX: 65000 MIN: 0 TRANS: V = P. resolutie is 7,6 ons. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.In;

                    break;
                case "DNCompProt.C_Part":
                    description = "Tijdelijke opslag van de constante en adaptatie deel van de stationair lucht. Uit deze tabel de werkelijke constante ADAP stationair lucht is geïnterpoleerd, afhankelijk van de snelheid van het voertuig. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "DNCompProt.RampStart":
                    description = "vlag voor de start tijd stempel van een oprit. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "ECMStat.n_Combustion":
                    description = "Aantal zelfontbrandingen sinds motor werd gestart. Deze vlag wordt gewist wanneer de motor zijn nog steeds voor 200ms. Resolutie is 1 verbranding. Interval is Every verbranding. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ThrErrProt.t_PWMClose50":
                    description = "Filter tijd gebruikt ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ECMStat.msCounter":
                    description = "Milliseconden teller reset uit van de ECU. Resolutie is 1 msec. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.n_CombustionSync":
                    description = "Aantal zelfontbrandingen sinds motor werd gestart. Deze vlag wordt gewist wanneer de motor te herstarten syncronice ontsteking en wordt gebruikt voor het synchroniseren diagnosticeren. Resolutie is 1 verbranding. Interval is Every verbranding. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ThrErrProt.t_PWMClose40":
                    description = "Filter tijd gebruikt ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.t_PWMClose30":
                    description = "Filter tijd gebruikt ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "LoadCoCal.n_EngSP":
                    description = "Motortoerental supportpoints voor ElLoad compensatie speedramp tijd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "ThrErrProt.t_PWMClose70":
                    description = "Filter tijd gebruikt ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.t_PWMClose60":
                    description = "Filter tijd gebruikt ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "FCut.FuelCutCyl":
                    description = "Vermeld fuelcut op een bepaalde cilinder. 1 - Brandstof gesneden. 0 - Geen brandstof gesneden. ";
                    //category = XDFCategories.FCut;

                    break;
                case "LoadCoProt.t_ACOnOff":
                    description = "Tijd wanneer CMD_ACRelay zal worden ingeschakeld of uitgeschakeld. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LambdaProt.LastCombNr":
                    description = "Voor het opslaan van kam teller wanneer LambdaInt. heette laatste ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.t_AdapDelay":
                    description = "Wanneer msCounter = t_AdapDelay is het tijd om zich aan te passen. Resolutie is 1 ms. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "Out.t_Injection":
                    description = "Actueel inj tijd. Resolutie is 1 ons. Interval is Every verbranding. ";
                    //category = XDFCategories.Out;

                    break;
                case "Lambda.n_NumberOfSwitch":
                    description = "Aantal Lamba integrator schakelaars sinds lambda controler zijn restared afhankelijk van de motor te stoppen. Resolutie is 1 msec. Interval is elke 5 msec. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "LambdaProt.t_HeatRear":
                    description = "De achterzijde kachel zal voor deze keer met een bepaalde PWM. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.t_HeatFront":
                    description = "De voorzijde kachel zal voor deze keer met een bepaalde PWM. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.N_BefHWStamp":
                    description = "EcmStat.n_combustion stempel vóór HW controleren teller. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.t_FCutDelay":
                    description = "Wordt gebruikt om vertraging achterzijde sond trim na Trans.ST_Active = 1. Resolutie is 1 ms. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LimpIn.t_TDC_TDC":
                    description = "Tijd tussen twee bovenste dode centrum, bijvoorbeeld tussen het trekken zelfontbrandingen EENHEID: ons / timerticks MAX: 65000 MIN: 0 TRANS: V = P. resolutie is 7,6 ons. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "MAFProt.t_TDC_TDC_Filt":
                    description = "Gefilterde keer in TPU timerticks voor de berekening van de belasting signaal. De ongefilterde waarde is \"ActualIn.t_TDC_TDC\". ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "KnkDetProt.Time":
                    description = "Tijd variabele gebruikt voor knockadaption Toegevoegd door Mea-TLN 2001-02-28 ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "DNComp.IgnRampStart":
                    description = "vlag voor de start tijd stempel van een oprit. ";
                    //category = XDFCategories.DNComp;

                    break;
                case "AirCtrlCal.t_PedReceRel":
                    description = "Maximale tijd na vrijgegeven gaspedaal wanneer het gaspedaal I-deel wordt verwijderd als de delta gasklep druk is groot (negatief). Resolutie is 1 msec. ";


                    break;
                case "KnkDetProt.Time2":
                    description = "Tijd variabele gebruikt voor knockadaption Toegevoegd door Mea-TLN 2001-02-28 ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "LambdaProt.RestartCnt":
                    description = "Counter te controleren wanneer gesloten lus integrator moet herstarten. Update: elke 250 msec. Resolutie is 1 msec. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "CatDiagCal.runTime":
                    description = "Geeft aan hoe lang de motor moet draaien voordat de katalysator kunnen worden geëvalueerd. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "KnkDet.KnockCyl":
                    description = "Geef aan welke cilinder motor is kloppen op. Als de byte is nul niet kloppen wordt gedetecteerd. Byte 1 - Cyl 1 Byte 2 - Cyl 2 Byte 3 .. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDet;

                    break;
                case "LambdaProt.TimeCnt":
                    description = "Counter for controleren of de belasting is te hoog gedurende een langere periode. Update: elke verbranding. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "AftStProt2.DelayCnt":
                    description = "Verbrandingscyclus tellen waarde wanneer volgende decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "OBDAdap.triggerValue":
                    description = "Geeft aan welke waarde van de gekozen variabele die zal leiden tot de plott om te stoppen. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "KnkAdaptCal.RpmRefSP":
                    description = "Support punten voor de berekening van de werkelijke domino referentiewaarde. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "ROMChecksum.TopOffFlash":
                    description = "Adres voor de top van het flash-geheugen. Deze gegevens worden copyed uit de PIArea en wordt gebruikt tijdens de herprogrammering van Flash-geheugen. ";
                    //category = XDFCategories.ROMChecksum;

                    break;
                case "MissfProt.n_Comb1":
                    description = "Tijdelijke variabele gebruikt in de detectsiganl diag blok tellen. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "MissfProt.n_Comb2":
                    description = "Tijdelijke variabele gebruikt in de detectsiganl diag blok tellen. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "AftStProt1.DelayCnt":
                    description = "Verbrandingscyclus tellen waarde wanneer volgende decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "KnkAdaptCal.Max2Filt":
                    description = "Aangepast domino referentiewaarden boven deze limiet worden gebruikt zonder rechtstreeks verband met eerdere waarden (geen filtering). Toegevoegd door MEA-TLN. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "OBDAdap.SAIIntrm_air":
                    description = "De gemiddelde waarde van MAF.m_AirInletFuel tijdens de intrusief test ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "KnkAdaptCal.RefValueWind":
                    description = "RefValueWind zijn mediane waarde van U_Knock voor hoge en lage stoten adaption venster. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "OBDAdap.SAIMainDiagIntA":
                    description = "Het gebied van Lambda.Int tijdens belangrijkste test ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "KnkAdaptCal.RefValueMin":
                    description = "Min toegestane waarde voor RefValueWind. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "IdleCal.DNIndSampleTime":
                    description = "Hoe vaak wordt de versnellingsbak rpm worden bemonsterd op te sporen die het vistuig begint te worden geactiveerd. Resolutie: 1. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "OBDAdap.offsetTime":
                    description = "Maatregelen de offset in de ptank Diag. Dit resultaat wordt bewaard als adaptatie gegevens te kunnen verstrekken aan de SCANTOOL om de nieuwste testresult. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "PLT.PlottPosition":
                    description = "Standpunt waren monster buffer moeten zijn bijgewerkt. 0 = 66 graden. BTDC. 1 = Voor ontsteking meester. 2 = Na ontsteking meester. 3 = Voor brandstof meester. 4 = Na brandstof meester. 5 = Voor domino meester. 6 = Na knock meester. 7 = Voordat missfire meester. 8 = Na missfire meester. 9 = Voordat sync master. 10 = Na synchronisatie meester. ";
                    //category = XDFCategories.PLT;

                    break;
                case "ECMStat.FuelFlow":
                    description = "Brandstofstroom in g / h. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "QAirDiagCal.timeToStart":
                    description = "Accum tijd dat de snelheid van het voertuig moet worden aangehaald AirmDiagCal.speedToStart voordat een diagnose wordt uitgevoerd. Resolutie is 1 ms. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "TorqueProt.t_AccumIgnRed":
                    description = "Geaccumuleerde ontsteking vermindering tijd. Toegevoegd wanneer vermindering actief is en afgetrokken als er geen ontsteking actief is. Aftrekken kan worden verminderd door een gekalibreerde factor. Resolutie is 1 ms. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "ThrErrProt.t_msFreeze":
                    description = "Bevroren tijd. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "IgnLOffCal.n_CombAftSt":
                    description = "De LightOff ontsteking is niet geactiveerd voordat dit aantal zelfontbrandingen nadat de motor gestart is overschreden. Dit om problemen op te lossen met een aantal auto's die stopt vanwege LightOff ontsteking te vroeg na de motor start. Resolutie is 1 verbranding. ";


                    break;
                case "ComData.Fr592Failure":
                    description = "Fout status van 592: ";
                    //category = XDFCategories.ComData;

                    break;
                case "SAIDiagCal.n_WSHEngLow":
                    description = "Rpm ondergrens om workshop diagnosticeren van HCI. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.errorLimD":
                    description = "Max diff wanneer muladap is meer dan lim ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.minLoad":
                    description = "Min pAirinlet tijdens de proef. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.T_WSHEng":
                    description = "Temperatuur dat moet worden overschreden om de workshop diagnosticeren van HCI ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.WSHLambdaLow":
                    description = "onderste grens van de lambdaintegrator om workshop diagnosticeren van HCI ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.errorLimE":
                    description = "Max diff wanneer muladap tussen grenzen. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.t_IntRepeat":
                    description = "Minimum tijd tussen de volgende twee indringende tests. Resolutie is 1 s. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_WSHAirHigh":
                    description = "Laad bovengrens om workshop diagnosticeren van HCI. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.n_WSHEngHigh":
                    description = "Rpm bovengrens om workshop diagnosticeren van HCI. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_WSHAirLow":
                    description = "Laad ondergrens om workshop diagnosticeren van HCI. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.WSHLambdaHigh":
                    description = "bovengrens van de lambdaintegrator zodat workshop diagnosticeren van São ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "In.U_Egr":
                    description = "EGR klep functie eenheid: Volt MAX: 5 MIN: 0 TRANS: V = P * 1000. Resolutie is 0.001. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "BypassCal.p_MinBefStart":
                    description = "Min waarde voor druk voor gas op het moment dat de test begint. OPMERKING: tijdens de test, wanneer de monsters worden genomen, de druk is toegestaan te laten vallen onder deze limiet. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.waitForSamp":
                    description = "Vertraging tijd vóór de bemonstering als de voorwaarden is voldaan. Resolutie is 1 ms. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.okAmp":
                    description = "OK zal worden gerapporteerd na 3 opeenvolgende monsters onder deze amplitude. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.pAirDer":
                    description = "Eerste verzamelleiding airpressure drop tijdens 10ms. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "Missf.nrOfCountedMisfire":
                    description = "Counts de nr ontstekingsfouten dat is niet gefilterd of rpm diff gefilterd. ";
                    //category = XDFCategories.Missf;

                    break;
                case "QAirDiagCal.errorLimB":
                    description = "Min diff wanneer muladap minder dan lim. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "MissfProt.XPos":
                    description = "xpos gebruikt in ontstekingsfouten counter kaarten. Voortdurend bijgewerkt. Schaalinterval wordt Achtergrond. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "MissfCal.m_AirHiLimFTP":
                    description = "Hi lim belasting voor de aanduiding van de FTP-gebied. Resolutie: 1. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MissfProt.YPos":
                    description = "ypos gebruikt in ontstekingsfouten counter maps.Continously bijgewerkt. Schaalinterval wordt Achtergrond. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "MissfCal.n_EngHiLimFTP":
                    description = "Hi rpm lim voor de aanduiding van de FTP-gebied. Resolutie: 1. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "Missf.M_Limit":
                    description = "Koppel beperking door de ontstekingsfouten diagnosticeren. Resolutie is 1 Nm. ";
                    //category = XDFCategories.Missf;

                    break;
                case "QAirDiagCal.hiWindowLim":
                    description = "Boven deze lim de hi meanvalue wordt berekend. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "BrLghtDiagCal.v_LowLim":
                    description = "Voertuig snelheid lage limiet voor Diag. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.BrLghtDiagCal;

                    break;
                case "KnockDiagCal.errorLevel":
                    description = "Het maximum dat de In.U_KnockDiag signaal moet zijn dan voor het melden van fouten. Resolutie is 1 mV. ";
                    //category = XDFCategories.KnockDiagCal;

                    break;
                case "O2HeatPostCal.I_HighLim":
                    description = "Diagnostische limiet voor de achterste sond warmte stroom. Als de stroom wordt abowe dit zal deze grens een fout worden ingesteld. Resolutie is 1 mA. ";
                    //category = XDFCategories.O2HeatPostCal;

                    break;
                case "MissfCal.LoadLimRPMDiff":
                    description = "De belasting mag niet hoger zijn dan deze waarde. Zo ja RPMDiff de evaluatie wordt genegeerd. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MissfCal.RPMLimRPMDiff":
                    description = "De RPM mag niet hoger zijn dan deze waarde. Zo ja RPMDiff de evaluatie wordt genegeerd. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "BrLghtDiagCal.v_HighLim":
                    description = "snelheid van het voertuig hoge limiet voor Diag. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.BrLghtDiagCal;

                    break;
                case "QAirDiagCal.maxRPM":
                    description = "Max RPM voor diagnosticeren. Resolutie is 1 tpm. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.speedToStart":
                    description = "snelheid van het voertuig moet worden boven deze lim voor een cal tijd (AirmDiagCal.timeToStart) voordat een diagnose wordt uitgevoerd. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.minArea":
                    description = "Min toegestaan citaat tussen pbefthrottle en pinlet voor het uitvoeren van de diagnose. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.devRPMtime":
                    description = "Minimum RPM voor stuurprogramma controleren, dient de duur van deze tijd totdat de controle is verricht. Resolutie is 1 ms. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.devFaultTime":
                    description = "Storingen gemeld uit apparaatstuurprogramma moet deze laatste tijd totdat schuld is gerapporteerd. Resolutie is 1 ms. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.devRPMmin":
                    description = "Minimum RPM voor check uitgevoerd door apparaatstuurprogramma. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "O2HeatPreCal.I_LowLim":
                    description = "Diagnostische limiet voor de voorkant sond warmte stroom. Als de huidige lager is dan deze grens zal dit een fout worden ingesteld. Resolutie is 1 mA. ";
                    //category = XDFCategories.O2HeatPreCal;

                    break;
                case "QAirDiagCal.maxPDiff":
                    description = "Max toegestaan citaat tussen pbefthrottle en pinlet voor het uitvoeren van de diagnose. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.T_MinForTest":
                    description = "Minimale motor temp voor de test. Resolutie: 1 ° C. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.T_MaxForTest":
                    description = "Maximaal motor temp voor de test. Resolutie: 1 ° C. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "O2HeatPreCal.I_HighLim":
                    description = "Diagnostische limiet voor de voorkant sond warmte stroom. Als de stroom wordt abowe dit zal deze grens een fout worden ingesteld. Resolutie is 1 mA. ";
                    //category = XDFCategories.O2HeatPreCal;

                    break;
                case "QAirDiagCal.maxArea":
                    description = "Max toegestaan citaat tussen pbefthrottle en pinlet voor het uitvoeren van de diagnose. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.minPDiff":
                    description = "Min toegestaan citaat tussen pbefthrottle en pinlet voor het uitvoeren van de diagnose. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "O2HeatPostCal.I_LowLim":
                    description = "Diagnostische limiet voor de achterste sond warmte stroom. Als de huidige lager is dan deze grens zal dit een fout worden ingesteld. Resolutie is 1 mA. ";
                    //category = XDFCategories.O2HeatPostCal;

                    break;
                case "QAirDiagCal.devAThrottle":
                    description = "Max gasklep gebied verschil voor steady state. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.LambdaHigh":
                    description = "hoger venster van de lambdaintegrator om intrusief HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.LambdaLow":
                    description = "Neder-venster van de lambdaintegrator om intrusief HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.devPInlet":
                    description = "Max pAirinlet verschil voor steady state. Resolutie is 1%. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.m_AirLowMain":
                    description = "Neder-venster van de last om de belangrijkste HCI diagnos";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.m_AirHighMain":
                    description = "hoger venster van de last om de belangrijkste HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "MissfAdap.MissfTotCntCat":
                    description = "Aantal Totaal Cat OVERHEAT missfire detecties op alle cilinders. Op elk interval is missfire detectie. ";
                    //category = XDFCategories.MissfAdap;

                    break;
                case "QAirDiagCal.adapLimC":
                    description = "Max muladap voor foutrapport. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.N_CombStart":
                    description = "Het aantal zelfontbrandingen na hardware check heeft gemeld ok dat de meting van de \"Ruimte van de curve\" zal beginnen ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.errorLimF":
                    description = "Min diff wanneer muladap tussen grenzen. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.firstSteady":
                    description = "Airmass steady state tijd vóór het begin van de proef bij de voorwaarden voldaan. Resolutie is 1 sec. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.v_Vehicle":
                    description = "snelheid van het voertuig moet gelijk of groter is dat deze parameter om de intrusief HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "In.v_Vehicle3":
                    description = "Recht voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "SAIDiagCal.T_Eng":
                    description = "Temperatuur dat moet worden overschreden om de intrusief HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.adapLimA":
                    description = "Min muladap voor foutrapport. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "SAIDiagCal.t_IntTestDura":
                    description = "Tijd dat intrusieve diag dwingt HCI pomp en de klep voor de evaluatie is verricht. Resolutie is 1 ms. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "QAirDiagCal.minRPM":
                    description = "Min RPM voor diagnosticeren. Resolutie is 1 tpm. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "QAirDiagCal.bypassSteady":
                    description = "Airmass steady state tijd vóór het begin van de proef bij de voorwaarden voldaan. Resolutie is 1 sec. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "MissfCal.CVSErrorLim":
                    description = "Limiet voor het vaststellen van CVS ontstekingsfouten schuld. Voorbeeld: 3% ontstekingsfouten = 60 ontstekingsfouten in deze limiet. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "QAirDiagCal.maxLoad":
                    description = "Max pAirinlet tijdens de proef. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.QAirDiagCal;

                    break;
                case "In.n_Wheel":
                    description = "Wheel snelheid EENHEID: rpm MAX: 3000 min: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "MissfCal.nrOfMisfLambda":
                    description = "Nr van misfires in een bock voordat de vlag FaultIn.MisfireLAmbda is ingesteld en de lambda-regeling gaat in open lus. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "SAIDiagCal.n_EngHighMain":
                    description = "hoger venster van het toerental van de motor om de belangrijkste HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "SAIDiagCal.IntrIntLimit":
                    description = "Diag limiet voor intrusief HCI test. Resolutie is 0,01%. ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "In.U_Batt":
                    description = "Batterijvoltage EENHEID: V MAX: 25,5 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "SAIDiagCal.n_EngLowMain":
                    description = "Neder-venster van het toerental van de motor om de belangrijkste HCI diagnos ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "In.v_Vehicle":
                    description = "Links voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.FcTimerLim":
                    description = "Geeft de waarde voor de brandstof gesneden timer te bereiken, voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.LimReadyTimer":
                    description = "Geeft de waarde voor de timer klaar te bereiken, voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.IdleTimerLim":
                    description = "Geeft de waarde voor de stationaire timer te bereiken, voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.HlTimerStep":
                    description = "Geeft de waarde waarmee de hltimer is decresed bij lage belasting heeft plaatsgevonden tijdens een calibratable tijd. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "In.U_Knock":
                    description = "Geïntegreerde spanning voor domino detectie EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "In.Q_AirInlet":
                    description = "Massa luchtstroom sensor (gram / sec) Eenheid: g / s MAX: 340 MIN: 2 TRANS: V = P * 100. Resolutie is 0,01. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "EvapDiagCal.V_FuelMax":
                    description = "De max volume in de tank te laten testen. ";
                    //category = XDFCategories.EvapDiagCal;

                    break;
                case "CatDiagCal.Ox2FiltCoef":
                    description = "Filter coeficient zuurstof sens.2. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "EvapDiagCal.V_FuelMin":
                    description = "De min volume in tank te laten testen. ";
                    //category = XDFCategories.EvapDiagCal;

                    break;
                case "In.U_KnockDiag":
                    description = "Diagnostische domino-niveau voor de detectie van snelkoppeling tussen ECS en cassette EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "In.t_IgnDetect1":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.StartTimerLim":
                    description = "Geeft de waarde voor de start de timer te bereiken, voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.HlTimerLim":
                    description = "Geeft de waarde voor de hl timer te bereiken, voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "In.t_IgnDetect2":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "EvapDiagCal.T_LoLim":
                    description = "De min. temp voor het uitvoeren van een evap test. ";
                    //category = XDFCategories.EvapDiagCal;

                    break;
                case "In.p_AirInlet":
                    description = "inlaatlucht van de motor druk EENHEID: kPa MAX: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "In.T_Engine":
                    description = "Temperatuur koelvloeistof motor EENHEID: (C Max: 150 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.T_AirInlet":
                    description = "temperatuur van de inlaatlucht EENHEID: (C Max: 140 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.p_AirAmbient":
                    description = "Luchtdruk luchtdruk EENHEID: kPa MAX: 120 MIN: 50 TRANS: V = P * 10. Resolutie is 0.1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.RestartLim":
                    description = "Dit is de waarde die de catdevdiffilt mag niet groter zijn dan te kunnen melden ok. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "EvapDiagCal.T_HiLim":
                    description = "De max. temp voor het uitvoeren van een evap test. ";
                    //category = XDFCategories.EvapDiagCal;

                    break;
                case "CatDiagCal.ABSFiltCoef":
                    description = "Filter coeficient voor het filteren van ABS signaal. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.Ox2SignalLim":
                    description = "De OX2 signaal mag niet onder deze limiet te lang. Dat geeft aan dat er geen zuurstof meer gebufferd met de kat als gevolg van een niet perfect lambda regelgeving. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.StableTimeLim":
                    description = "Geeft de tijd dat de voorwaarden, behalve dutycycle en periodtime moet OK tijdens een cal. tijd. (CatDiagCal.StableTimeLim) ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.EvalFiltCoef":
                    description = "Filter coeficient voor het filteren van het resultaat zijn van katalysator diagnosticeren lopen. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.HlAirFlowMin":
                    description = "Geeft de minimale luchtstroom naar increment de hoge belasting timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "In.n_GearBoxIn":
                    description = "Toezending input rpm (turbine snelheid) Gebruikt detecteert wanneer de belasting wordt gewijzigd voor de motor, versnelling is ingeschakeld. Resolutie is 1 tpm. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "PAirInletDiagCal.loadLim":
                    description = "De maximaal toegestane belasting voor het doen van de vrijgegeven pedaal test. ";
                    //category = XDFCategories.PAirInletDiagCal;

                    break;
                case "PAirInletDiagCal.rpmLim":
                    description = "De minimaal toegestane toerental voor het doen van de vrijgegeven pedaal test. ";
                    //category = XDFCategories.PAirInletDiagCal;

                    break;
                case "CatDiagCal.CoolTempLim":
                    description = "Geeft de minimale motor water temp voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.LoadHi":
                    description = "Geeft de maximale belasting voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.LoadFiltCoef":
                    description = "Coëfficiënt in de filter voor de delta belasting voorwaarde. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "PBefHoseDiagCal.n_EngLim":
                    description = "Min tpm voor de start van de test. ";
                    //category = XDFCategories.PBefHoseDiagCal;

                    break;
                case "CatDiagCal.AutLoadHi":
                    description = "Voor automatische auto's! Geeft de maximale belasting voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.AutRpmTimerLo":
                    description = "Voor automatische auto's! Geeft de minimale rpm niet tellen de lage belasting timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.RpmTimerHi":
                    description = "Geeft de minimale toerental voor het verminderen van de lage belasting timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.RpmTimerLo":
                    description = "Geeft de minimale rpm niet tellen de lage belasting timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.AutRpmLo":
                    description = "Voor automatische auto's! Geeft de minimale rpm voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.AutRpmTimerHi":
                    description = "Voor automatische auto's! Geeft de minimale toerental voor het verminderen van de lage belasting timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "FuelLevelCal.decrease":
                    description = "Minimale brandstof niveau daling tussen brandstof niveau \"Checkpoints\". Resolutie is 0,1 liter. ";
                    //category = XDFCategories.FuelLevelCal;

                    break;
                case "FuelLevelCal.distance":
                    description = "Driving afstand tussen brandstof niveau controleposten. Resolutie is 1 km. ";
                    //category = XDFCategories.FuelLevelCal;

                    break;
                case "In.v_GearBoxOut":
                    description = "Toezending uitvoersnelheid Gebruikt door de Differentiële Protection System. Resolutie is 0,1 km / h. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.LoadTimerHi":
                    description = "Geeft de minimale last voor de vermindering van de lowload timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "In.I_Egas":
                    description = "Werkelijke stroom van h_bridge. Resolutie is 0.001 A. Interval is elke 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.LoadLo":
                    description = "Geeft de minimale last voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.AutLoadLo":
                    description = "Voor automatische auto's! Geeft de minimale last voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.LoadTimerLo":
                    description = "Geeft de minimale belasting voor het niet tellen van de lowload timer. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "FuelLevelCal.v_diff":
                    description = "Max daling in v_vehicle tijdens de voorwaarde tijd voor het nemen van een fuellevel referentie. ";
                    //category = XDFCategories.FuelLevelCal;

                    break;
                case "FuelLevelCal.maxFuel":
                    description = "Max brandstof niveau niet het dubbele van de afstand voor de evaluatie. ";
                    //category = XDFCategories.FuelLevelCal;

                    break;
                case "CatDiagCal.RpmLo":
                    description = "Geeft de minimale rpm voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CatDiagCal.AutRpmHi":
                    description = "Voor automatische auto's! Geeft het maximale toerental voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "In.n_Engine":
                    description = "Motortoerental EENHEID: rpm MAX: 8000 MIN: 25 (set van 10, wanneer de motor begint te bewegen) TRANS: V = P. resolutie is 1. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.In;

                    break;
                case "CatDiagCal.RpmHi":
                    description = "Geeft het maximale toerental voor de evaluatie van de katalysator. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "BoosDiagCal.m_FaultDiff":
                    description = "Min differece tussen gevraagde vuldruk en de werkelijke vuldruk te melden fout tijdens impuls regelgeving. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.m_ThrErrDiff":
                    description = "Min differece tussen m_Request en m_AirInlet verslag uit te brengen fout tijdens gasklep regelgeving. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.APCErrTime":
                    description = "Tijd tot storing wordt gemeld in boost regelgeving. Resolutie is 1 ms. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "DetSigDiagCal.n_LowOkLim":
                    description = "Aan verslag OK op Detecteer signaal diagnosticeren er moet een bepaalde nr van hoge detecteert per blok. Een blok is DetSigDiagCal.n_CombDetBlock. De OK-grens is tussen n_LowOkLim en n_HighOkLim. Laag lim is de quote van: (nr van verbranden in een blok * 2 (nr van det signalen)) / nr van cyl - een Tolerans voor transiënte filter. ";
                    //category = XDFCategories.DetSigDiagCal;

                    break;
                case "BoosDiagCal.ThrErrTime":
                    description = "Tijd tot storing wordt gemeld in gasklep regelgeving. Resolutie is 1 ms. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.m_OkDiff":
                    description = "Maximaal diff tussen m_Request en m_AirInlet verslag uit te brengen op OK. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.n_MinEngOk":
                    description = "Min RPM voor OK-test ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.n_MaxEngOk":
                    description = "Max RPM voor OK-test ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.p_BefOkLimit":
                    description = "Maximale druk voordat gasklep te melden op OK. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.p_BefLimit":
                    description = "De test wordt uitgevoerd als de druk voor de gasklep boven deze waarde. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.iPartLimit":
                    description = "De test wordt uitgevoerd wanneer het I-deel van gesloten gasklep verordening is onder deze waarde. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.m_OkMinReq":
                    description = "Minimale m_Request voor de OK-toets. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "DetSigDiagCal.n_CombHi":
                    description = "Aantal zelfontbrandingen met constante hoge detecteren signaal om schuld vlag Missf.ST_Det1HighCount of Missf.ST_Det2HighCount aan te geven voor het detecteren signaal diagnoses te melden fout wanneer ontsteking wordt uitgeschakeld. ";
                    //category = XDFCategories.DetSigDiagCal;

                    break;
                case "O2SensPostCal.RpmLo":
                    description = "De min motor rpm voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.v_FCutHigh":
                    description = "De min snelheid van het voertuig voor speciale fuelcut voor achterzijde sensor diagnosticeren wanneer FCut is niet actief. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.RpmHi":
                    description = "De max. motor toerental voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "In.AD_PedalPot1":
                    description = "Pedaal positie AD waarde van Master CPU (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "O2SensPostCal.LambdaMin":
                    description = "De minimaal toegestane Lambda.LambdaInt te lopen O2SensPost Laag Diagnose. Resolutie is 0,01. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.FuelFacMax":
                    description = "De max. Purge FuelFac voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.LoadLo":
                    description = "De min. belasting van de motor voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.LoadHi":
                    description = "De max. belasting van de motor voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.FuelFacMin":
                    description = "De min Purge FuelFac voor ADAP vanaf de achterzijde 02 sensor. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "BoosDiagCal.IFacMaxAPC":
                    description = "Als I-deel in het stimuleren gesloten lus groter is dan deze waarde, storing kan worden gemeld. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "MissfCal.U_AdapMaxLim":
                    description = "Adaptie Max limiet. Wanneer de kat sond spanning abow deze grens, de lambda-adaptatie (mager constante) zal worden geactualiseerd. Resolutie is 1 mV. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "BypassCal.okHigh":
                    description = "Manifold druk veel verandering ten opzichte van deze compensatie boven de lucht druk om een lagere waarde een aantal keren om verslag uit te brengen op OK. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.okLow":
                    description = "Manifold de druk veel verandering ten opzichte van een hogere waarde aan deze waarde (dat is een relatieve compensatie aan de lucht onder druk) een aantal malen om verslag uit te brengen op OK. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "In.U_O2SensFront":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min: 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.In;

                    break;
                case "In.AD_PedalPot2":
                    description = "Pedaal positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.X_AccPedal":
                    description = "Pedal functie eenheid:% MAX: 130 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "BypassCal.okDrops":
                    description = "Aantal keren dat de verzamelleiding druk moet vervolgkeuzelijst een gekalibreerde bedrag te melden op OK. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.limAmp":
                    description = "Amplitude drempel voor de fout. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "In.I_HeatO2SensRear":
                    description = "Achter zuurstofsensor kachel huidige EENHEID: mA MAX: 6000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.p_FuelTank":
                    description = "Luchtdruk luchtdruk EENHEID: Pa MAX: 2500 MIN: -2500 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.I_HeatO2SensFront":
                    description = "Front zuurstofsensor kachel huidige EENHEID: mA MAX: 6000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "BypassCal.intervals":
                    description = "Aantal tussenpozen het monster tijd dient te worden verdeeld in. OPMERKING: dit moet een factor van het aantal monsters. Ex: monsters = 36 = een interval van (2, 3, 4, 6, 9, 12, 18) ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "MissfCal.U_AdapMinLim":
                    description = "Adaptie Min limiet. Wanneer de kat sond spanning lager is dan deze grens, de lambda-adaptatie (rijk constante) zal worden geactualiseerd. Resolutie is 1 mV. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "In.U_O2SensRear":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.In;

                    break;
                case "In.AD_SlavePedalPot1":
                    description = "Pedaal positie AD waarde uit Slavenmarkt CPU (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "SpeedDiagCal.accumPeriod":
                    description = "Tijdens deze periode kunnen de nosignal tijd is opgelopen. Wanneer deze tijd de nosignal tijd gereset wordt. ";
                    //category = XDFCategories.SpeedDiagCal;

                    break;
                case "SpeedDiagCal.loadLim":
                    description = "Lagere belasting limiet op te sporen geen snelheid signaal. ";
                    //category = XDFCategories.SpeedDiagCal;

                    break;
                case "SpeedDiagCal.RPMLim":
                    description = "Lagere RPM limiet op te sporen geen snelheid signaal. ";
                    //category = XDFCategories.SpeedDiagCal;

                    break;
                case "BoosDiagCal.ErrMaxMReq":
                    description = "Wanneer APC fout wordt ontdekt de m_Request moet worden beperkt tot deze waarde. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.m_ReqDiff":
                    description = "Als m_Request delta (BoostProt.ReqDerivata100ms) lager is dan deze limiet, APC faultindication is uitgeschakeld. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "BoosDiagCal.APCErrTime2":
                    description = "Tijd tot storing wordt gemeld in boost regelgeving als m_Request delta (BoostProt.ReqDerivata100ms) onlangs is onder BoosDiagCal.m_ReqDiff. Resolutie is 1 ms. ";
                    //category = XDFCategories.BoosDiagCal;

                    break;
                case "SpeedDiagCal.T_EngLim":
                    description = "Lagere T_Engine limiet op te sporen geen snelheid signaal. ";
                    //category = XDFCategories.SpeedDiagCal;

                    break;
                case "IdleDiagCal.n_EngDiff":
                    description = "Als het toerental van de motor verandert meer dan + / - deze limiet tijdens fout evaluatie zal de fout timer wordt gewist. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleDiagCal;

                    break;
                case "BypassCal.samples":
                    description = "Aantal monsters genomen voor analyse. Deze zijn genomen elke 10ms. Ongeveer 6 monsters voor elke ronde omdat dit normaal gesproken heeft een frequentie van 14-18 Hz. OPMERKING: waarden over 128 zijn niet toegestaan. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "BypassCal.filtCoeff":
                    description = "Filter coëfficiënt gebruikt voor low-pass filtering van de druk-before-gasklep golf. Resolutie is 1 / 1000. ";
                    //category = XDFCategories.BypassCal;

                    break;
                case "IdleDiagCal.m_MaxAtLow":
                    description = "Max airmass te melden LOW stationair toerental. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.IdleDiagCal;

                    break;
                case "IdleDiagCal.maxLowOffset":
                    description = "Maximale negatieve differece tussen motor RPM en nominale motor RPM. ";
                    //category = XDFCategories.IdleDiagCal;

                    break;
                case "IdleDiagCal.errTime":
                    description = "Tijd om verslag uit te brengen fout als stationair toerental van de grenzen. ";
                    //category = XDFCategories.IdleDiagCal;

                    break;
                case "O2SensFreqCal.m_CntUpAut":
                    description = "Laad limiet te verhogen teller. Automatische versnellingsbak ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "EvapDiagCal.ramp0LoLim":
                    description = "Als de ramp0 lager is dan deze waarde PURGE_ERROR zal beissued op proef 1, anders test wordt afgebroken. ";
                    //category = XDFCategories.EvapDiagCal;

                    break;
                case "O2SensFreqCal.m_CntDwMan":
                    description = "Laad maximum afname teller. Handgeschakelde versnellingsbak ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "O2SensFreqCal.m_CntDwAut":
                    description = "Laad maximum afname teller. Automatische versnellingsbak ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "In.AD_ThrottlePot1":
                    description = "Throttle positie AD waarde (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "O2SensFreqCal.m_CntUpMan":
                    description = "Laad limiet te verhogen teller. Handgeschakelde versnellingsbak ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "In.p_AirBefThrottle":
                    description = "inlaatlucht van de motor druk EENHEID: kPa MAX: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.In;

                    break;
                case "O2SensFreqCal.PreNoComb1":
                    description = "O2 Sensor Freq Pre Cat. Geen van zelfontbrandingen voordat evaluatie. ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "O2SensFreqCal.PreNoComb2":
                    description = "O2 Sensor Freq Pre Cat. Geen van zelfontbrandingen te trigg een nieuwe evaluatie en de grenswaarde vast te stellen schuld van de gefilterde verbranding teller. ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "O2SensFreqCal.lambdaLim":
                    description = "Lambda integrator limiet. Gebruikt voor zowel + / - beperken. ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "OBDCal.T_AirHiOBDLim":
                    description = "Als de airinlet temp boven deze limiet uit de diag vlag zal worden gereset. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "OBDCal.p_AirLoOBDLim":
                    description = "Als de druk omgevingstemperatuur lager is dan deze limiet uit de diag vlag zal worden ingesteld. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "OBDCal.T_EngHiOBDLim":
                    description = "Als de motor temp boven deze limiet uit de diag vlag zal worden gereset. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "OBDCal.p_AirHiOBDLim":
                    description = "Als de druk omgevingstemperatuur hoger is dan deze limiet van de diag-vlag worden gereset. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "O2SensPostCal.T_EngLim":
                    description = "De min. temp motor om achterste sensor signaal laag test. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "OBDCal.T_EngLoOBDLim":
                    description = "Als de motor temperatuur lager is dan deze limiet uit de diag vlag zal worden ingesteld. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "O2SensPostCal.m_FCutHigh":
                    description = "Deze belasting van de motor moet worden overschreden om een nieuwe fuelcut. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "In.A_Throttle2":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "O2SensPostCal.v_FCutLow":
                    description = "De min snelheid van het voertuig voor speciale fuelcut voor achterzijde sensor diagnosticeren wanneer FCut actief is. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "OBDCal.T_AirLoOBDLim":
                    description = "Als de airinlet temperatuur lager is dan deze limiet uit de diag vlag zal worden ingesteld. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "O2SensPostCal.n_FCutLow":
                    description = "De min motor rpm toegestaan voor speciale fuelcut voor achterzijde sensor diagnosticeren wanneer FCut actief is. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.n_FCutHigh":
                    description = "De min motor rpm toegestaan voor speciale fuelcut voor achterzijde sensor diagnosticeren wanneer FCut is niet actief. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.m_FCutLow":
                    description = "De min. belasting van de motor toegestaan voor speciale fuelcut voor achterzijde sensor diagnosticeren wanneer FCut actief is. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensPostCal.U_DeadLim":
                    description = "De max. spanning op de achterkant van de sensor als de dood sensor test wordt uitgevoerd. Boven of gelijk zijn aan deze lim en fout wordt gemeld. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "O2SensFreqCal.LoadCntLim":
                    description = "Een voorwaarde voor freq diag te activeren ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "O2SensFreqCal.FreqFltCo":
                    description = "Filter coeff voor Low Pass filter op freq diag comustion counter ";
                    //category = XDFCategories.O2SensFreqCal;

                    break;
                case "In.A_Throttle":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "O2SensPostCal.t_FCutLim":
                    description = "De minuten tijd met actieve fuelcut om de achterste sensor signaal in de achterste sensor dode test. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "In.AD_ThrottlePot2":
                    description = "Throttle positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "FCutCal.RatioLim":
                    description = "Actueel overbrengingsverhouding limiet te schakelen fuelcut. Als de vlag \"FCutCal.ST_CutOnLowGear\" niet is ingesteld zal de fuelcut niet honingbij gedaan indien de werkelijke versnelling hoger is dan deze limiet, of indien een hogere versnelling niet wordt gedetecteerd. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "SyncProt.lastCyl":
                    description = "Cilinder aantal voor de laatste detectie. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.SyncProt;

                    break;
                case "FCutCal.n_EngLimHigh":
                    description = "Enginespeed moet boven deze grens te kunnen fuelcut. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.n_EngLimLow":
                    description = "Onder dit toerental van de motor zal fuelcut niet actief. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "TransCal.m_diffoffset":
                    description = "om te worden gebruikt als compensatie voor de volgende voorwaarde: Laat negatieve transiënte handeling wanneer: (MAF.m_AirInletFuel + TransCal.m_diffoffset)> m_Request. Resolutie is 1 mg / C. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.n_DelayLim":
                    description = "Belove deze motor maximumsnelheid zijn vertraging (TransCal.Delay) niet zijn gebruikt, en de werkelijke vertraging zijn gelijk aan 0. (Hysterse van 50 rpm). Resolutie is 1 tpm. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "FCutProt.n_Comb":
                    description = "werkelijke aantal zelfontbrandingen na een fuelcut ";
                    //category = XDFCategories.FCutProt;

                    break;
                case "FCutProt.FuelFactor":
                    description = "Actueel factor voor na fuelcut verrijking. Interval is ieder tot vorig supportpoint inch ";
                    //category = XDFCategories.FCutProt;

                    break;
                case "FCutCal.m_AirInlLow":
                    description = "Wanneer belasting bel \"w deze limiet en is hieronder m_AirInlHigh vóór de fuelcut, laat fuelcut ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.v_VehicleHigh":
                    description = "opnieuw inschakelen brandstof snijden wanneer de snelheid van het voertuig overschrijdt deze speedlimit ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.t_FCutDelay":
                    description = "kortste tijd tussen twee opeenvolgende fuelcuts ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.m_AirInlHigh":
                    description = "Enable fuelcut weer bij de belasting heeft overschreden deze waarde ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.m_AirInletLimit":
                    description = "Als de \"MAF.m_AirInletFuel\" hoger is dan deze limiet tijdens m_AirInletTime zullen de fuelcut worden geactiveerd (druk bewaker). ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.T_EngLim":
                    description = "Fuelcut zal niet worden alowed onder deze motor temperatuurgrens. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.v_VehicleLow":
                    description = "Uitschakelen brandstof knippen onder deze speedlimit en niet mogelijk is totdat v_Vehicle bereikt FCutCal.v_VehicleHigh ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutCal.m_AirInletTime":
                    description = "Tijd \"MAF.m_AirInletFuel\" moet honingbij hoger dan limiet voor het activeren van fuelcut. (Druk afscherming) ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "TransCal.T_DelayLim":
                    description = "Belove dit water temperatuurgrens zijn vertraging (TransCal.Delay) niet zijn gebruikt, en de werkelijke vertraging zijn gelijk aan 0. Resolutie: 1 ° C. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "SyncCal.n_LimMultiIgn":
                    description = "Rpm limiet te gaan vanaf multiign naar normale IGN. ";
                    //category = XDFCategories.SyncCal;

                    break;
                case "SyncCal.t_DetectLimit":
                    description = "Min limiet voor detecteren signalen tijdens de synchronisatie van de motor. Resolutie is 1 ons. ";
                    //category = XDFCategories.SyncCal;

                    break;
                case "TransProt.ActualFactor":
                    description = "Actueel voorbijgaande factor voor de berekening van het brandstofverbruik bedrag. Interval is Every verbranding. ";
                    //category = XDFCategories.TransProt;

                    break;
                case "Trans.m_ReqDelCopy":
                    description = "Airmass verzoek delta gebruikt om trigg brandstof transiënte aanpassing. Deze variabele is een kopie van de \"TransProt.m_ReqDelta\". Na de \"TransProt.m_ReqDelta\" wordt gekopieerd zal worden goedgekeurd tot de volgende update van de 10ms routine. Interval is Every verbranding. ";
                    //category = XDFCategories.Trans;

                    break;
                case "LambdaCal.m_MaxLoadHyst":
                    description = "Wanneer belasting limiet (Lambda.Status = 3 of 1) actief is deze waarde wordt toegevoegd aan de beperking van het laadvermogen. Door dit te doen een hysteres wordt gecreëerd om oscillerend rond belasting beperken. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.T_RearSondI":
                    description = "temperatuurgrens voor Achteroverbouw Sond P Trim-Part, ingeschakeld als In.T_Engine boven T_RearSondI. Resolutie is 1 C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.RampOutFac":
                    description = "Deze factor wordt gebruikt om oprit lambdaint op nul bij het verlaten van gesloten lus. Gebruikt wanneer LambdaProt.ST_RampOutInt is ingesteld. Ex: RampOutFac = 5 -> lambda int is gedaald met 5% eenheden elke kam. Resolutie is 0,01%. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "TransCal.AccMul":
                    description = "Extra verrijking voor transiënte aanpassing vóór oprit naar 1,000 beginnen. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.RetMul":
                    description = "Extra enleanment voor transiënte aanpassing vóór oprit naar 1,000 beginnen. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.AccMulConst":
                    description = "Aantal zelfontbrandingen vóór de oprit naar 1.000 zou kunnen beginnen. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.RetMulConst":
                    description = "Aantal zelfontbrandingen vóór de oprit naar 1.000 zou kunnen beginnen. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransProt.AccTriggLim":
                    description = "Actueel trigglimt voor acceleratie verrijking. RABGE: 0 - 2000 mg / c ";
                    //category = XDFCategories.TransProt;

                    break;
                case "TransProt.m_ReqDelta":
                    description = "Actueel airmass verzoek delta berekend elke 10ms. Deze delta is opgelopen tot hij is goedgekeurd door de brandstofinvoer transiënte routine die wordt opgeroepen om de verbranding. Elk interval is 10 ms. ";
                    //category = XDFCategories.TransProt;

                    break;
                case "TransProt.m_ReqFilt":
                    description = "Gebruikte m_Request na filter. Schaalinterval wordt elke 20 msec. ";
                    //category = XDFCategories.TransProt;

                    break;
                case "TransProt.DecTriggLim":
                    description = "Actueel trigglimt voor vertraging enleanment. RABGE: -2000 - 0 mg / c ";
                    //category = XDFCategories.TransProt;

                    break;
                case "AdpFuelProt.Counter250_2":
                    description = "Counter for controleren of hij zijn 250 zelfontbrandingen alvorens het op te slaan lambdaintegrator (Add. factor). ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "AdpFuelProt.Counter250":
                    description = "Counter for controleren of hij zijn 250 zelfontbrandingen alvorens het op te slaan lambdaintegrator (Mul. factor). ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "AdpFuelProt.AdpCounter2":
                    description = "Counter for controleren of zij zijn geselecteerd aantal zelfontbrandingen af te slaan lambdaintegrator (Voeg factor). ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "AdpFuelProt.AdpCounter":
                    description = "Counter for controleren of zij zijn geselecteerd aantal zelfontbrandingen af te slaan lambdaintegrator (Mul factor). ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "KnkAdaptCal.RpmLow2":
                    description = "Laag toerental van de motor limiet voor venster 2. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.LoadHigh2":
                    description = "Hoge belasting limiet voor venster 2. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.LoadLow":
                    description = "Lage belasting limiet voor venster 1. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.RpmHigh2":
                    description = "Hoog motortoerental limiet voor venster 2. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.LoadHigh":
                    description = "Hoge belasting limiet voor venster 1. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "AdpFuelProt.MulFuelAdapt":
                    description = "Multicative fueladaption waarde. Resolutie is N 0,01%. ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "KnkAdaptCal.RpmLow":
                    description = "Laag toerental van de motor limiet voor venster 1. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.LoadLow2":
                    description = "Lage belasting limiet voor venster 2. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkFuelProt.WeightFac1":
                    description = "Gewicht factor tussen echte gecompenseerd en max. toegestane gecompenseerd. Resolutie is 1%. ";
                    //category = XDFCategories.KnkFuelProt;

                    break;
                case "KnkFuelCal.LambLim":
                    description = "Limit wanneer systeem moet draaien in een open lus. Resolutie is 0.001. ";


                    break;
                case "KnkFuelProt.WeightFac2":
                    description = "Procent van de brandstof verrijking we moeten gebruiken .. Resolutie is 1%. ";
                    //category = XDFCategories.KnkFuelProt;

                    break;
                case "KnkFuelProt.fi_MaxOffset":
                    description = "Max ontsteking gecompenseerd afhankelijk kloppen zonder brandstof verrijking. Resolutie 0,1 °. ";
                    //category = XDFCategories.KnkFuelProt;

                    break;
                case "KnkFuelProt.FuelTab":
                    description = "Tabel waarde voor brandstof correctiecoëfficiënt. Resolutie is 0.001. ";
                    //category = XDFCategories.KnkFuelProt;

                    break;
                case "KnkAdaptCal.FacMaxHigh":
                    description = "Wanneer lage stoot verwijzing adaptatie zijn gedaan zijn hoog domino verwijzing adaption gecontroleerd. Min toegelaten waarde = Laag adaptatie * FacMinHigh / 100. Max toegestane waarde = Laag adaptatie * FacMaxHigh / 100. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "Purge.FuelFac":
                    description = "De fuelfactor van de spoellucht functie. Resolutie is 0,01%. ";
                    //category = XDFCategories.Purge;

                    break;
                case "KnkAdaptCal.v_VehicleLim":
                    description = "Voertuig snelheidsbeperking voor domino verwijzing adaption. De vehiclespeed moet boven deze grens te handhaven een domino verwijzing adaption. Deze limiet geldt voor zowel windows. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.FacMinHigh":
                    description = "Wanneer lage stoot verwijzing adaptatie zijn gedaan zijn hoog domino verwijzing adaption gecontroleerd. Min toegelaten waarde = Laag adaptatie * FacMinHigh / 100. Max toegestane waarde = Laag adaptatie * FacMaxHigh / 100. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "Purge.Valve":
                    description = "aftapkraan PWM. Resolutie is 0,1%. ";
                    //category = XDFCategories.Purge;

                    break;
                case "LambdaProt.LoadPointer":
                    description = "Laad aanwijzer voor xaxis voor integrator kaarten. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.HeatLoadLim":
                    description = "Werkelijke belasting limiet voor sond voorverwarming. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.RpmPointer":
                    description = "Rpm aanwijzer voor ordinaat orden voor integrator kaarten. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.N_BeforeHW":
                    description = "Aantal verbranding te wachten voordat harde ware controleren. dwz U_lambda_probe <300mV EN U_lambda_probe> 600mV. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.N_TransDelay":
                    description = "Verbrandingscyclus vertraging na HW controle uit te voeren open lus tijdens transiënten. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.N_SAIDelay":
                    description = "Aantal verbranding duren voordat gesloten lus is toegestaan. Gebruikt in plaats van CombNrTab en CombNrTab2. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.NrComb2":
                    description = "Aantal verbranding te wachten na hardware-controle. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.DecRamp":
                    description = "Lean oprit waarde van integrator. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.DecStep":
                    description = "Lean stap waarde van integrator. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.IncStep":
                    description = "Rich stap waarde van integrator. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.DecComb":
                    description = "Aantal zelfontbrandingen tussen sonde switch to rijk en afname stap. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.ST_StepDone":
                    description = "Vermeld als stap is gedaan voor integrator. Update: elke verbranding. Resolutie is ON / OFF. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.ST_Rich":
                    description = "Vermeld gesloten lus functie is in afname fase. Update: elke verbranding. Resolutie is ON / OFF. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.LambdaInt":
                    description = "Plaatselijke gesloten lus integrator. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.NrConstI":
                    description = "Counter for aantal zelfontbrandingen met constante integrator. Update: elke verbranding. Resolutie: 1. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.SwitchLimit":
                    description = "Actueel sonde switch punt. Update: elke verbranding. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "TransCal3.DecrStep":
                    description = "Decrement stap op verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TransCal3;

                    break;
                case "F_KnkDetCal.fi_SCEnabLim":
                    description = "De ontsteking compenseren die nodig zijn voor roet reductie. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "InjAnglCal.T_LimitFix":
                    description = "Water temp limiet voor mogelijkheid gebruik te maken van matrix voor injectie einde hoek. Resolutie: 1 ° C. ";


                    break;
                case "InjAnglProt.fi_InjActual":
                    description = "Actueel Inspuitsysteem endangle. Resolutie 0,1 °. ";
                    //category = XDFCategories.InjAnglProt;

                    break;
                case "F_KnkDetCal.p_SteadySLim":
                    description = "Limiet voor de inlaatlucht druk variaties. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "F_KnkDetCal.n_SCMaxRPM":
                    description = "Motortoerental limiet voor roet reductie. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "TransCal2.DecrStep":
                    description = "Decrement stap op verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TransCal2;

                    break;
                case "LambdaProt.MaxLoadNorm":
                    description = "Max belasting (airmass) voor gesloten lus in normale omstandigheden. Update: elke verbranding. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.MaxLoadTime":
                    description = "Als belasting (airmass) heeft deze limiet overschreden gedurende een langere periode, zal verlof gesloten lus. Update: elke verbranding. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.MinTempOthr":
                    description = "Als gasklep open en koelwater temperatuur lager is dan deze waarde systeem met open lus. Update: elke verbranding. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.MinTempCthr":
                    description = "Als gasklep wordt gesloten en koelwater temperatuur lager is dan deze waarde zal worden uitgevoerd in de open lus. Update: elke verbranding. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "InjAnglCal.fi_InjFixed":
                    description = "Inspuitsysteem endangle als vlag voor vaste hoek wordt gebruikt. Resolutie 0,1 °. ";


                    break;
                case "InjAnglCal.fi_InjNoSync":
                    description = "Inspuitsysteem endangle wanneer brandstof niet wordt syncroniced. Resolutie 0,1 °. ";


                    break;
                case "LambdaProt.MinLoad":
                    description = "Min belasting (airmass) voor gesloten lus. Update: elke verbranding. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.ST_Restart":
                    description = "Vermeld of gesloten lus routine opnieuw opgestart moet worden. - Haal de nieuwe nummer van zelfontbrandingen vóór gesloten lus en wacht tot dit aantal zelfontbrandingen hebben doorstaan. - Haal de nieuwe koelwater beperkingen voor gesloten lus. Zelfde variabele voor de bank 1 en 2. Update: elke 250 msec. Resolutie is ON / OFF. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaCal.TimeOpenLoop":
                    description = "Max tijd Load mag overschrijden \"MaxLoadTimeTab\" en nog Lambda-verordening worden in een gesloten lus. Resolutie is 1 msec. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.RestartTime":
                    description = "Tijd voor gesloten lus integrator moet opnieuw worden opgestart na een toerental = 0 of toets uitschakelen. Resolutie is 1 msec. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.TempTrans":
                    description = "Min koelwater temp voor de mogelijkheid te hebben gesloten lus tijdens gasklep voorbijgaand. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.MinRpm":
                    description = "Min motortoerental voor gesloten lus. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "QAdaptCal.m_MinLim":
                    description = "Min airmass waar Quick adaption i toegestaan. Onder deze grens is de nieuwste berekend Quick adaption waarde gebruikt. ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "LambdaCal.t_limHeatRear":
                    description = "Wacht dit keer na de motor begon te activeren achterzijde sond kachel. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "QAdapt.RefValue":
                    description = "De gefilterde min domino waarde (Quick adaption waarde). Deze waarde is beperkt tot een maximum van 300 (QADAPT_LIMIT niet kalibratiegegevens). ";
                    //category = XDFCategories.QAdapt;

                    break;
                case "QAdaptCal.n_MaxLim":
                    description = "Max motortoerental waarbij Snelle aanpassing i toegestaan. Abobe deze grens is de nieuwste berekend Quick adaption waarde gebruikt. ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "LambdaCal.U_AdapMinLim":
                    description = "Adaptie Min limiet. Wanneer de kat sond spanning lager is dan deze grens, de lambda-adaptatie (rijk constante) zal worden geactualiseerd. Resolutie is 1 mV.[LambdaCal.t_Adaption] Min tijd tussen elke stap in de achterzijde sond adaptatie (mager of rijk constante). Resolutie is 1 ms. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.U_AdapMaxLim":
                    description = "Adaptie Max limiet. Wanneer de kat sond spanning abow deze grens, de lambda-adaptatie (mager constante) zal worden geactualiseerd. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.HighSwitch":
                    description = "Switch voor integrator wanneer sonde geven mager. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.LowSwitch":
                    description = "Switch voor integrator wanneer sonde geven rijk. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.HeatTempLimCat":
                    description = "Engine temp limiet voor achterzijde sond voorverwarming. Onder deze temperatuur zal de achterzijde sond preheater worden uitgeschakeld. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.MinCombustion":
                    description = "Het is niet toegestaan om te schakelen integrator voordat dit aantal zelfontbrandingen sinds vorig schakelaar. Resolutie is 1 Verbrandingscyclus. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "F_KnkDet.fi_SootOffs":
                    description = "Ontstekingssysteem hoek toegevoegd vanwege roet ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "F_KnkDetAdap.FalseDetCnt":
                    description = "Geeft de status van de opsporing. Deze teller telt voor roet en voor klop. Interval is na elke evaluatie. ";


                    break;
                case "LambdaProt.RichStep":
                    description = "Aanpassing waarde toe te voegen aan rijke stap. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus rijke stap om een evenwicht te vinden tussen katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.IncComb":
                    description = "Aantal zelfontbrandingen tussen sonde switch to lean en verhoging stap. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.IncRamp":
                    description = "Rich oprit waarde van integrator. Update: elke verbranding. Resolutie is N 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.LeanStep":
                    description = "Aanpassing waarde toe te voegen aan mager stap. \"Snel trimmen\" (beïnvloedt de lambda nauwe lus mager stap om een evenwicht te vinden tussen katalysator zuurstof opslag afhankelijk van de A / F storingen). Resolutie is 0,01%. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "LambdaProt.U_LamCatFilt":
                    description = "gefiltreerd lambda (CAT) sond spanning. Resolutie is 1 mV. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "Lambda.LambdaInt":
                    description = "Global gesloten lus integrator. Update: elke verbranding. V6: Bank 1. Resolutie is N 0,01%. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "F_KnkDet.NoDDCnt":
                    description = "NoDoubleDetect_cnt houdt record op hoeveel zelfontbrandingen in een rij zonder doubledetect. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "Lambda.TimeRich":
                    description = "Tijd sonde hebben aangeven rijk, dit keer worden alleen bijgewerkt als lambda contoler draaien in een gesloten lus. Resolutie is 1 msec. Interval is elke 5 msec. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "Lambda.TimeLean":
                    description = "Tijd sonde hebben aangeven mager, dit keer worden alleen bijgewerkt als lambda contoler draaien in een gesloten lus. Resolutie is 1 msec. Interval is elke 5 msec. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "F_KnkDet.NoDDLast":
                    description = "bevat het aantal zelfontbrandingen tussen de twee laatste doubbledetects. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "F_KnkDet.m_HighLim":
                    description = "De hoogst toegelaten waarde voor de airmass. Interval is ieder voor domino indicatie. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "Lambda.m_LimitEngine":
                    description = "Maximaal airmass gebruikt limiet motor wanneer Performance.Mode = 0 ( 'E'-Economy-modus) airmass Dit is het resultaat van \"LambdaCal.MaxLoadNormTab\" - 20 mg / c te maken Shure dat de lambda-controle niet is uitgeschakeld. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "KnkAdapt1Prot.AdapFac":
                    description = "Gewicht factor aan te passen In.U_knock voordat het is opgeslagen in de buffer. Resolutie is 0.001. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "IgnOffsCal.fi_Offs":
                    description = "Ontstekingssysteem gecompenseerd gecontroleerde alleen door de toepassing steun. Bank 1 op de V6-motor. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnOffsCal;

                    break;
                case "IgnKnkCal.RampTime":
                    description = "Tijd tussen elke stap af gecompenseerd terug naar nul. Resolutie is 2 msec. ";


                    break;
                case "IgnKnkCal.fi_Ramp":
                    description = "Aantal degres te retard domino gecompenseerd voor elke verbranding. Resolutie 0,1 °. ";


                    break;
                case "IgnJerkProt.fi_Offset":
                    description = "Definitieve ontsteking gecompenseerd als gevolg van anti eikel. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnJerkProt;

                    break;
                case "IgnOffsCal.fiRampStep2":
                    description = "Dit is de categorie waarin de DNComp.fi_Offset is verhoogd tijdens de snelle speedramp van ontsteking. Dit is een deel van de D / N-compensatie. Resolutie is 0,1 graad. ";
                    //category = XDFCategories.IgnOffsCal;

                    break;
                case "IgnOffsCal.fiRampStep1":
                    description = "Dit is de categorie waarin de DNComp.fi_Offset is gedaald tijdens de snelle speedramp van ontsteking. Dit is een deel van de D / N-compensatie. Resolutie is 0,1 graad. ";
                    //category = XDFCategories.IgnOffsCal;

                    break;
                case "IgnKnkCal.fi_OffsRelMax":
                    description = "Max gecompenseerd relativ het gemiddelde van de andere flessen. Resolutie 0,1 °. ";


                    break;
                case "IgnKnkCal.LoadLimTimer":
                    description = "Eerste lading hebben boven een hoge belasting limiet is niet toegestaan om oprit terug domino gecompenseerd voor die tijd hebben doorstaan. Resolutie is 2 msec. ";


                    break;
                case "IgnKnkCal.X_FalseDetRamp":
                    description = "Veranderingen oprit tarief. Sneller oprit <- 16 -> Langduriger oprit ";


                    break;
                case "IgnKnkCal.n_EngHyst":
                    description = "Als toerental van de motor veranderd zijn meer dan dit ijkgegevens zijn oprit terug tot nul ingeschakeld direct. Resolutie is 1 tpm. ";


                    break;
                case "IgnKnkCal.AdapTimer":
                    description = "Tijdstempel tussen adaptatie zijn ramped terug op 0 met een stap van 0,1 ° als last zijn belove limiet. Resolutie is 2 msec. ";


                    break;
                case "IgnKnkCal.MaxDiff2":
                    description = "Max toegestaan differance tussen alle cilinders. Resolutie 0,1 °. ";


                    break;
                case "IgnKnkCal.MaxDiff":
                    description = "Max toegestaan differance tussen een cilinder en het gemiddelde van de andere flessen. Dit is alleen gecontroleerd onder lage adaptatie limiet. Resolutie 0,1 °. ";


                    break;
                case "IgnJerkProt.n_DeltaLim":
                    description = "Motortoerental delta limiet voor inschakelen functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnJerkProt;

                    break;
                case "KnkAdapt1Prot2.RefValue":
                    description = "mediane waarde af U_Knock. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "IgnLOffProt.TempOffset":
                    description = "Tijdelijke licht af offset waarde. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "IgnLOffProt.fi_Offset":
                    description = "Light off gecompenseerd waarde. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "IgnKnkProt.fi_PartAdap":
                    description = "Tussen hoge en lage belasting beperken zijn adaptatie niet bijgewerkt, maar het is ten dele gebruikt. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnkProt;

                    break;
                case "IgnKnkProt.AdpLowLim":
                    description = "Laad beperken werden aangepast moeten worden gebruikt. Resultaat uit tabel: IgnKnkCal.AdpLowLimTab. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.IgnKnkProt;

                    break;
                case "KnkAdapt1Prot2.AdapFac":
                    description = "Gewicht factor aan te passen In.U_knock voordat het is opgeslagen in de buffer. Resolutie is 0.001. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "KnkAdapt1Prot2.Counter":
                    description = "Counter gebruikt wanneer U_Knock worden opgeslagen in een buffer. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "IgnJerkProt.n_Delta":
                    description = "Motortoerental delta, die worden gebruikt voor inschakelen functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnJerkProt;

                    break;
                case "KnkAdapt1Prot2.MaxLevel":
                    description = "Max referentiewaarde voor domino detectie, afhankelijk van het motortoerental. Resolutie is 1 mV. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "KnkAdapt1Prot2.LoadHyst":
                    description = "Werkelijke belasting hysteres afhankelijk als we in een venster of niet. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "IgnLOffProt.NrCombustion":
                    description = "Aantal uitgeschakeld zelfontbrandingen met licht uit ontsteking gecompenseerd. Deze variabele geeft het aantal af zelfontbrandingen voor gecompenseerd worden ingesteld op 0. ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "KnkAdapt1Prot2.RpmHyst":
                    description = "Werkelijke toerental van de motor hysteres afhankelijk als we in een venster of niet. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "IgnLOffProt.m_requestLO":
                    description = "Dit wordt gebruikt in de kaart te calc licht uitgeschakeld ontsteking. Het is een kopie van m_request vertraagd. ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "IgnJerkCal.n_Comb":
                    description = "Aantal zelfontbrandingen functie actief geweest boven pedaal limiet. Resolutie: 1. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnJerkCal.X_PedalLim":
                    description = "Boven deze grens zijn functie alleen actief IgnJerkCal.n_Comb. Resolutie is 0,1%. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "KnkSoundRedCal.T_LowLim":
                    description = "Onder deze inletair temp limiet wordt de ontsteking gecompenseerd voor constant koppel verlaging altijd 0. ";
                    //category = XDFCategories.KnkSoundRedCal;

                    break;
                case "IgnJerkCal.T_EngLim":
                    description = "Temp limiet voor de mogelijkheid om deze te activeren eikel gecompenseerd. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnJerkCal.N_CombPart2":
                    description = "Se beschrijving N_CombPart1. Resolutie is 1 kam. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnJerkCal.N_CombPart1":
                    description = "Min aantal zelfontbrandingen functie is actief. Als negatieve delta worden ontdekt tijdens deze tijd zijn aantal zelfontbrandingen functie actief zijn verhoogd met N_CombPart2. Resolutie is 1 kam. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnJerkCal.n_EnDelta":
                    description = "Min rpm-delta voor de mogelijkheid om de functie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnJerkCal.fi_RampStep":
                    description = "Stap ontstekingsmethode gecompenseerd tijdens oprit terug naar 0. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "KnkDetProt.U_LevelActual":
                    description = "De werkelijke waarde op het domino spanning gebruikt om te detecteren kloppen conditie. De gemiddelde waarde wordt berekend met de laatste twee waarden op \"In.U_Knock\" voor een specifieke cilinder. Als de gemiddelde waarde hoger is dan de werkelijke \"In.U_Knock\", zal de \"In.U_Knock\" worden gekopieerd naar \"U_LevelActual\". Als de gemiddelde waarde lager is dan \"In.U_Knock\" zal de gemiddelde waarde worden gekopieerd naar \"U_LevelActual\". Resolutie is 1 mV. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "KnkDetProt.Constant":
                    description = "Constant voor de berekening uit domino referentieniveau, deze waarde is van KnkAdaptCal.ConstantTab. De waarde wordt gebruikt door KnkDetProt.U_RefLevelActual. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "KnkDetProt.KnockWinOffs":
                    description = "Actueel hoek tussen ontsteking hoek en het starten van de knock-venster. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "KnkSoundRedCal.T_HighLim":
                    description = "Abowe dit inletair temp limiet is de constante koppel vermindering gecompenseerd rechtstreeks uit de kaart. Onder deze limiet en abowe de KnkSoundRedCal.T_LowLim is de kaart ontsteking gecompenseerd geïnterpoleerd voordat het wordt gekopieerd worden naar \"KnkSoundRedProt.fi_Offset\". ";
                    //category = XDFCategories.KnkSoundRedCal;

                    break;
                case "KnkDetProt.U_RefLev2":
                    description = "Actueel referentieniveau voor het opsporen van grote kloppen. KnkDetProt.U_RefLev2 = KnkDetProt.U_RefLevelActual * KnkDetCal.MulFacRef2 100 Als In.U_knock boven deze waarde kloppen ontdekt. Resolutie is 1 mV. Interval is elke verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "KnkDet.RefValueActual":
                    description = "RefValueActal feitelijke referentieniveau voor de knock detectie op basis van KnkAdaptAdap.RefValueWind [0] en KnkAdaptAdap.RefValueWind [1]. De waarden worden geïnterpoleerd tussen de twee variabelen. X-waarde voor venster 1 KnkAdaptCal.RPMRefSP [0] en voor het venster 2 wordt KnkAdaptCal.RPMRefSP [1]. RefValueActal wordt gebruikt door KnkDetProt.U_RefLevelActual ";
                    //category = XDFCategories.KnkDet;

                    break;
                case "IgnJerkCal.fi_Basic":
                    description = "Basic ontsteking gecompenseerd heks zijn geactiveerd als zoon als motortoerental delta boven limiet en N_CombPart1 aantal zelfontbrandingen zijn verstreken sinds de vorige keer. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnJerkCal;

                    break;
                case "IgnTempCal.AirLimIdle":
                    description = "Als de temperatuur van de lucht boven deze limiet en ontsteking lucht gecompenseerd worden belove 0 zijn temp gecompenseerd gebruikt tijdens stationair. Resolutie: 1 ° C. Interval is elke 1000 ms. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "IgnTempCal.T_EngLim":
                    description = "Boven deze temperatuur zijn ontsteking gecompenseerd afhankelijk van motor temp aangepast met de index. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "IgnLOffCal.TempLim":
                    description = "Max temp motor voor lichte off ontsteking. Resolutie: 1 ° C. ";


                    break;
                case "KnkAdapt1Prot.Counter":
                    description = "Counter gebruikt wanneer U_Knock worden opgeslagen in een buffer. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "KnkAdapt1Prot.LoadHyst":
                    description = "Werkelijke belasting hysteres afhankelijk als we in een venster of niet. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "KnkAdapt1Prot.RefValue":
                    description = "mediane waarde af U_Knock. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "IgnTempCal.T_AirLim":
                    description = "Boven deze temperatuur zijn ontsteking gecompenseerd afhankelijk van lucht temp aangepast met de index. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "KnkAdapt1Prot.RpmHyst":
                    description = "Werkelijke toerental van de motor hysteres afhankelijk als we in een venster of niet. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "IgnLOffCal.PosDeltaLim":
                    description = "Maximal aanwas van Licht Uit ontsteking gecompenseerd wanneer de start fase voorbij is. Resolutie 0,1 ° / 7,5 ms. ";


                    break;
                case "KnkAdapt1Prot.MaxLevel":
                    description = "Max referentiewaarde voor domino detectie, afhankelijk van het motortoerental. Resolutie is 1 mV. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "IgnLOffCal.p_AirAmbHigh":
                    description = "Externe luchtdruk limiet voor het gebruik van LightOff ontsteking. Boven deze grens, LightOff ontsteking wordt gebruikt. Hieronder maar vooral IgnLOffCal.p_AirAmbLow, het licht uit gecompenseerd wordt ramped tussen de twee waarden. Resolutie 0,1 kPa. ";


                    break;
                case "IgnLOffCal.p_AirAmbLow":
                    description = "Externe luchtdruk limiet voor het gebruik van LightOff ontsteking. Beneden deze grens, LightOff ontsteking niet wordt gebruikt. Resolutie is 0,1 kPa. ";


                    break;
                case "IgnLOffCal.NegRampStep":
                    description = "Indien de LightOff ontsteking geworden deactive te wijten aan dat het: - temp grens heeft overschreden of - aantal zelfontbrandingen met LightOff overtrof de LightOff ontsteking gecompenseerd wordt verlaagd langzaam om de verstoring zo klein mogelijk zijn. Deze kalibratieprocedure variabele zet de stap dit gecompenseerd stellen alles 7.5ms. Resolutie is 0.001 ° / 7,5 ms. ";


                    break;
                case "IgnLOffCal.PosRampStep":
                    description = "Na de motor starten en wanneer de LightOff ontsteking actief worden, de LightOff ontsteking compenseren verhoogt langzaam om de verstoring zo klein mogelijk zijn. Deze kalibratieprocedure variabele zet de stap van deze gecompenseerd stellen alles 7.5ms. Resolutie is 0.001 ° / 7,5 ms. ";


                    break;
                case "PurgeCal.T_EngineLim":
                    description = "Minimale motor temperatuur te laten zuiveren. Resolutie: 1 ° C. ";
                    //category = XDFCategories.PurgeCal;

                    break;
                case "Ign.fi_OtherOff":
                    description = "Deze compensatie omvat lucht temp, motor temp, D / N-compensatie en Knock geluid vermindering ontsteking compensaties en van invloed is op de knockair en knockfuel samen met het domino gecompenseerd. IgnTempProt.fi_Offset + DNComp.fi_Offset + KnkSoundRedProt.fi_Offset = Ign.fi_OtherOff. Resolutie 0,1 °. ";
                    //category = XDFCategories.Ign;

                    break;
                case "AdpFuelAdap.MulFuelAdapt":
                    description = "Multicative fueladaption waarde. Resolutie is N 0,01%. ";
                    //category = XDFCategories.AdpFuelAdap;

                    break;
                case "AdpFuelCal.T_AdaptLim":
                    description = "Water temp limiet voor adaptatie. Resolutie: 1 ° C. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.IadptNr":
                    description = "Aantal zelfontbrandingen te slaan lambda integrator voor de berekening uit de gemiddelde waarde, additieve brandstof factor. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WMulMinRpm":
                    description = "Min motortoerental voor vermenigvuldigings adaption. Resolutie is 1 tpm. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WMulMaxRpm":
                    description = "Max snelheid voor vermenigvuldigings adaption. Resolutie is 1 tpm. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "KnkAdaptCal.RpmHigh":
                    description = "Hoog motortoerental limiet voor venster 1. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "AdpFuelCal.GadptNr":
                    description = "Aantal zelfontbrandingen te slaan lambda integrator voor de berekening uit de gemiddelde waarde, vermenigvuldigings brandstof factor. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "KnkAdaptCal.LoadHyst":
                    description = "Laad hysteres gebruikt voor het controleren of we ons in het venster of niet. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "AdpFuelCal.WAddMinLoad":
                    description = "Min airmass voor additief adaption. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WAddMaxLoad":
                    description = "Max airmass voor additief adaption. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "KnkAdaptCal.IgnOffset":
                    description = "Ontstekingssysteem gecompenseerd gebruikt wanneer domino-signaal wordt bemonsterd. Resolutie 0,1 °. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "KnkAdaptCal.RpmHyst":
                    description = "Motortoerental hysteres gebruikt voor het controleren of we ons in het venster of niet. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "AdpFuelCal.WMulMinLoad":
                    description = "Min airmass voor vermenigvuldigings adaption. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WMulMaxLoad":
                    description = "Max airmass voor vermenigvuldigings adaption. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WAddMinRpm":
                    description = "Min snelheid voor het toevoegingsmiddel adaption. Resolutie is 1 tpm. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "AdpFuelCal.WAddMaxRpm":
                    description = "Max snelheid voor het toevoegingsmiddel adaption. Resolutie is 1 tpm. ";
                    //category = XDFCategories.AdpFuelCal;

                    break;
                case "IgnNormCal.fi_Step":
                    description = "Stap van ontsteking binnen de normale ontsteking kaart. Resolutie 0,1 °. ";


                    break;
                case "KnkDetCal.LoadLimit":
                    description = "Onder deze loadlimit is knock detectie uitgeschakeld. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "IgnStartCal.n_EngLowLim":
                    description = "Als toerental van de motor lager is dan deze grens zal de start ontsteking altijd actief. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IgnStartCal;

                    break;
                case "IgnIdleCal.TimeBefAct":
                    description = "Tijd na voorwaarde voor stationair ontsteking zijn fullfield tot lamlegging ontsteking moet zijn gebruikt. Resolutie is 1 msec. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnIdleProt.fi_Ignition":
                    description = "Actueel stationair ontsteking hoek ";
                    //category = XDFCategories.IgnIdleProt;

                    break;
                case "IgnIdleProt.n_Diff":
                    description = "verschil tussen de nominale stationair toerental van de motor en de werkelijke motortoerental. Resolutie: 1. ";
                    //category = XDFCategories.IgnIdleProt;

                    break;
                case "IgnStartProt.fi_Start":
                    description = "Actueel begin ontsteking. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnStartProt;

                    break;
                case "IgnNormProt.fi_Map":
                    description = "Normale ontsteking kaart resultaat waarde. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnNormProt;

                    break;
                case "IgnKnk.AdpHighLim":
                    description = "Laad beperken werden aangepast moeten zijn bijgewerkt. Resultaat uit tabel: IgnKnkCal.AdpHighLimTab. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "IgnLOff.NrCombDelay":
                    description = "Aantal zelfontbrandingen na Idle.StartAirMode veranderingen modus 1-2. Gebruikt om vertraging LO. ";
                    //category = XDFCategories.IgnLOff;

                    break;
                case "IgnLOff.fi_Offset":
                    description = "Knock gecompenseerd voor elke cilinder. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnLOff;

                    break;
                case "IgnKnk.fi_MeanKnock":
                    description = "De gemiddelde waarde van ontsteking retard op alle cilinders. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "KnkAdapt2Prot.lastCyl":
                    description = "Cyl nr, kam voordat deze kam. Resolutie: 1. ";
                    //category = XDFCategories.KnkAdapt2Prot;

                    break;
                case "IgnKnk.Index":
                    description = "Index voor hoeveel IgnKnkProt.fi_OffNorm moet zijn adjustet met als IgnKnk.fi_Offset worden berekend. Resolutie is 0,01. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "IgnKnk.fi_MaxOffset":
                    description = "Max ontsteking gecompenseerd voor kloppen. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnKnk;

                    break;
                case "IgnCal.fi_Max":
                    description = "Max toegestaan ontsteking hoek. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnCal;

                    break;
                case "IgnProt.fi_Min":
                    description = "Toont min toegestaan ontsteking hoek. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "Ign.IgnMode":
                    description = "Indicating huidige ontsteking modus ";
                    //category = XDFCategories.Ign;

                    break;
                case "IgnProt.fi_ABS":
                    description = "Toont ontsteking hoek output van absolute functies. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "IgnProt.fi_IgnExlLOff":
                    description = "Toont huidige ontsteking hoek exl. Licht Uit ontsteking gecompenseerd. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "Ign.fi_EngOff":
                    description = "Engine temp gecompenseerd waarde. Resolutie 0,1 °. ";
                    //category = XDFCategories.Ign;

                    break;
                case "Ign.fi_Average":
                    description = "Gemiddelde ontstekingsstijdstip tussen alle cilinders. (Slechts Bank 1 bij de V6). Resolutie 0,1 °. ";
                    //category = XDFCategories.Ign;

                    break;
                case "KnkDetCal.X_FalseDetRef":
                    description = "Toename factor knockreference waarde wanneer FalseDetMode> 0. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "Ign.fi_AirOff":
                    description = "Air temp gecompenseerd waarde. Resolutie 0,1 °. ";
                    //category = XDFCategories.Ign;

                    break;
                case "IgnProt.fi_Ignition":
                    description = "Toont huidige ontsteking hoek. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "IgnCal.fi_RampInc":
                    description = "Rampvalue tussen verschillende ontsteking functionallitys wanneer ontsteking hoek wordt verhoogd. Resolutie is 0.001 °. ";
                    //category = XDFCategories.IgnCal;

                    break;
                case "IgnProt.fi_Offset":
                    description = "Toont ontsteking hoek output van gecompenseerd functies. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "IgnProt.fi_IgnCalc":
                    description = "Toont ontsteking hoek voordat speedramp. Resolutie 0,1 °. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "KnkDetCal.MulFacRef2":
                    description = "Deze factor zijn multiplicated met gewone referentieniveau. Knocking zijn gedetecteerd als In.U_Knock liggen boven dit niveau. Resolutie is 1%. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "KnkDetCal.n_LimWinOff":
                    description = "Motortoerental limiet voor de mogelijkheid tot afname domino-venster. Resolutie is 1 tpm. ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "OBDWorstCase.I_HtPostLow":
                    description = "laagste waarde van de werkelijke stroom door de achterste sonde. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDAdap.FreqFiltRest":
                    description = "Rest na low pass filter van verbranding teller in freq diagnosticeren ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.triggerDelay":
                    description = "Vertragingen reactieprijs (in ms) om te stoppen met de plott. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "DisplProt.AD_Scanner":
                    description = "AD waarde lezen van reserveonderdelen analoge ingang (p_PowerSteer input, pin 16 op T7.7) Interval is elke 100 ms. ";
                    //category = XDFCategories.DisplProt;

                    break;
                case "OBDAdap.p_TestAir":
                    description = "Bevat de ign.off en ing.on testgegevens van de omgevingsdruk sensor. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.O2SensFreqFltCnt":
                    description = "Resultaat na low pass filter van verbranding teller in freq diagnosticeren ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.n_3cylCorrection":
                    description = "Deze variabele telt het aantal automatische correcties (geldende brandstof sync) op 3-cyl begint. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "Crank.t_TDC_TDC_Delta":
                    description = "Delta verandering in timer teken tussen twee zelfontbrandingen. last_value_of_t_TDC_TDC - Crank.t_TDC_TDC = Crank.t_TDC_TDC_Delta. Resolutie is 1 aankruisen => 7,6 ons. ";
                    //category = XDFCategories.Crank;

                    break;
                case "Crank.Cylinder":
                    description = "Actueel cilinder aantal: 0 => Cilinder 1 1 => Cilinder 2 2 => Cilinders 3 3 => Cilinders 4 4 => Cilinders 5 5 => Cilinders 6 Interval is ieder vóór berekening. ";
                    //category = XDFCategories.Crank;

                    break;
                case "OBDAdap.O2SensFCmbCnt":
                    description = "Aantal verbranding in Sond Freq Diag. Gebruikt in SCANTOOL ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.SAIIntrIntDiff":
                    description = "Het verschil tussen Lambda.LambdaInt voor en na de test intrusief minus de geëvalueerde waarde uit de tabel SAIDiagCal.m_AirSP. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "Crank.ActiveDeltaCyl":
                    description = "Opgave van de cilinder die Crank.t_TDC_TDC_Delta waarde wordt berekend voor. ";
                    //category = XDFCategories.Crank;

                    break;
                case "BlockHeat.T_EngAirDiff":
                    description = "In.T_Engine - In.T_AirInlet bij het begin. Gebruikt in blockheater algoritme om een blockheater start ";
                    //category = XDFCategories.BlockHeat;

                    break;
                case "BlockHeat.C_PartNFac":
                    description = "Actueel factor uit blockheater functie stationair lucht ";
                    //category = XDFCategories.BlockHeat;

                    break;
                case "BlockHeatCal.T_AirInlet":
                    description = "In.T_AirInlet moet onder deze parameter om blockheater beginnen verrijking ";
                    //category = XDFCategories.BlockHeatCal;

                    break;
                case "OBDWorstCase.Flank_pTank":
                    description = "Bevat het grootste aantal flankshifts op de p_fueltank siganl wanneer de p_fueltank signaal ripples met een amplitude boven de limiet. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "BlockHeat.StartFac":
                    description = "Actueel factor uit blockheater functie op startfuel ";
                    //category = XDFCategories.BlockHeat;

                    break;
                case "BlockHeat.Q_StartOffsFac":
                    description = "Actueel factor uit blockheater functie op startair ";
                    //category = XDFCategories.BlockHeat;

                    break;
                case "BlockHeat.AftSt2Fac":
                    description = "Actueel factor uit blockheater functie op afterstart 2 ";
                    //category = XDFCategories.BlockHeat;

                    break;
                case "OBDWorstCase.n_CombSync":
                    description = "Aantal zelfontbrandingen sinds motor werd gestart. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDWorstCase.p_AmbBef":
                    description = "Biggest diff tussen inlaatspruitstuk luchtdruk en luchtdruk voor gasklep ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDWorstCase.p_InlBef":
                    description = "Biggest diff tussen inlaatspruitstuk luchtdruk na gasklep en externe druk ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "BlockHeatCal.T_Engine":
                    description = "In.T_Engine moet onder deze parameter om blockheater beginnen verrijking ";
                    //category = XDFCategories.BlockHeatCal;

                    break;
                case "BlockHeatCal.C_PartDec":
                    description = "Verlaging C_PartNFac factor met dit bedrag elke 1000ms wanneer Idle.StartAirMode = 0; ";
                    //category = XDFCategories.BlockHeatCal;

                    break;
                case "BlockHeatCal.StartFac":
                    description = "Als een blockheater beginnen wordt gedetecteerd en de inlaat temperatuur van de lucht lager is dan -25, verrijken startfuel met deze factor ";
                    //category = XDFCategories.BlockHeatCal;

                    break;
                case "OBDWorstCase.missfCnt":
                    description = "Max nr van misfires tijdens een blok ooit. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDWorstCase.catv6Result":
                    description = "Resultaat uit kat diag voor v6. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDWorstCase.missf1000":
                    description = "Max aantal ontstekingsfouten tijdens de 1000 eerste zelfontbrandingen vanaf 850 tpm. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "DisplAdap.FreezePos":
                    description = "Bevroren menu positie voor AMOS tekst op SID ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "DisplAdap.v_Factor":
                    description = "Adaptie factor voor compensatie op In.v_Vehicle tegen In.v_Vehicle2. ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "DisplAdap.AmosPos":
                    description = "Menu positie voor AMOS tekst op SID ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "OBDAdap.p_AirInletComp":
                    description = "Verschil tussen p_AirInlet en p_Air bij het opstarten gebruikt voor de kalibratie van p_AirInlet ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.p_FuelTankComp":
                    description = "Gebruikt als nul druk referentie bij de aanpassing van de actualin.p_fueltank. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "nEngineDiagCal.U_BattLim":
                    description = "Power dip beperken om te beslissen of cranking of niet. ";
                    //category = XDFCategories.nEngineDiagCal;

                    break;
                case "OBDAdap.obdSTFT_n_Engine":
                    description = "Het toerental van de motor wordt opgeslagen wanneer de korte FuelTrim diagnosticeren verslagen fout. De gegevens worden gebruikt om te bepalen of wij hetzelfde station staat of niet tijdens de komende reis. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.p_TestInlet":
                    description = "Bevat de ign.off en ing.on testgegevens van de inlaatdruk sensor. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.obdSTFT_T_Engine":
                    description = "De motor temperatuur wordt opgeslagen wanneer de korte FuelTrim diagnosticeren verslagen fout. De gegevens worden gebruikt om te bepalen of wij hetzelfde station staat of niet tijdens de komende reis. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "DisplProt.LambdaScanner":
                    description = "Lambda-waarde van de Lambda-scanner conected tot reserveonderdelen analoge ingang. Deze waarde is het resultaat van een van de drie selecteerbare conversie tabellen, DisplAdap.LamScannerTab1-3. Elk interval is 100 ms. ";
                    //category = XDFCategories.DisplProt;

                    break;
                case "OBDAdap.CatLoad":
                    description = "Laad wanneer ontstekingsfouten, gevaarlijk voor de kat is ontdekt. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.CatTemp":
                    description = "Engine temp wanneer ontstekingsfouten, gevaarlijk voor de kat is ontdekt. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.EmisTemp":
                    description = "Engine temp wanneer ontstekingsfouten, slecht voor de uitstoot, wordt gedetecteerd. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.EmisRpm":
                    description = "Motortoerental wanneer ontstekingsfouten, slecht voor de uitstoot, wordt gedetecteerd. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.MaxCat":
                    description = "De maximale waarde aangeeft katalysator vernietiging veroorzaakt door ontstekingsfouten opgeslagen in deze variabele. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "Performance.Mode":
                    description = "Motorprestaties mode 0 => 'E' Economy-modus, beperken motor airmass is ingesteld op het loadlimit voor lambda controle. Het pedaal kaart positie aanwijzer is gedaald met 20%. 1 => 'N' normale modus. 2 =>'2 'Het pedaal kaart positie pointer wordt verhoogd met automatische sportmode factor. ";
                    //category = XDFCategories.Performance;

                    break;
                case "OBDAdap.CatRpm":
                    description = "Motortoerental wanneer ontstekingsfouten, gevaarlijk voor de kat is ontdekt. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.MaxEmis":
                    description = "De maximale waarde die emissie degradatie, veroorzaakt door ontstekingsfouten wordt opgeslagen in deze variabele. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.LevEvalValueRest":
                    description = "Rest waarde uit de LP filter van Lev resultaat ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.CatEvalValueRest":
                    description = "Rest waarde uit de LP filtering van de evaluatie waarde voor R4 kat Diag. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.LevResult":
                    description = "Resultaat uit lev Diag. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.LevEvalValue":
                    description = "Lev evaluatie waarde. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.ThrLimpHomeNr":
                    description = "Laatste gemeld gasklep limphome nummer. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.EmisLoad":
                    description = "Laad wanneer ontstekingsfouten, slecht voor de uitstoot, wordt gedetecteerd. (Dit is gedaan in de achtergrond) ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.CatEvalValue":
                    description = "Evaluatie waarde voor R4 kat Diag. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.CatDevDiffFilt":
                    description = "Gefilterde deviatie verschil ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDWorstCase.p_AmbInl":
                    description = "Biggest diff tussen inlaatspruitstuk luchtdruk na gasklep en externe luchtdruk. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "StartCal.t_BefStRunCold":
                    description = "De motor moet draaien voor ten minste dit keer naar de trigg voordat opnieuw te beginnen wanneer de watertemperatuur onder de T_BefStEngine temperatuur. Resolutie is 1 sec. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.T_BefStEngine":
                    description = "Als de motor temperatuur hoger is dan deze temp, de motor moet draaien voor minstens t_BefStRunWarm tijd om de trigg voordat opnieuw beginnen. Als motor temp lager is, de motor moet draaien gedurende ten minste t_BefStRunCold tijd om de trigg voordat opnieuw beginnen. Resolutie is 1 sec. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.t_BefStRunWarm":
                    description = "De motor moet draaien voor ten minste dit keer naar de trigg voordat opnieuw te beginnen wanneer water temperatuur is boven de T_BefStEngine temperatuur. Resolutie is 1 sec. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.RpmStartLim":
                    description = "Motortoerental limiet voor de detectie van de motor gestart. Resolutie is 1 tpm. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.RestTempLim":
                    description = "Wanneer de motor temperatuur lager is dan deze grens zal de herstart factor worden gebruikt. Resolutie: 1 ° C. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.CombStartLim":
                    description = "Aantal zelfontbrandingen boven \"RpmStartLim\" op te sporen motor gestart. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "AftStProt1.FirstFac":
                    description = "Eerste verrijking factor lezen wanneer de motor is gestart. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "AftStProt1.EnrFac":
                    description = "Afterstart brandstof verrijking factor voor deze module. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "StartCal.TransEnrTime":
                    description = "Als de motor draait is meer dan dit keer zijn afterstart verrijking van voorbijgaande brandstof niet langer toegestaan. Resolutie is 1 msec. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "StartCal.m_FuelBasic":
                    description = "Basic brandstof massa per verbranding. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.StartCal;

                    break;
                case "Start.RestartFac":
                    description = "Actueel opnieuw factor voor het begin brandstof en afterstart verrijkingen. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.Start;

                    break;
                case "StartProt.m_FuelActOut":
                    description = "M_FuelActual inclusieve factor uit rpm TAB. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "InjCorrCal.InjectorConst":
                    description = "Verstuiver constant voor werkelijke drugsspuiters. Resolutie is 1 g / min. ";
                    //category = XDFCategories.InjCorrCal;

                    break;
                case "StartProt.HighAltFactor":
                    description = "High Altitude compensatie factor, afhankelijk van motor temperatuur en omgevingsdruk ";
                    //category = XDFCategories.StartProt;

                    break;
                case "StartProt.t_BefStart":
                    description = "Actueel injectie tijd gebruikt voor de voor de start. Resolutie is 1 ms. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "StartProt.CombCnt":
                    description = "Verbrandingscyclus teller gebruikt voor het opsporen van de motor gestart. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "StartProt.t_EngineStop":
                    description = "Aantal seconden motor zijn gestopt. Resolutie is 1 sec. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "StartProt.m_FuelActual":
                    description = "Werkelijke massa brandstof voor de motor is gestart. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "TCompProt.EnrFac":
                    description = "Actuele temperatuur compensatie factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.TCompProt;

                    break;
                case "TCompProt.T_EngEnrFac":
                    description = "Help variabele te berekenen temperatuur compensatie factor Interval is 1000ms. ";
                    //category = XDFCategories.TCompProt;

                    break;
                case "F_KnkDetCal.MaxNrofNoDD":
                    description = "maximumgehalte voor geen doubledetect teller. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "HotStCal1.DecrStep":
                    description = "Decrement stap op verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.HotStCal1;

                    break;
                case "AftStCal2.DecrStep":
                    description = "Decrement stap op verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStCal2;

                    break;
                case "AftStCal1.DecrStep":
                    description = "Decrement stap op verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStCal1;

                    break;
                case "TCompCal.T_EnrFacAutLim":
                    description = "temperatuurgrens gebruikt door de temperatuur compensatie functie in auto's met automatische versnellingsbak. Bij temperaturen lager dan deze grenswaarde, tabel en kaart die gemeenschappelijk zijn voor zowel handmatige en automatische auto's worden gebruikt. Bij temperaturen boven deze limiet, tabel en kaart die specifiek is voor de automatische auto's worden gebruikt. Resolutie: 1 ° C. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "F_KnkDetCal.m_AirMin":
                    description = "Laagste airmass aanvaard voor valse knock detectie. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "HotStProt2.EnrFac":
                    description = "Actueel hotstart verrijking factor. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.HotStProt2;

                    break;
                case "AftStProt2.FirstFac":
                    description = "Eerste verrijking factor lezen wanneer de motor is gestart. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "AftStProt2.EnrFac":
                    description = "Afterstart brandstof verrijking factor voor deze module. Resolutie is 0,001 (0,1%). ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "OBDWorstCase.MaxQAirThr":
                    description = "maximale gemiddelde waarde nieuwste airmass vergelijken gasklep voor de qAirInlet diagnosticeren. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "OBDWorstCase.MinQAirThr":
                    description = "Minimale gemiddelde waarde nieuwste airmass vergelijken gasklep voor de qAirInlet diagnosticeren. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "SAIProt.ST_TOutOfRange":
                    description = "neemt een monster van de In.T_AirInlet als HCI begint ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "OBDWorstCase.amp_Bypass":
                    description = "Greatest druk voordat gasklep amplitude ooit. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "SAIProt.N_FuellingStart":
                    description = "zelfontbrandingen na de start bij het bijtanken beginnen. Resolutie is 1 Comb. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "OBDWorstCase.v_NegChange":
                    description = "Grootste negatieve snelheid veranderen tussen twee diag monsters, ooit. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "SAIProt.RampOffset":
                    description = "Offset waar de speedramp start vanaf ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "OBDWorstCase.v_PosChange":
                    description = "Grootste positieve verandering snelheid tussen twee diag monsters, ooit. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "SAIProt.N_PumpStop":
                    description = "Aantal zelfontbrandingen dat HCI actief moet zijn. Resolutie is verbranding. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.N_PumpStart":
                    description = "Aantal zelfontbrandingen dat HCI moet worden uitgesteld na de start van de motor als AllowStart is ingesteld. Resolutie is verbranding. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.m_FuelFac":
                    description = "Additative HCI belasting rpm compensatie factor. 4-cil of bank1 - 6cyl. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.RampFac":
                    description = "Ramp factor vermenigvuldigd met SAI gevraagde schadevergoeding. Factor voor de oprit bij het SAI is ingeschakeld of uitgeschakeld. Resolutie: 1. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.m_AirInjSAI":
                    description = "Air geïnjecteerd door de HCI Pomp ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.m_AirInjReq":
                    description = "SAI lucht te injecteren als functie van de temperatuur van het water beginnen. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.n_CombCount":
                    description = "gebruikt voor de opslag van verbrandingsproducten counter ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.m_loadave":
                    description = "Gemiddelde lading de laatste 500 ms tijdens HCI actief ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "BFuelProt.m_FuelActual":
                    description = "Actueel brandstof massa per verbranding na correctie factoren. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "BFuelProt.m_FuelBasic":
                    description = "Basic brandstof massa per verbranding. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "BFuelCal.crankFuelDelay":
                    description = "Vertraging te houden crankfuel nadat de motor gestart is ingesteld. ";
                    //category = XDFCategories.BFuelCal;

                    break;
                case "OBDWorstCase.U_SensPre":
                    description = "is ingesteld op de sonde sensor signaal voor katalysator-omzetter ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "InjCorrProt.t_InjBatt":
                    description = "Actueel injectie tijd compensatie voor accuvoltage. Resolutie is 1 ons. ";
                    //category = XDFCategories.InjCorrProt;

                    break;
                case "FuelConsCal.BeConst":
                    description = "Constant voor de berekening van het brandstofverbruik (g / kWh). ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "KnkDetProt.KnockWinAngle":
                    description = "Actueel hoek tussen begin-en eindtijd van domino-venster. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "SAICal.N_PumpStop":
                    description = "zelfontbrandingen na de start bij het SAI pomp stopt. Resolutie: 1. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.t_RampTimePos":
                    description = "Ramp tijd voor additative HCI brandstofgegevensbestand, positieve stap. Bank 1 op V6. Resolutie is 0,1 s. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "OBDWorstCase.addFuelAdap":
                    description = "Biggest additative fueladaption waarde. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "SAICal.m_AirInletLimit":
                    description = "SAI functie alleen ingeschakeld als airinlet is onder deze limiet. Resolutie is 1 mg / c. Interval elke verbranding. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.m_AirLimLeanClamp":
                    description = "Lean Klem is alleen ingeschakeld als de belasting lager is dan deze limiet. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "OBDWorstCase.mulFuelAdap":
                    description = "Biggest multicative fueladaption waarde. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "BFuel.m_FuelActual":
                    description = "Actueel brandstof massa per verbranding na correctie factoren. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.BFuel;

                    break;
                case "SAICal.T_MinAirInlet":
                    description = "SAI is uitgeschakeld als In.T_AirInlet lager is dan deze limiet. Resolutie is 1 klas. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.t_RampTimeNeg":
                    description = "Ramp tijd voor additative HCI brandstofgegevensbestand, negatieve stap. Bank 1 op V6. Resolutie is 0,1 s. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.N_SAIPumpDelay":
                    description = "Aantal kam na HCI gestopt dat de pomp blijft draaien. Deze functie werd ingevoerd om te voorkomen dat rijke spikes na HCI brandstof is uitgeschakeld. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "SAICal.T_MaxAirInlet":
                    description = "SAI is uitgeschakeld als In.T_AirInlet lager is dan deze limiet. Resolutie is 1 klas. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "TorqueProt.m_Friction":
                    description = "Airmass overeenkomt met het koppel verliezen als gevolg van extra wrijving omdat de motor is niet warm en ook overeenkomstige verschil tussen de werkelijke motor en de motor die wordt gebruikt bij de kalibratie van torqueMap werd gedaan. Gebruikt voor compensatie bij de berekening en de beperking van de motor output koppel. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.fi_IgnMin":
                    description = "Min ontsteking hoek verzoek Ontstekingssysteem Master tot vermindering van het koppel. Geïnterpoleerd op grond van de temperatuur afhangt tabel. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.M_LowLim":
                    description = "Door de Torque Master geselecteerd laagste maximum koppel verzoek, gecorrigeerd met adaption waarde geboekt bij stationair. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.M_NoiseReduc":
                    description = "Max motor output koppel te houden voertuig lawaai op een goedgekeurde grens bij het versnellen van 50 km / h (of gekalibreerde snelheid). ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.fi_IgnReq":
                    description = "Ontstekingssysteem hoek verzoek tot Ontstekingssysteem Master tot vermindering van het koppel. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_OutAccPed2":
                    description = "Berekend gaspedaal positie. ZONDER invloed uit: - Out.X_AccPedal gecompenseerd gebruikt wanneer u wilt zien de invloed van Out.X_AccPedal gecompenseerd. Resolutie is 0,1%. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_OutAccPed1":
                    description = "Berekend gaspedaal positie. ZONDER invloed uit: - Beperking van Out.X_AccPedal delta - Out.X_AccPedal gecompenseerd gebruikt wanneer u wilt zien de invloed van Out.X_AccPedal delta beperking en gecompenseerd. Resolutie is 0,1%. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_OOutAccPed":
                    description = "Berekend gaspedaal positie. De waarde van Out.X_AccPedal 10 ms geleden. Gebruikt voor de beperking van de delta. Resolutie is 0,1%. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.nosample":
                    description = "Counter voor intern gebruik ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_Offset":
                    description = "Out.X_AccPedal offset (opgenomen in de Out.X_AccPedal) De offset van de versnellingspook ondersteunende functie. Resolutie is 0,1%. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.m_AirTMasLim":
                    description = "De Koppel Masters gevraagd airmass te beperken motor output koppel. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_OutAccPed":
                    description = "Berekend gaspedaal positie. : De dezelfde waarde als Out.X_AccPedal. (Help varaible). Resolutie is 0,1%. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "EmLimProt.RatioHigh":
                    description = "Wanneer de gesimuleerde koppeling detectie actief is deze limiet gebruikt om een hoge limiet voor de verandering in de versnelling. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh ";
                    //category = XDFCategories.EmLimProt;

                    break;
                case "EmLimProt.RatioFilt":
                    description = "Gefilterde EmLimProt.Ratio De filterfactor gebruikt voor deze gegevens is EmLimCal.FiltFac Interval is elke 20 ms. ";
                    //category = XDFCategories.EmLimProt;

                    break;
                case "EmLimProt.RatioLow":
                    description = "Wanneer de gesimuleerde koppeling detectie actief is deze limiet gebruikt om een lage limiet voor de verandering in de versnelling. EmLimProt.RatioLow = EmLimProt.RatioFilt * EmLimCal.GrShftRatioLow ";
                    //category = XDFCategories.EmLimProt;

                    break;
                case "EmLimCal.GrShftRatioHigh":
                    description = "Indien de acc pedaal is vrijgegeven onder de 10% is deze factor eenmaal vermenigvuldigd met de gefilterde overbrengingsverhouding, om een hoge limiet voor de detectie van een verandering in versnelling. Als het gefilterd wordt abowe die grens zal de EMLim.ST_GearShifting worden ingesteld. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh ";
                    //category = XDFCategories.EmLimCal;

                    break;
                case "Out.PWM_Egr":
                    description = "EGR klep PWM uitgang EENHEID:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "EmLim.RatioDelta":
                    description = "Absolute delta van de EmLimProt.RatioFilt, gebruikt voor het opsporen van stabiele verhouding na een versnellingspook of op te sporen een schakelindicatoren Interval is elke 20 ms. ";
                    //category = XDFCategories.EmLim;

                    break;
                case "EmLimProt.Ratio":
                    description = "Actueel overbrengingsverhouding waarde die wordt gebruikt voor het opsporen van gearshifting op handmatige auto's voor de lucht antijerk en snel / langzaam tipout. Berekend als volgt: rpm * 128 = verhouding km / h * 10 Interval is elke 20 ms. ";
                    //category = XDFCategories.EmLimProt;

                    break;
                case "Out.PWM_BoostCntrl":
                    description = "Duty-cycle voor vuldruk ventiel. Resolutie is 0,1%. Schaalinterval wordt elke 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "CrnkCVCal.Q_AirLimitHys":
                    description = "Hysterese om ventiel te klep / klep. Wanneer de slinger geval klep geopend is: CrnkCVProt.Q_Limit = CrnkCVCal.Q_AirLimit - CrnkCVCal.Q_AirLimitHys. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.CrnkCVCal;

                    break;
                case "Out.PW_X_Pedal":
                    description = "Oude Pedalposition aan TCS systeem, niet gebruikt ";
                    //category = XDFCategories.Out;

                    break;
                case "Torque.M_MaxEngAndGear":
                    description = "Maximaal motor en de versnellingsbak koppel bij de werkelijke motortoerental. Resolutie is 1 Nm. ";
                    //category = XDFCategories.Torque;

                    break;
                case "EmLimCal.FiltFac":
                    description = "filter wordt gebruikt voor de versnelling. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> EmLimProt.RatioFilt old_value -> oud EmLimProt.RatioFilt new_value -> EmLimProt.Ratio Const -> EmLimCal.FiltFac Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.) ";
                    //category = XDFCategories.EmLimCal;

                    break;
                case "EmLimCal.GrShftRatioLow":
                    description = "Indien de acc pedaal is vrijgegeven onder de 10% is deze factor eenmaal vermenigvuldigd met de gefilterde overbrengingsverhouding, om een lage limiet voor de detectie van een verandering in versnelling. Als de gefilterde ratio lager is dan deze grens zal de EMLim.ST_GearShifting worden ingesteld. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh ";
                    //category = XDFCategories.EmLimCal;

                    break;
                case "Out.PWM_Purge":
                    description = "aftapkraan PWM uitgang EENHEID:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.Out;

                    break;
                case "CrnkCVCal.Q_AirLimit":
                    description = "luchtstroom beperken. Zolang In.Q_AirInletFilt> CrnkCVCal.Q_AirLimit - CrnkCVCal.Q_AirLimitHys de motorcarters geval ventilatie klep wordt geopend. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.CrnkCVCal;

                    break;
                case "Out.PW_M_Engine":
                    description = "Oude PWM signaal sturen naar TCS systeem, met vermelding van de werkelijke motorkoppel. Niet gebruikt. ";
                    //category = XDFCategories.Out;

                    break;
                case "TorqueProt.n_engfilt":
                    description = "Gefilterde waarde van In.n_Engine10ms om te worden gebruikt als aanwijzer in de omschakeling van torquemaster te m_Air en Max motorkoppel ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueCal.t_NoiseRedRamp":
                    description = "De oprit is dit lang nadat het koppel vermindert tot een beperking van het lawaai. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.v_NoiseRedMax":
                    description = "De snelheid van het voertuig mag niet hoger zijn dan dit niveau voor een gekalibreerd tijd, als een koppel verlaging tot een beperking van het lawaai moet worden gedaan. Resolutie is 0,1 km / h. ";


                    break;
                case "TorqueCal.M_BrakeLimit":
                    description = "Maximaal motorkoppel beperken, wanneer de bestuurder het rempedaal indrukken. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.v_NoiseRedMin":
                    description = "De snelheid van het voertuig worden niet onder dit niveau voor een gekalibreerd tijd, als een koppel verlaging tot een beperking van het lawaai moet worden gedaan. Resolutie is 0,1 km / h. ";


                    break;
                case "TorqueCal.M_NoiseRedLim":
                    description = "Maximaal motorkoppel beperken, wanneer de bestuurder het gaspedaal duwen om een gekalibreerde niveau is na het rijden bij 50 km / h voor een gekalibreerde tijd (op de tweede versnelling als de handmatige auto), om de ruis te verminderen. Deze waarde wordt gebruikt voor auto's met manualgearbox. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.m_FrictionAir":
                    description = "Air vraag tegen nominale stationair toerental en warme motor, gekalibreerd in testcell over dezelfde motor als de torqueMap kalibratie is gedaan. Het wordt gebruikt voor compensatie bij de berekening en de beperking van het koppel. Resolutie is 1 mg / c. ";


                    break;
                case "TorqueCal.t_NoiseRAt50km":
                    description = "De snelheid van het voertuig moet worden binnen de geijkte grenzen gedurende deze tijd, om te beginnen met een koppel vermindering ter voorkoming van geluidsoverlast na de bestuurder heeft de acc.pedal ingedrukt tot de geijkte niveau. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.X_NoiseRedAccP":
                    description = "Acc.Pedal niveau dat zal beginnen koppel vermindering ter voorkoming van geluidsoverlast. Resolutie is 0,1%. ";


                    break;
                case "TorqueCal.nosample":
                    description = "Geen van de monsters die gebruikt wordt voor de gemiddelde calc van TorqueProt.n_engfilt ";


                    break;
                case "TorqueCal.X_Step":
                    description = "Max Out.X_AccPedal delta (% / 10ms). Dit om te vertragen veranderingen in Out.X_AccPedal. Alleen gebruikt in de automatische auto's bij het rijden met cruise control en niet dwingende cruise met gaspedaal. Resolutie is 0,1%. ";


                    break;
                case "TorqueCal.X_MaxOffset":
                    description = "Max waarde voor schakelindicatoren steun gecompenseerd. Resolutie is 0,1%. ";


                    break;
                case "TorqueCal.X_OffsetStep2":
                    description = "schakelindicatoren steun gecompenseerd decrement waarde / 10 ms. Resolutie is 0,1%. ";


                    break;
                case "TorqueCal.X_OffsetStep":
                    description = "schakelindicatoren steun gecompenseerd increment waarde / 10 ms. Resolutie is 0,1%. ";


                    break;
                case "TorqueCal.M_StallLimit":
                    description = "Maximaal motorkoppel beperken, wanneer de bestuurder te drukken zowel de brakepedal en het gaspedaal tegelijk. (Alleen auto's met auto.gearbox). Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.t_ThrReaction":
                    description = "Reactietijd gasklep voor het verplaatsen van een stap overeenkomstige een koppel beperking. Gebruikt voor deceiding als een vermindering van de lucht moet worden gemaakt of als er gewoon een ontsteking vermindering dient te worden gemaakt. Als In.t_ExtTorqLimDuration is op minste tweemaal t_ThrReaction, dan lucht vermindering zal worden gemaakt. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.t_MaxIgnReduc":
                    description = "Maximale tijd voor ontsteking veroorzaakt door vermindering van het koppel beperken functie gedurende t_CoolDown tijd. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.t_ThrOverTime":
                    description = "Als In.t_ExtTorqLimDuration + t_ThrOverTime is verstreken sinds gestart en vermindering van lucht is niet actief, lucht verlaging wordt gemaakt totdat ExtTorqLim is voltooid. Resolutie is 1 ms. ";


                    break;
                case "TorqueCal.M_LDA2Lim":
                    description = "Minimale motorkoppel beperken, wanneer de bestuurder heeft het gaspedaal zo erg dat de voorwielen zijn uitglijden. Hoge limiet. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.M_LDA1Lim":
                    description = "Minimale motorkoppel beperken, wanneer de bestuurder heeft het gaspedaal zo erg dat de voorwielen zijn uitglijden. Lage limiet. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.t_DebFuelCut":
                    description = "Debouncing tijd gebruikt om te wachten op M_Engine overschrijding te verdwijnen voordat Fuel Cut Off is reqested wanneer berekend motorkoppel is hoger dan de maximum koppel + M_OffsFCutStart. Resolutie is 1 ms. ";


                    break;
                case "Out.n_Engine":
                    description = "Engine RPM EENHEID: rpm MAX: 7000 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 10ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.n_EngineNomIdle":
                    description = "Nominale motor stationair RPM EENHEID: rpm MAX: 2000 min: 0 TRANS: V = P *. Resolutie: 1. Interval is 100ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "IdleProt.C_A_Part":
                    description = "Werkelijke constante en adaptatie deel van stationair regelaar afhankelijk van de snelheid van het voertuig. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.I_Part":
                    description = "Actueel ik deel stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.P_Part":
                    description = "Actueel P deel van stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "DNComp.IgnRampTimer":
                    description = "Bevat de tijdspanne voor de oprit. Opgehaald uit een cal tabel. ";
                    //category = XDFCategories.DNComp;

                    break;
                case "Out.T_Engine":
                    description = "Temperatuur koelvloeistof motor EENHEID: (C Max: 150 MIN: -40 TRANS: V = P +4. Resolutie: 1. Interval is 1000ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.M_MaxAtActualRPM":
                    description = "Max motorkoppel op werkelijke RPM EENHEID: Nm MAX: 400 MIN: 0 TRANS: V = P / 2. Resolutie: 1. Interval is 20ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.M_Engine":
                    description = "motorkoppel EENHEID: Nm MAX: 400 MIN: -100 TRANS: V = (P +. Resolutie: 1. Interval is 10ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.X_AccPedal":
                    description = "Pedal functie eenheid:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 20ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "IdleProt.n_EngLOffOffset":
                    description = "Werkelijke extra licht af rpm offset toegevoegd worden aan het nominale toerental van de motor. Deze gegevens is het resultaat van de interpolatie van tafel IdleCal.n_EngLOffDrive of IdleCal.n_EngLOffNeutral ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.T_Part":
                    description = "Luchttemperatuur deel voor stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "Out.V_FuelConsumed":
                    description = "Geconsumeerd brandstof volume EENHEID: ml MAX: 65.535 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "IdleProt.p_ambcomp":
                    description = "Omgevingslucht druk compensatie deel voor stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.n_EngineDiff":
                    description = "Motortoerental verschil voor idlespeed regelgever. IdleProt.n_EngineDiff = Idle.n_EngineNominal - In.n_Engine. Resolutie is 1 tpm. Elk interval is 100 ms. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.Q_StartOffs":
                    description = "Extra Q gecompenseerd boven stationair Q tijdens het starten. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.n_EngineDelta":
                    description = "Motortoerental delta voor idlespeed regelgever D-gedeelte. Resolutie is 1 tpm. Elk interval is 100 ms. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.Q_LOffRpmOffs":
                    description = "Extra Q_Air toegevoegd aan de stationair lucht als licht af rpm gecompenseerd actief zijn. Deze gegevens is het resultaat van de interpolatie van tafel IdleCal.Q_LOffRpmDrive of IdleCal.Q_LOffRpmNeutral. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.Q_StartOffsAdd":
                    description = "Als motortoerental eenmaal zijn meer dan 300 toeren per minuut zal deze gegevens worden verhoogd met \"IdleCal.Q_StartOffsRamp\" en toegevoegd boven de lucht totdat startmode 2 wordt bereikt. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "MaxSpdCal.n_EngMin":
                    description = "De airmass compensatie afhankelijk van de hoge toerental van de motor worden gewist belove dit motortoerental. Resolutie is 1 tpm. ";
                    //category = XDFCategories.MaxSpdCal;

                    break;
                case "Idle.Q_Air":
                    description = "Actueel airmass vanaf stationair controller, de totale som van de volgende regelgever delen: IdleProt.C_Part IdleProt.P_Part IdleProt.I_Part IdleProt.D_Part IdleAdap.Q_Air (neutraal of Drive). Resolutie is 0,01 g / s. Interval is 50 ms. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Out.X_AccPedalGradient":
                    description = "Gaspedaal positie kleurverloop. Het verschil tussen de twee meest recente, opeenvolgende gaspedaal posities in AD. Resolutie is 1 AD. Interval is om de 5 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "MaxSpd.AirOffset":
                    description = "Offset voor afname van airmass verzoek afhankelijk van hoog motortoerental. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.MaxSpd;

                    break;
                case "MaxSpd.n_EngLimFuel":
                    description = "Motortoerental limiet voor fuelcut, deze grens is altijd actief undepending van de ontdekte vistuig. Deze limiet is 200rpm boven \"MaxSpdProt.n_EngLimAir\". Resolutie is 1 tpm. ";
                    //category = XDFCategories.MaxSpd;

                    break;
                case "Out.fi_Ignition":
                    description = "Actueel ontsteking hoek. Een positieve waarde is voor het BDP en een negatieve waarde wordt na BDP. Resolutie 0,1 °. Interval is Every verbranding. ";
                    //category = XDFCategories.Out;

                    break;
                case "MaxSpdCal.RampFac":
                    description = "factor voor de daling airmass gecompenseerd wanneer motortoerental zijn te hoog. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.MaxSpdCal;

                    break;
                case "MaxSpdCal.AirOffset":
                    description = "factor voor de daling gevraagd airmass wanneer motortoerental te hoog. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.MaxSpdCal;

                    break;
                case "Idle.n_EngQuote":
                    description = "Quote tussen In.n_GearboxIn en In.n_Engine. Altijd groter of gelijk aan nul. Resolutie is 128/100. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.DNCompIgnWeightFac":
                    description = "Weightfactor afhankelijk van de diff tussen in.n_engine en in.n_GearBoxIn. Dit gewicht fac wordt gebruikt om de IGN offset en constante en adaptatie lucht uit de DN compensatie. Resolutie is 1%. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Out.v_Vehicle":
                    description = "Voertuig EENHEID snelheid: km / h Max: 300 MIN: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 100ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Idle.Q_FirstDrvComp":
                    description = "Extra station lucht tijdens stationair draaien, de eerste keer rijden is geactiveerd. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.n_EngineNominal":
                    description = "Actueel nominaal toerental van de motor. Wanneer de motor niet in idle-modus zal deze variabele wordt ingesteld op nul. Resolutie is 1 tpm. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.Q_AirFriction":
                    description = "Variabele blijkt wrijving lucht voor deze motor. Gebruikt ter compensatie van bij de berekening en de beperking van motorkoppel. Idle wrijving airmass = C_PartNeutral werkelijke P_Part + + I_Part + D_Part + IdleAdap.Q_AirNeutral. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Out.p_AirBarometric":
                    description = "Luchtdruk luchtdruk EENHEID: kPa MAX: 200 MIN: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 1000ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Idle.Q_LOffIgnPart":
                    description = "Actueel licht af ontsteking deel van stationair regelaar. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.Idle;

                    break;
                case "IdleProt.n_ElevIdleGoal":
                    description = "Dit is de verhoogde stationair gecompenseerd doel, zin IdleProt.n_ElevIdleOff zal oprit tot dit vaule op 1 rpm/50 ms ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleCal.v_VehicLim":
                    description = "Voertuig snelheidsbeperking voor stationair controle. Stationair controle wordt uitgeschakeld wanneer de snelheid van het voertuig hoger is dan deze limiet. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.LOffRampDelay":
                    description = "Vertraging tijd tussen elke decrement van licht uit rpm gecompenseerd \"IdleProt.n_EngLOffOffset\" wanneer de snelheid van het voertuig lager is dan \"IdleCal.v_VehicleLOffRamp\". Resolutie is 1 ms. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_GearboxDiff":
                    description = "Het verschil in n_GearboxDiff aan te geven dat het vistuig begint te worden geactiveerd. Resolutie: 1. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.Q_FirstDrvComp":
                    description = "Extra station lucht gebruikt alleen de eerste keer rijden is geactiveerd na 15 min. ontsteking uit. Deze lucht is ramped tot nul aan het Q_FirstDriveRamp decrement factor. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.Q_StartOffsRamp":
                    description = "Aanvullende lucht steeg op de start lucht als het toerental boven 300 tpm tijdens startmode 1. Dit is de wal die de motor zal bereiken nominale stationair toerental en voer startmode 2. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "Out.A_Throttle":
                    description = "Throttle Control Unit: mm (MAX: 2500 MIN: 0 TRANS: V = P *. Resolutie 1. Interval is 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "IdleCal.n_LowIPart":
                    description = "Niet toestaan toename van I-deel bij een toerental lager dan IdleCal.n_LowIPart ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.LOffFilterFactor":
                    description = "Filter factor voor de hoge hoogte compensatie functie Const bereik 0 - 9999 0 en 100 = 100% new_value 1 en 200 = 50% new_value 2 en 400 = 25% new_value 3 en 800 = 12,5% new_value 4 en 1600 = 6,25% new_value ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleAdap.Q_AirNeutral":
                    description = "Adaptie waarde voor idlespeed verordening (drive niet geactiveerd). Deze waarde wordt toegevoegd aan de PID en Constant deel van de toezichthouder. Als het I-deel beperkt is zal de adaptatie stoppen. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleAdap;

                    break;
                case "StartAirCal.PedalLimit":
                    description = "gaspedaal Boven deze grens is de brandstof cutted en de gasklep volledig geopend is. ";
                    //category = XDFCategories.StartAirCal;

                    break;
                case "IdleAdap.Q_AirDrive":
                    description = "Adaptie waarde voor idlespeed verordening (schijf geactiveerd). Deze waarde wordt toegevoegd aan de PID en Constant deel van de toezichthouder. Als het I-deel beperkt is zal de adaptatie stoppen. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleAdap;

                    break;
                case "IdleCal.n_TPartRamp":
                    description = "Dit ijkwaarde zal continu oprit IdleProt.T_Part off van de eerste verbrandingsmotor tot deze waarde. Resolutie: 1. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_LOffIdleStep":
                    description = "RPM oprit stap die is genomen om de IdleCal.LOffRampDelay wanneer de snelheid van het voertuig lager is dan IdleCal.v_VehicleLOffRamp. Resolutie is 0,1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.N_LOffComb":
                    description = "Het aantal verbranding na de start om de daalde licht af RPM lucht op grote hoogte ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngElevOff":
                    description = "Verhoogde Onbelaste gecompenseerd. Deze offset is toegevoegd aan Idle.n_EngineNominal bij In.ST_ElevatedIdle actief is. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "Out.PWM_SecAirValve":
                    description = "Secundaire luchtinjectie ventiel EENHEID:% MAX: 1000 MIN: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "IdleCal.X_AccPedalLim":
                    description = "Als Out.X_AccPedal lager is dan deze grenswaarde is de vlag voor vrijgegeven pedaal ingesteld. Resolutie is 0,1%. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngNomExtra":
                    description = "Extra tpm boven de nominale stationair toerental om te stoppen met de Q_StartOffs oprit. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.X_AccPedalLim2":
                    description = "Als Out.X_AccPedal hoger is dan deze grenswaarde is de vlag voor vrijgegeven pedaal gewist. Resolutie is 0,1%. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngDiffLim":
                    description = "Max motortoerental verschil tussen de werkelijke enginespeed en nominale stationair toerental te activeren idlemode. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngDeltaLim":
                    description = "Max motortoerental delta te activeren idlemode. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleProt.Q_ElevIdle":
                    description = "Dit is de verhoogde stationair Q-compenseren zal de stationair toerental gecompenseerd te n_ElevIdleOff ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.n_ElevIdleOff":
                    description = "Dit is de verhoogde stationair gecompenseerd. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "DNCompProt.RampTimer":
                    description = "Bevat de tijdspanne voor de oprit. Opgehaald uit een cal tabel. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "IdleCal.IgnRampDelay":
                    description = "Wanneer de D / N lucht compensatie geactiveerd is, wacht dit nr van ms voordat de ontsteking oprit is verricht. Resolutie is 1 ms. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "DNCompProt.I_PartStart":
                    description = "Bevat de stationair i_part wanneer de neutrale controle is geactiveerd. Tijdens de neutrale controle i_part van het stationair lucht is verplaatst naar de constante en ADAP deel van de drive-neutrale vergoeding. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "IdleCal.I_Part":
                    description = "I-deel wordt gebruikt als constante waarde gecompenseerd wanneer de stationair I-deel niet actief is. Bij stationair toerental is uitgeschakeld en de werkelijke I-deel is lager dan deze waarde zal deze waarde worden copyed met de werkelijke I-deel. Als de werkelijke I-deel groter is dan deze waarde zal de werkelijke I-deel worden ramped vaststelling van deze waarde met 0,01 g / s elke 50ms. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.I_PartMax":
                    description = "Tijdens owershot (Idle.StartAirMode = 2) moet de start lucht oprit naar ten minste dit max waarde voor de start lucht-modus is ingesteld op 0 en start lucht is copyed aan IdleProt.I_Part. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.v_VehicleLim2":
                    description = "Als de snelheid van het voertuig lager is dan deze limiet op automatische versnellingsbak of als er geen versnelling wordt gedetecteerd op de manuele versnellingsbak en pedaal vrijgegeven, rpm delta van minder dan n_EngDeltaLim2 en de snelheid van het voertuig boven de 3 km / h is de stationair I-deel geactiveerd. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngDeltaLim2":
                    description = "Onder deze rpm delta limiet is inactief I-deel geactiveerd indien pedaal wordt losgelaten, de snelheid van het voertuig boven de 3 km / h en geen versnelling gedetecteerd op handgeschakelde versnellingsbak of als de snelheid van het voertuig lager is dan v_VehicleLim2 op automatische versnellingsbak of neutraal wordt gedetecteerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.T_EngineLimit":
                    description = "Onder deze motor temperatuurgrens is niet stationair adaption toegestaan. Resolutie: 1 ° C. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.AdapDelay":
                    description = "Vertraging tijd tussen elke aanpassing aanpassing binnen juiste adaption voorwaarden. Deze keer moet langer zijn dan het I-deel vertragingstijd \"I_PartDelay\". Resolutie is 1 ms. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.n_EngAdapLim":
                    description = "Motortoerental verschil tussen de werkelijke waarde en het nominale toerental van de motor moet zijn dan deze waarde, zodat de ruststand adaption. Resolutie is 1 tpm. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.I_PartDelay2":
                    description = "Vertraging tijd tussen elke 0,05 g / s decrement van het I-deel als inactief is uitgeschakeld en het I-deel is ramped tot IdleCal.I_Part. Resolutie is 1 ms. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.I_PartDelay":
                    description = "Vertraging tijd tussen elke aanpassing van de regulator I-deel. Gebruikt voor het verkrijgen hoger. Resolutie over het I-deel. Deze keer moet korter zijn dan de adaptatie tijd \"AdapDelay\". Resolutie is 1 ms. ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "BoostProt.OffsetTemp":
                    description = "Offset waarde aan PWM uit, afhankelijk van de temperatuur van de lucht. Update: elke 100 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.OffsetHighAlt":
                    description = "Offset waarde aan PWM uit, afhankelijk van hoogte. Update: elke 100 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.AntiHowlvalue":
                    description = "Anti janken waarde gebruikt in matrixrekening ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.Bypassmapvalue":
                    description = "Als de m_Request afgeleide negatief is, wordt deze variabele wordt berekend te vergelijken met m_Request te openen wanneer de bypass klep (m_Request <Bypassmapvalue) -> Open ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.P_DiffILimReq":
                    description = "Differance tussen gevraagde belasting en I-deel beperkt. BoostProt.LoadRequest - (BoostProt.I_LoadLim + hysteres). Update: Berekend elke 100 msec toen ik deel zijn geactiveerd. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.ActPercent":
                    description = "Procent regelgever constante inclusief aanpassing gedeeld met PWM actualiteit zijn. Update: elke 100 msec. Resolutie is 1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.ReqDerivata":
                    description = "M_Request derivata. Resolutie is 1 mg / c. Interval is 20 ms. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.OldRequest":
                    description = "M_request, 20 msec. oud, gebruikt voor de berekening uit m_request derivata. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostCal.Hysteres":
                    description = "Hysteres waarde voor de P en I, deel belasting beperken. Resolutie is 1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.IFacMax":
                    description = "Max toegestane waarde voor I deel van regelgever. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapAdjustH":
                    description = "Stel waarde met hoge adaption. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapAdjustN":
                    description = "Stel waarde met normale adaptatie. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostProt.NoiseReduction":
                    description = "Deze waarde wordt toegevoegd aan BoostProt.PWMCalc en wordt ofwel 0% of 98%. Dit maakt de boostcontroller klep te openen volledig bij lage snelheid. Dit zal maken aan de geluidsoverlast. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostAdap.Adaption":
                    description = "Adaptie waarde voor aanjaagdrukregeling. Elk interval is 100ms. ";
                    //category = XDFCategories.BoostAdap;

                    break;
                case "BoostProt.GoalPercent":
                    description = "Procent regelgever constante inclusief aanpassing gedeeld met PWM moeten zijn. Update: elke 100 msec. Resolutie is 1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.I_LoadLim":
                    description = "Laad beperken tabblad. in staat te stellen deel van de I impuls regelgever. Als de belasting verzoek van kapitein airmass boven deze waarde plus de hysteres is het ik deel ingeschakeld en de gasklep gesloten lus is uitgeschakeld. Als de lading verzoek van airmass kapitein onder deze waarde is de I Deel gehandicapten en het gaspedaal wordt alowed te lopen in een gesloten lus. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.P_LoadLim":
                    description = "Actueel Load beperking in staat te stellen deel van de P impuls regelgever. Als de belasting verzoek van kapitein airmass boven deze waarde plus de hysteres is de P deel ingeschakeld. Als de belasting verzoek van airmass kapitein onder deze waarde is de P deel uitgeschakeld. Update: elke 100 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "Boost.AirLimPos":
                    description = "Positieve maximum van de airmass voor het I-deel van de airmass controller Interval is Every?. ";
                    //category = XDFCategories.Boost;

                    break;
                case "Boost.AirLimNeg":
                    description = "Negatieve maximum van de airmass voor het I-deel van de airmass controller Interval is Every?. ";
                    //category = XDFCategories.Boost;

                    break;
                case "Boost.SetValue":
                    description = "Werkelijke vaste waarde impuls regelgever. SetValue = LoadRequest + MapOffsValue. Update: elke 10 msec. ";
                    //category = XDFCategories.Boost;

                    break;
                case "BoostProt.PConst":
                    description = "P constant voor P deel berekening van de toezichthouder. f (belasting diff, rpm). Update: elke 100 msec ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.DFac":
                    description = "Berekend D deel voor regelgever. OBS! Er kunnen problemen met de OBDII diagnose stellen bij het gebruik van dit deel. belasting derivata * D const D = 20. Update: elke 10 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.IConst":
                    description = "Ik constant Ik deel berekening van de toezichthouder. f (belasting diff, rpm). Update: elke 100 msec ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.PWMCalc":
                    description = "Berekend PWM waarde. (Hoofd constante waarde Adaptie + + P + I + D). Update: elke 10 ms ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.DConst":
                    description = "D constant voor D deel berekening van de toezichthouder. f (belasting derivata, rpm). Update: elke 100 msec ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.LoadDiff":
                    description = "Verschil tussen ingestelde waarde belasting en de werkelijke belasting. Update: elke 10 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.LoadRequest":
                    description = "Actueel airmass verzoek van airmass meester. Update: elke 10 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.RegConValue":
                    description = "Berekend belangrijkste constante afhankelijk van toerental en belasting. Update: elke 10 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.IFac":
                    description = "Berekend Ik deel voor regelgever. belasting diff * Ik const I = I + 1000. Update: elke 10 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.PFac":
                    description = "Bereken P deel voor regelgever. belasting diff * P const P = 100. Update: elke 10 msec. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostCal.AdapAdjustL":
                    description = "Stel waarde met lage adaptatie. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.n_AreaCompLow":
                    description = "Op welk toerental van de motor het gebied compensatie functie vangt aan op oprit ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AreaCompFilter":
                    description = "Filer voor gasklep gebied compensatie functie. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.n_AreaCompHigh":
                    description = "Op welk toerental van de motor het gebied compensatie functie zal volledig ramped ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapBasicP":
                    description = "Stel waarde met positieve fundamentele aanpassing. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdappAirOff":
                    description = "Druk na gasklep moet boven athmospere druk + dit gecompenseerd voor de negatieve fundamentele druk. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapBasicN":
                    description = "Stel waarde met negatieve fundamentele aanpassing. Resolutie is 0,1%. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.FilterFactor":
                    description = "filter bij de berekening van D-deel van Boostcontroller. De omvang van deze moeten van dezelfde grootte als het bemonsteringstijd, die 20ms ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AntiHowlPresLim":
                    description = "Disable Anti janken functie bij omgevingstemperatuur druk lager is dan deze waarde ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.RatioDeltaLim":
                    description = "Boven deze grens, een versnellingshendel is in volle gang, dus remmen een adaptatie ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapMaxDiffP":
                    description = "Max toegestaan diff. druk over gasklep voor fundamenteel adaption. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.MaxOffAdap":
                    description = "Limiet voor hoeveel m_AirInlet mogen zijn over meer dan de werkelijke waarde ingesteld voor hoge adaption. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdaptTimeL":
                    description = "Tijd voorwaarden moet zijn fullfield voor lage adaptatie. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.VehicleSpeedLim":
                    description = "Als de snelheid van het voertuig zijn belove deze limiet en gasklep hoek zijn belove \"ThrottLim\" noemt PWM gelijk met 2,0%. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.TimeOpenBPV":
                    description = "Max toegestane tijd turbo bypass klep kan open. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.m_RequestLim":
                    description = "Als m_Request zijn belowe deze limiet en snelheid van het voertuig zijn belove \"VehicleSpeedLim\" noemt PWM gelijk met 2,0%. Resolutie is 1 mm2. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapRpmH":
                    description = "Lage tpm limiet voor normale adaptatie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapRpmL":
                    description = "Lage tpm limiet voor normale adaptatie. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdaptAirDiff":
                    description = "Max toegestaan lucht diff. voor normale adaptatie. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdaptTimeH":
                    description = "Tijd voorwaarden moet zijn fullfield voor hoge adaption. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdaptTimeN":
                    description = "Tijd voorwaarden moet zijn fullfield voor normale adaptatie. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapBasRpmH":
                    description = "Lage tpm limiet voor fundamentele aanpassing. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapBasRpmL":
                    description = "Lage tpm limiet voor fundamentele aanpassing. Resolutie is 1 tpm. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapTimeB1":
                    description = "Tijd voorwaarden moet zijn fullfield voor positieve fundamentele aanpassing. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.ReqOffset":
                    description = "Als m_airinlet boven m_request - dit gecompenseerd worden min belasting beperken fullfield voor negatieve fundamentele aanpassing. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.AdapTimeB2":
                    description = "Tijd voorwaarden moet zijn fullfield voor negatieve fundamentele aanpassing. Resolutie is 1 msec. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.MaxPosDerBPV":
                    description = "Als m_Request derivata boven deze grens zijn turbo bypass klep geopend. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.MaxNegDerHBA":
                    description = "Als m_Request delta (BoostProt.ReqDerivata100ms) lager is dan deze grens, de Hoge Boost Adaptie is uitgeschakeld. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.MaxNegDerBPV":
                    description = "Als m_Request derivata zijn belove deze limiet zijn turbo bypass klep geopend. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.LowThrLimBPV":
                    description = "Belove dit m_Request beperken zijn turbo bypass klep open. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "BoostCal.HighThrLimBPV":
                    description = "Belove dit m_Request limiet is het mogelijk om open turbo bypass klep. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "SwitchProt.A_DPOffset":
                    description = "Switch punt gebied gecompenseerd vanwege Dashpot dummy variabele. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_ACOffset":
                    description = "Switch punt gebied gecompenseerd als gevolg van AC. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_LDAOffset":
                    description = "Switch punt gebied gecompenseerd vanwege LDA. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_LOffOffset":
                    description = "Switch punt gebied gecompenseerd vanwege Light Off lucht. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_StartOffset":
                    description = "Switch punt gebied gecompenseerd vanwege Start lucht. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_AmbPresOff":
                    description = "Switch punt gebied gecompenseerd te wijten aan: de lucht druk. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt.A_SwitchPoint":
                    description = "De geschatte - max. oppervlakte verzoek en - max. toegestaan throttle2 met vrijgegeven gaspedaal pedal2. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "SwitchProt1.A_Throttle1":
                    description = "Relatieve beweging van de gasklep poti1. Resolutie is 1 mm2. ";
                    //category = XDFCategories.SwitchProt1;

                    break;
                case "SwitchProt1.A_AmbPresOff":
                    description = "Ruimte gecompenseerd lezen uit een tabel. De lucht druk afhankelijk gecompenseerd. Resolutie is 1 mm2. ";
                    //category = XDFCategories.SwitchProt1;

                    break;
                case "SwitchProt.A_ACStartOffs":
                    description = "Switch punt gebied gecompenseerd vanwege AC opstarten. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "BstKnkProt.MapPointer":
                    description = "Pointer voor de berekening van de max. toegelaten airmass. Deze aanwijzer zijn gelijk aan de gemiddelde waarde van domino ontsteking gecompenseerd, maar kon zijn adjustet als een cilinder gecompenseerd gedeeld met constante lager zijn. Andere compensaties (Ign.fi_OtherOff) zijn ook toegevoegd aan deze pointer, inclusief correctie voor de index. Resolutie 0,1 °. ";
                    //category = XDFCategories.BstKnkProt;

                    break;
                case "BstKnkProt.DivFactor":
                    description = "Factor gebruikt voor de berekening van MapPointer. ";
                    //category = XDFCategories.BstKnkProt;

                    break;
                case "BstKnk.MaxAir":
                    description = "Max toegestaan airmass afhankelijk van kloppen en max. toerental van de motor. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.BstKnk;

                    break;
                case "BstKnkCal.NegStep":
                    description = "Als de waarde van de matrix (BstKnkCal.MaxAirmass) zijn belove werkelijke max. airmass zijn werkelijke max. airmass daalde met deze waarde. Resolutie is 1 mg / c. ";


                    break;
                case "BstKnkCal.DivFacHighLoad":
                    description = "Factor gebruikt voor de berekening van MapPointer wanneer MAF.m_AirInletAir> IgnKnk.AdpHighLim voor de tijd BstKnkCal.DivFacDelTimer. Resolutie is 0,03. ";


                    break;
                case "BstKnkCal.DivFacDelTimer":
                    description = "Vertraging tijd voordat u de BstKnkCal.DivFacHighLoad. Resolutie is 1 ms. ";


                    break;
                case "BstKnkCal.DivFacLowLoad":
                    description = "Factor gebruikt voor de berekening van MapPointer wanneer MAF.m_AirInletAir <IgnKnk.AdpHighLim. Resolutie is 0,03. ";


                    break;
                case "DiffPSProt.v_GearBoxOut":
                    description = "TCM versnellingsbak uitvoersnelheid geconverteerd naar de snelheid van het voertuig. Resolutie is 0,1 km / h. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "DiffPSProt.v_Diff":
                    description = "Speed differance tussen de versnellingsbak uit de snelheid en een voorwiel. Resolutie is 0,1 km / h. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "DiffPSProt.M_Limit":
                    description = "motorkoppel beperking niet aangepast voor - vertraging - wijziging delta beperking. Resolutie is 1 Nm. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "SwitchCal.n_EngStartOff":
                    description = "Veiligheidsschakelaar moet beperkt het tijdstip beginnen compenseren .. De SwitchCal.A_StartOffset wordt toegevoegd aan de kaart SwitchCal.A_SwitchPoint zolang: - het begin actief is (Idle.StartAirMode> 0) en - de tijd die sinds toerental van de motor ging boven SwitchCal.n_EngStartOff minder dan SwitchCal.t_EngStartOff. Resolutie is 1 tpm. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_LDAOffset":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint indien LDA actief is. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_StartOffset":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint indien begin actief is. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_ACStartOffs":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint tijdens AC opstarten. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_LOffOffset":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint wanneer? actief is. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "DiffPSCal.v_MaxActive":
                    description = "Maximum snelheid waarmee de verschillenvensters beschermen systeem. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "DiffPSCal.M_NegRampMax":
                    description = "De negatieve verandering van DiffPS.M_Limit wordt beperkt door dit koppel elke stap 100ms. Maar als het werkelijk koppel Out.M_Engine + 40Nm lager is dan de beperking zal dit Negativ max. oprit niet meer worden gebruikt en DiffPS.M_Limit is ingesteld op Out.M_Engine. Resolutie is 1 Nm. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "Boost.AreaComp":
                    description = "Compensatie factor voor de aanwijzer in de omgeving matrix. Interval is elke 100 msec. ";
                    //category = XDFCategories.Boost;

                    break;
                case "DiffPS.M_Limit":
                    description = "Maximaal motorkoppel van de verschillenvensters bescherming systeem te beperken wiel meester. Deze grens is het resultaat van DiffPSCal.M_LimitTab maar zijn beperkt in verandering delta door DiffPSCal.DiffPSCal.M_PosRampMax en DiffPSCal.DiffPSCal.M_NegRampMax. Als de v_GearBoxOut = 0, zal deze grens worden ingesteld tot 400 Nm. Resolutie is 1 Nm. Elk interval is 100ms. ";
                    //category = XDFCategories.DiffPS;

                    break;
                case "DiffPSCal.M_PosRampMax":
                    description = "De positieve verandering van DiffPS.M_Limit wordt beperkt door dit koppel stap iedere 100ms. Resolutie is 1 Nm. ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "DiffPSCal.SpeedDivFac":
                    description = "Divisie factor herberekenen de versnellingsbak snelheid uit te VBUS km / h. In.v_GearBoxOut * 128 DiffPSProt.v_GearBoxOut = DiffPSCal.SpeedDivFac ";
                    //category = XDFCategories.DiffPSCal;

                    break;
                case "SwitchCal.A_DPOffset":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint als dashpot dummy varible actief is. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "Switch.A_SwitchPoti1":
                    description = "Absolute schakelaar voor gasklep poti 1 kan worden vergeleken met Out.A_throttleDemand of In.A_throttleActual. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.Switch;

                    break;
                case "Switch.A_Demand":
                    description = "Demand gasklep waarde van de veiligheidsschakelaar logica Als er geen beperking is actief dit is de output van de vraag filter module. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.Switch;

                    break;
                case "Switch.A_SwitchPoti2":
                    description = "Absolute schakelaar voor gasklep poti 2 kan worden vergeleken met In.A_ThrottlePot1Adap2. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.Switch;

                    break;
                case "SwitchCal.A_ACOffset":
                    description = "Offset naar de kaart SwitchCal.A_SwitchPoint indien ac actief is. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_Tolerance":
                    description = "Offset gebruikt voor de berekening van de gasklep beperkt gebied. Limited throttle_area = switchpoint_area - tolerance_area. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "Switch1.A_Demand":
                    description = "Demand gasklep waarde van de veiligheidsschakelaar logica Als er geen beperking is actief dit is de output van de vraag filter module. Resolutie is 1 mm2. ";
                    //category = XDFCategories.Switch1;

                    break;
                case "Out.fi_Injection":
                    description = "Actueel injectie einde hoek. Resolutie 0,1 °. Interval is Every verbranding. ";
                    //category = XDFCategories.Out;

                    break;
                case "ShiftSupport.M_LoadHyst":
                    description = "Nodig wiel koppel hysterese = f (RoadLoad) voordat u begint te decrement de schakelindicatoren ondersteuning gecompenseerd. Dit om te voorkomen dat er een verschuiving nodig voordat motorkoppel is beschikbaar. Resolutie is 1 Nm. ";
                    //category = XDFCategories.ShiftSupport;

                    break;
                case "CCRatioProt.ConstDiff":
                    description = "Verschil tussen het filter constanten gebruikt in arrestantenlokaal en niet arrestantenlokaal ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "AreaData.A_Start":
                    description = "Ruimte input voor de start routine. Resolutie: 1. Interval is 10 ms. ";
                    //category = XDFCategories.AreaData;

                    break;
                case "AreaData.A_Controller":
                    description = "Ruimte output van de airmass controller. Resolutie: 1. Interval is 10 ms. ";
                    //category = XDFCategories.AreaData;

                    break;
                case "AreaData.A_Emission":
                    description = "Ruimte output van de emissiebeperking. Resolutie: 1. Interval is 10 ms. ";
                    //category = XDFCategories.AreaData;

                    break;
                case "Angle.ThrottleOut":
                    description = "Absolute gasklep vraag naar output van de throttledemand beperking out.ad_throttledemand heet vanaf macro waar de ingang is angle.throttleout. Resolutie is 1 bit. ";
                    //category = XDFCategories.Angle;

                    break;
                case "Angle.AD_ThrottleDemand":
                    description = "Absolute gasklep vraag naar output van de throttledemand filter. Resolutie is 1 bit. ";
                    //category = XDFCategories.Angle;

                    break;
                case "AngleLimProt.AD_ThrotOld":
                    description = "oud vraag waarde voor gasklep vóór beperking. Resolutie is beetje. ";
                    //category = XDFCategories.AngleLimProt;

                    break;
                case "CCProt.v_USD":
                    description = "De werkelijke snelheid van het voertuig / 4 Indien de werkelijk is lager dan v_request - v_USD de cruise zal worden uitgeschakeld. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CCProt;

                    break;
                case "CCProt.M_DelWheelUnsig":
                    description = "Unsigned werkelijke M_DeltaWheel uit de berekening van a_Delta * VehicleConstant. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CCProt;

                    break;
                case "CruiseProt.a_Request":
                    description = "Aangezochte acceleratie van cruise control. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_ActualOld":
                    description = "Actueel versnelling van het voertuig een lus voor. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_Request0":
                    description = "Aangezochte acceceleration = f (snelheid van het voertuig). Resolutie is 0.06944 m / s ^ 2. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_Delta":
                    description = "Acceleration afwijking. Resolutie is 0.0.6944 m / s ^ 2. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_Request1":
                    description = "Aangezochte acceleratie = f (snelheid van het voertuig deviatie). Resolutie is 0.06944 m / s ^ 2. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Limit":
                    description = "V limiet voor het verminderen van de a_Request0 boven v_limit a_Request1 = a_Request0. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Difference":
                    description = "Verschil tussen gevraagde en de werkelijke snelheid van het voertuig (ondertekend). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Deviation":
                    description = "Afwijking tussen v_Request en v_Actual (unsigned). Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_Actual1":
                    description = "Actueel versnelling van het voertuig niet gecorrigeerd door de tijd te meten. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.a_Actual":
                    description = "Actueel versnelling van het voertuig door de tijd te meten. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "App7Cal.AirMode":
                    description = "Selecteer de lucht controle mod. 0 - Normaal 1 - App7Cal.m_Request boven m_Request 2 - Force Boost controle gesloten lus andOverride de gasklep met App7Cal.A_Throttle 3 - Force aanjaagdrukregeling open lus en override De klep withPWM_BoostCntrl 4 - Force het gaspedaal tot gesloten lus ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseCal.a_NegOffset":
                    description = "Negatieve gecompenseerd te activeren v_limit tabel voor negatieve afwijkingen acc. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.a_PosOffset":
                    description = "Positieve gecompenseerd te activeren v_limit tabel voor positieve acc afwijkingen. Resolutie is 0,01 m / sy. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseProt.m_AirRequest":
                    description = "Aangezochte airmass van cruise control, minus m_Idle.AirMass. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "App7Cal.IgnMode":
                    description = "Selecteer de brandstof controle mod. 0 - Normaal 1 - App7Cal.fi_Ignition boven de ontsteking hoek ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseProt.v_RequestHelp":
                    description = "Aangezochte snelheid van het voertuig voor de cruise control kopie van v_request als cruise is actief en bestuurder overschrijft de cruise airmass en v_actual> v_MaxSpeed - v_Hysteresis. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "WUSPCal.MaxTemp":
                    description = "Max start temperatuur voor actieve WUSP (werking automatische versnellingsbak te gebruiken sport programma). Resolutie: 1 ° C. ";
                    //category = XDFCategories.WUSPCal;

                    break;
                case "GearCal.t_SULTurnOnDly":
                    description = "Vertraging op tijd te vermijden flicering Shift Up Lamp. De. Resolutie van de vertraging zal zijn, afhankelijk van hoe vaak de Shift-up functie heet!. Resolutie is 1 ms. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "GearCal.n_SULHyst":
                    description = "Hysterese te vermijden flicering Shift Up Lamp, te wijten aan n_Engine dicht bij het schakelen waarde. Resolutie is 1 tpm. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "GearCal.n_ActivateSUL":
                    description = "Wanneer In.n_Engine is boven dit toerental van de motor, de Shift-Up lamp wordt geactiveerd als de erkende versnelling is niet Reverse, Ongedefinieerd of \"Top Gear\". Resolutie is 1 tpm. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "nEngCal.RatioStart":
                    description = "Om een kloof moet de tand periode atleast dit mutsje langer dan de vorige periode. Deze waarde wordt gebruikt eerste keer na de start te vinden standpunt. ";
                    //category = XDFCategories.nEngCal;

                    break;
                case "nEngCal.WaitTeeth":
                    description = "aantal tanden op de crankwheel dat moet worden opgespoord voordat een detectie van de kloof is gedaan. Resolutie: 1. ";
                    //category = XDFCategories.nEngCal;

                    break;
                case "CruiseProt.M_EngineTip":
                    description = "Aangezochte motorkoppel van de TIP-functie. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_EngVehSpeed":
                    description = "Geïntegreerde motorkoppel die geldig is voor een maximale snelheid van het voertuig beperking (geen invloed TIP). Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Actual":
                    description = "De werkelijke snelheid van het voertuig voor de cruise-controller. Resolutie is 0,1 km / h. Interval is dito. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Request":
                    description = "Aangezochte snelheid van het voertuig voor de cruise control. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.v_Memory":
                    description = "Statische geheugen voor de cruise-controller. Resolutie is 0,1 km / h. Interval is altijd bij het verlaten van cruise-controller. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.InitFac":
                    description = "De eerste factor is om de oorspronkelijke init_puls als je bent in staat 4,5,6,7. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "GearCal.m_SULHyst":
                    description = "Hysterese te vermijden flicering Shift Up Lamp, te wijten aan m_AirInlet dicht bij het schakelen waarde. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "CruiseProt.M_GradientNeg":
                    description = "Gradient beperking in motorkoppel voor negatieve koppel veranderingen. Resolutie is 1 Nm / s. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_Engine":
                    description = "Geïntegreerde wielen koppel omgezet naar motorkoppel. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.M_GradientPos":
                    description = "Gradient beperking in motorkoppel voor positieve koppel veranderingen. Resolutie is 1 Nm / s. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "MAFCal.FilterCIgnSteady":
                    description = "Airmass filter constant voor IGN. calc. bij steady state en negatieve transiënten. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= New_value -> + Const Filt_value -> MAF.m_AirInletIgn old_value -> oud MAF.m_AirInletIgn new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCIgnSteady Als Const = 1 tot 8, effectieve filter wordt gebruikt (in plaats van shift. divisie) . (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.FilterCFuelTrans":
                    description = "Airmass filter constant Brandstof berekening tijdens voorbijgaand. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> lokale Variabel gebruikt voor MAF.m_AirInletFuel old_value -> oud lokale Variabel new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCFuelTrans Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.FilterCIgnTrans":
                    description = "Airmass filter constant voor IGN. calc. op positieve trans. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletIgn old_value -> oud MAF.m_AirInletIgn new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCIgnTrans Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.FilterCTorqTrans":
                    description = "Airmass filter constant voor Torq. calc. op negatieve trans. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletTorq old_value -> oud MAF.m_AirInletTorq new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCTorqTrans Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.FilterCTorqSteady":
                    description = "Airmass filter constant voor Torq. calc. bij steady state en positieve transiënten. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletTorq old_value -> oud MAF.m_AirInletTorq new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCTorqSteady Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. in plaats van divisie). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAF.Q_AirFromArea":
                    description = "Airflow berekend uit gasklep gebied. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.p_InlBefQuote":
                    description = "Deze variabele wordt (p_AirInlet / p_AirBefThrottle) * 100. Het wordt gebruikt in de berekening van de luchtstroom van gebied. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAFCal.FilterCFuelSteady":
                    description = "Airmass filter constant Brandstof berekening steady state. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> lokale Variabel gebruikt voor MAF.m_AirInletFuel old_value -> oud lokale Variabel new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCFuelSteady Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.WeightCoefFConst":
                    description = "HFM - p_AirInlet gewicht coëfficiënt filter constant. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAFProt.HFMWeightCoef old_value -> oud MAFProt.HFMWeightCoef new_value -> lezen van kaart Const -> MAFCal.WeightCoefFConst Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.X_RpmFiltConst":
                    description = "Filter constant motortoerental berekening voor het converteren tussen Q en m. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const als old_value <= new_value -> + Const (100 = 100% nieuw, 200 = 50% nieuwe, 400 = 25% nieuw). Resolutie: 1. ";


                    break;
                case "MAFCal.p_DeltaFuelTrans":
                    description = "Pressure delta limiet constant. Een absolute p_Delta waarde boven deze grens zal de negatieve of positieve brandstof transiënte vlag. De vlag wordt dan gedurende een gekalibreerde tijd. Dit maakt het mogelijk te berekenen MAF.m_AirInletFuel uit inlaatdruk zelfs indien p_Delta dicht bij 0, terwijl de HFM lezing heeft een grote afwijking ten opzichte van wat de druk bij de inlaat geeft. Resolutie is 1 kPa. ";


                    break;
                case "CruiseAdap.SwitchOffCond":
                    description = "Informatie die verantwoordelijk was signaal uit te schakelen cruise control laatste tijd. Resolutie is 10 ms. ";
                    //category = XDFCategories.CruiseAdap;

                    break;
                case "Block.AD_ThrottleDemand":
                    description = "Shadow register van Out.AD_ThrottleDemand. Zullen worden gebruikt en gemanipuleerd terwijl stationair blok adaption actief is. Resolutie: 1. Interval is 10 ms. ";
                    //category = XDFCategories.Block;

                    break;
                case "CruiseAdap.MissingCond":
                    description = "Informatie die signaal ontbreekt om over te schakelen op cruise control. Resolutie is 10 ms. ";
                    //category = XDFCategories.CruiseAdap;

                    break;
                case "MAFCal.FilterConstBoost":
                    description = "Airmass filter constant voor Boost functie. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletBoost old_value -> oud MAF.m_AirInletBoost new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstBoost Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. plaats van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe 800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.FilterConstAir":
                    description = "Airmass filter constant airmass controle. Formule: 100 * (new_value - old_value) + / - Const Filt_value = old_value + Const als old_value> new_value -> - Const, indien old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletAir old_value -> oud MAF.m_AirInletAir new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstAir Als Const = 1 tot 8, effectieve filter wordt gebruikt (shift. istead van afdelingen). (100 & 0 = 100% nieuw, 200 & 1 = 50% nieuwe, 400 & 2 = 25% nieuwe (800 & 3 = 12,5% nieuw, 1600 & 4 = 6,25% nieuwe enz.). Resolutie: 1. ";


                    break;
                case "MAFCal.t_FreezeNegTrans":
                    description = "Tijd om negatieve transiënte vlaggen ingesteld terwijl de HFM-signaal maakt grote onder schot. Als deze constante 0 is, dan geen negatieve transiënten zal trigged. Resolutie is 1 ms. ";


                    break;
                case "MAFCal.p_DeltaTransLim":
                    description = "Pressure delta limiet constant. Een absolute p_Delta waarde boven deze grens zal de negatieve of positieve transiënte vlag voor de berekening van de belasting van de motor voor ontsteking en koppel functies. De vlag wordt dan gehouden voor een gekalibreerd tijd. Het wordt gebruikt voor het kopiëren m_AirInletFrompInlet te MAF.m_AirInletIgn tijdens negatieve transiënten en voor het kopiëren m_AirInletFrompInlet te MAF.m_AirInletTorq tijdens positve transiënten. Steady-state beide worden gefilterd HFM-signalen. Bij het schakelen tussen m_AirInletFrompInlet en HFM-signaal, een simpel adaption wordt gebruikt om soepele overgangen. Resolutie is 1 kPa. ";


                    break;
                case "MAFCal.t_FreezePosTrans":
                    description = "Tijd om positieve transiënte vlaggen ingesteld terwijl de HFM-signaal maakt dan grote kans. Als deze constante 0 is, is geen positieve transiënten zal trigged. Resolutie is 1 ms. ";


                    break;
                case "MAF.Q_AirFromp_AirInlet":
                    description = "Redundante berekend airmassflow. Omgezet van m_AirFromp_AirInlet. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAFProt.HFMWeightCoef":
                    description = "Actual filter constant Brandstof airmass filter. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.t_PosTransFreez":
                    description = "Tijd om positieve transiënte vlag vastgesteld na MAFProt.p_DeltaInlet in steady-state niveau opnieuw. Resolutie is 1 ms. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.p_DeltaInlet":
                    description = "Actueel drukverschil in het inlaatspruitstuk worden gebruikt voor airmass filteren. Resolutie is 1 kPa. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.LoadPointer":
                    description = "Laad aanwijzer in redundante airmassflow Kaart. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "O2SensPostCal.LambdaMax":
                    description = "De maximaal toegestane Lambda.LambdaInt te lopen O2SensPost Laag Diagnose. Resolutie is 0,01. ";
                    //category = XDFCategories.O2SensPostCal;

                    break;
                case "MAFProt.X_DecreaseStep":
                    description = "Aantal lezingen in een rij waar t_tdc_tdc is afgenomen. Gebruikt voor het definiëren van transiënten. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.t_NegTransFreez":
                    description = "Tijd om negatieve transiënte vlag vastgesteld na MAFProt.p_DeltaInlet in steady-state niveau opnieuw. Resolutie is 1 ms. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.X_IncreaseStep":
                    description = "Aantal lezingen in een rij waar t_tdc_tdc is toegenomen. Gebruikt voor het definiëren van transiënten. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAF.m_AirInletAir":
                    description = "Airmass in milligram per verbranding. Gefilterd, gebruikt voor Air controle functies. Resolutie is 1 mg / c. Interval is 10ms. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirInletIgn":
                    description = "Airmass in milligram per verbranding. Gefilterd, gebruikt voor de ontsteking berekening. Resolutie is 1 mg / c. Interval elke verbranding. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirInletTorq":
                    description = "gefiltreerd airmass variabele kopiëren MAF. M_AirFromp_AirInlet in positieve transiënten, MAF.m_AirInletAir tijdens negatieve transiënten en steady state. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirFromp_AirInlet":
                    description = "Redundante berekend airmassflow. Lees uit p_AirInlet sensor gecompenseerd voor de temperatuur van de inlaatlucht en koelwater temperatuur. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.Q_AirInletFilt":
                    description = "Inlet verzamelleiding luchtstroom uit MAF sensor in gram per seconde gefiltreerd. Deze luchtstroom wordt herberekend vanaf MAF.m_AirInletAir. Resolutie is 0,01 g / s. Interval elke verbranding. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirInlet":
                    description = "Airmass in milligram per verbranding. Dit airmass is de werkelijke belasting in de ECM. (Ongefilterd) Berekend uit ActualIn.Q_AirInlet. Resolutie is 1 mg / c. Interval elke verbranding. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirInletFuel":
                    description = "Airmass in milligram per verbranding. Gefilterd, worden gebruikt voor brandstof berekening. Resolutie is 1 mg / c. Interval elke verbranding. ";
                    //category = XDFCategories.MAF;

                    break;
                case "MAF.m_AirInletBoost":
                    description = "Airmass in milligram per verbranding. Gefilterd, worden gebruikt voor aanjaagdrukregeling. Resolutie is 1 mg / c. Interval elke verbranding. ";
                    //category = XDFCategories.MAF;

                    break;
                case "Block.AD_ThrottleSum":
                    description = "Variabele voegt eraan toe dat de AD-waarde voor de stationaire gasklep blok in een bepaalde tijd, voor de berekening van de adaptieve VIOSAdap.AD_ThrottleBlock. Resolutie: 1. Interval is macht en macht OP UIT. ";
                    //category = XDFCategories.Block;

                    break;
                case "PedalProt.AD_EstimatePos":
                    description = "geschatte positie voor een mogelijke nieuwe pedaal blok van pedaal poti 1. Resolutie is beetje. ";
                    //category = XDFCategories.PedalProt;

                    break;
                case "PedalProt.AD_CapturedPos":
                    description = "Opgenomen pedaal positie van het pedaal poti 1. Resolutie is beetje. ";
                    //category = XDFCategories.PedalProt;

                    break;
                case "AngleLimCal.AD_AngleMax":
                    description = "Maximaal gasklep hoek. Resolutie is beetje. ";


                    break;
                case "PwmLimitCal.ms_Time":
                    description = "Debouncing tijd voor de uitvoering van PWM beperking als gevolg van 100% PWM bij het openen of sluiten van richting. Wanneer PWM beperking is besteld zal het niet worden uitgevoerd zolang deze tijd is verstreken. Zij vertegenwoordigen hoe lang het duurt voordat de temperatuur in de gasklep huis overtreft max. specificaties. Resolutie is 1 ms. ";
                    //category = XDFCategories.PwmLimitCal;

                    break;
                case "AngleLimCal.AD_StartLow":
                    description = "startangle voor hoek beperking lager bereik. Resolutie is beetje. ";


                    break;
                case "AngleLimCal.AD_GradLow":
                    description = "Gradient voor gasklep hoek beperking ondergrens. Resolutie is beetje. ";


                    break;
                case "AngleLimCal.AD_StartHigh":
                    description = "startangle voor hoek beperking bovenste bereik. Resolutie is beetje. ";


                    break;
                case "PwmLimit.ms_Timer":
                    description = "Timer aan debounce de PWM beperking indien besteld als gevolg van 100% PWM bij het openen of sluiten van richting. Resolutie is 1 ms. Interval is 10 ms. ";
                    //category = XDFCategories.PwmLimit;

                    break;
                case "PwmLimitCal.Size":
                    description = "Grootte van de tabel pwmlimit = f (u_Batt). Resolutie is 1 bit. ";
                    //category = XDFCategories.PwmLimitCal;

                    break;
                case "AngleLimCal.AD_AngleMin":
                    description = "Minimale gasklep hoek. Resolutie is beetje. ";


                    break;
                case "PedalProt.AD_FilteredPos":
                    description = "Gefilterde pedaal positie van het pedaal poti 1. Resolutie is beetje. ";
                    //category = XDFCategories.PedalProt;

                    break;
                case "VIOSCal.v_TCSOffset":
                    description = "Boven deze snelheid van het voertuig, voegen niet gecompenseerd op televisiecamerasystemen verzoek. Dit is omdat boven een bepaalde snelheid, de remmen worden niet geactiveerd voor het regelen van de slip. ";
                    //category = XDFCategories.VIOSCal;

                    break;
                case "VIOSCal.M_TCSOffset":
                    description = "Offset toegevoegd ActualIn.M_TCSReq zolang de snelheid van het voertuig (achter snelheid sensor) lager is dan een calibratable snelheid AMD de eerste versnelling op handmatige auto's is niet in staat ";
                    //category = XDFCategories.VIOSCal;

                    break;
                case "VIOSCal.M_TCMOffset":
                    description = "Offset toegevoegd ActualIn.M_TCMLimitReq op de eerste versnelling, zolang In.t_TCMTrqLimDuration == 0. Dit is een oplossing voor de TCM als ze geen mogelijkheid om hun software. ";
                    //category = XDFCategories.VIOSCal;

                    break;
                case "Block.Min":
                    description = "Variabele die slaat de minimale waarde van een adaptatie. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.Block;

                    break;
                case "Block.New":
                    description = "Variabele die slaat de nieuwe blok waarde. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.Block;

                    break;
                case "Block.Max":
                    description = "Variabele die slaat de maximale waarde van een adaptatie. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.Block;

                    break;
                case "Block.AD_TmpThrBlock":
                    description = "Variabele gebruikt voor de tijdelijke opslag van gas blok adaption waarde. Resolutie is 1 bit. Interval is macht en macht OP UIT. ";
                    //category = XDFCategories.Block;

                    break;
                case "AreaAdap.A_Throttle":
                    description = "Aanpassing van gasklep gebied. Interval is 250ms. ";
                    //category = XDFCategories.AreaAdap;

                    break;
                case "PedalProt.AD_PedalPot1":
                    description = "Gekopieerd pedal1 standpunt omdat pedal1 gelezen is om de 5 ms. Resolutie is beetje. ";
                    //category = XDFCategories.PedalProt;

                    break;
                case "BlockPoti2.Min":
                    description = "Variabele die slaat de minimale waarde van een aanpassing van poti2. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "BlockPoti2.New":
                    description = "Variabele die slaat de nieuwe blok waarde uit poti2. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "BlockPoti2.Max":
                    description = "Variabele die slaat de maximale waarde van een aanpassing van poti2. Resolutie is 1 bit. Interval is een keer als adaptatie is actief. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "VIOSCal.ST_TAirInlet":
                    description = "Welke temperatuur sensor te gebruiken. 0 = Oude sensor 1 = Nieuwe sensor ";
                    //category = XDFCategories.VIOSCal;

                    break;
                case "AirMinLimProt.Q_MinLoad":
                    description = "De laagste airmass de motor moet op de werkelijke motortoerental. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.AirMinLimProt;

                    break;
                case "AirctlData.ControllerOut":
                    description = "Airmass output van de airmass controller. Toevoeging van de PID gedeeltelijk gesloten lus. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.MaxAirmass":
                    description = "Maximaal airmass afhankelijk van het motortoerental. Berekend uit de standaard airmass kaart. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.DeltaN0":
                    description = "Airmass afwijkingen voor de lus (werkelijke - 1). Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.iPartN0":
                    description = "I-deel van de airmass-controller voor de lus (werkelijke - 1). Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.DeltaN1":
                    description = "Ongefilterde airmass afwijking voor de werkelijke lus. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.m_CtrlOutput":
                    description = "Airmass uitgang van de I-controller. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.Request":
                    description = "Aangezochte airmass. Gekopieerd van de variabele Air.m_Request.AirMass. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirctlData.Actual":
                    description = "Actueel airmass. Gekopieerd van de variabele MAF.m_AirInlet. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "AirMinLim.m_LDAReq":
                    description = "Van Torque Master verzocht min airmass voor LDA functie. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.AirMinLim;

                    break;
                case "LoadCoCal.n_EngACShtLow":
                    description = "Motortoerental beperken. Als het toerental van de motor lager is dan deze limiet, wanneer de bestuurder duwt de Acc.Pedal boven een gekalibreerd beperking, de AC uitgeschakeld functie actief zal zijn. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.n_EngACShtHigh":
                    description = "Motortoerental beperken. Boven dit toerental van de motor het AC zal worden ingeschakeld, indien de uitschakeling functie actief is geweest. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.X_AccPACShtOff":
                    description = "Gaspedaal limiet. Als het toerental van de motor lager is dan een gekalibreerd beperken wanneer de bestuurder duwt de Acc.Pedal boven deze limiet, de AC uitgeschakeld functie actief zal zijn. De functie zal worden gestopt wanneer de driver is het vrijgeven van de pedaal beneden deze grens, minus 10% of als het toerental van de motor wordt hoger dan de limiet LoadCoCal.n_EngACShtHigh of indien de max. tijd is verstreken. Resolutie is 0,1%. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_ElLoadDelay":
                    description = "Vertraging tijd voordat elloadcompesation lucht begint te oprit omhoog of omlaag na een verandering in de dynamo geladen. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_ACShutOff":
                    description = "Max tijd om de AC shut off functie actief is. De functie zal ook worden gestopt wanneer de bestuurder is het vrijgeven van de pedaal 10% onder een gekalibreerde beperken of als het toerental van de motor wordt hoger dan de LoadCoCal.n_EngACShtHigh limiet. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoProt.Q_ACAirReq":
                    description = "Airmass compensatie voor de belasting op de motor te wijten aan AC-compressor stroomverbruik. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.Q_ACCompAir":
                    description = "Airmass compensatie voor de belasting op de motor te wijten aan AC-compressor stroomverbruik zonder extra lucht te wijten aan ACstarttorque. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.Q_DynamicAir":
                    description = "Airmass compensatie voor de meerkosten van de belasting op de motor te wijten aan AC-compressor opstarten stroomverbruik. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.m_TotCompAir":
                    description = "Totale compensatie airmass uit loadcompensation functie die wordt naar airmass kapitein: m_nLow = LoadCo.Q_TotCompAir omgezet naar airmass (m) + LoadCoProt.m_WCleanAir. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.m_WCleanAir":
                    description = "Aanvullende airmass uit WiperCleaner functie. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoCal.m_WCleanAir":
                    description = "gekalibreerd extra airmass voor WiperCleaner functie. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.T_SerIdleSpd":
                    description = "stationair toerental veredelingsprodukten vanwege stuurgroep druk zijn niet toegestaan belove deze limiet. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_WCleanTimer":
                    description = "gekalibreerd toggle-tijd voor WiperCleaner functie. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.n_WCleanMinRpm":
                    description = "gekalibreerd minimum toerental van de motor voor WiperCleaner functie te kunnen krijgen geactiveerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.m_WCleanMinLd":
                    description = "gekalibreerd minimale last voor WiperCleaner functie te kunnen krijgen geactiveerd. Resolutie is 1 mg / c. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_ACRamp":
                    description = "Tijd voor oprit aircompensation te wijten aan extra stroomverbruik AC-opstarten. Resolutie is 1 ms. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.Q_ACExDynAir":
                    description = "Airflow veredelingsprodukten extra stroom-verbruik in eerste AC-start. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.v_VehSer":
                    description = "Voertuig maximumsnelheid voor het sturen druk compensatie. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.Q_LimIdleAdap":
                    description = "Als airmass veredelingsprodukten vanwege stuurgroep druk boven deze grens zijn aanpassing van de normale stationair controle uitgeschakeld. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.t_SerStep":
                    description = "Tijd tussen elke stap van de oprit voor servo druk compensatie. Resolutie is 1 msec. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "AirctlData.iPartN1":
                    description = "I-deel van de airmass-controller voor de werkelijke lus. Resolutie is 1 mg / c. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "PedalMapProt.X_Fac":
                    description = "Pedal factor. In.X_AccPedal wordt vermenigvuldigd met deze factor en het resultaat is gebruikt als een pointer in het pedaal kaart (PedalMapProt.X_AccPedal). Het pedaal is - 819 (80%) voor \"economisch\" - Calibrational voor \"sport\" -- 1024 (100%) wanneer Fault.v_Vehicle - afhankelijk van de snelheid van het voertuig voor \"Automatic\" en \"Manual\" (verschillende kaarten). Resolutie is 0.001. ";
                    //category = XDFCategories.PedalMapProt;

                    break;
                case "PedalMapCal.X_PedLowLim":
                    description = "Als In.X_AccPedal lager is dan deze limiet, wanneer de sport knop wordt ingedrukt zal de sport-modus worden direct geactiveerd. Resolutie is 0,1%. ";


                    break;
                case "PedalMapCal.X_PedHighLim":
                    description = "Als In.X_AccPedal hoger is dan deze limiet, wanneer de sport knop wordt ingedrukt zal de sport-modus worden direct geactiveerd. Resolutie is 0,1%. ";


                    break;
                case "PedalMapCal.X_PedDeltLim":
                    description = "Als In.X_AccPedal delta (20ms base) is abowe deze grens na de sport-modus wordt geselecteerd zal de sport-modus worden direct geactiveerd. Resolutie is 0,1%. ";


                    break;
                case "MaxSpdProt.n_EngLimAir":
                    description = "Werkelijke toerental van de motor limiet voor het verminderen van de hoeveelheid lucht bij een hogere versnelling is geselecteerd. Resolutie is 1 tpm. ";
                    //category = XDFCategories.MaxSpdProt;

                    break;
                case "PedalMapCal.SportFactor":
                    description = "Wanneer de sport-modus wordt geselecteerd zal de stand van het pedaal-pointer in het pedaal kaart worden vermenigvuldigd met deze factor voor de interpolatie is gedaan om te berekenen m_Driver. Resolutie is 0.001. ";


                    break;
                case "PedalMapProt.AD_AccPedal":
                    description = "Aangepast pedaal AD waarde gebruikt voor kickdown grenzen. Als volgt berekend: PedalMapProt.AD_AccPedal = In.AD_PedalPot1 - VIOSAdap.AD_PedalBlock. Resolutie: 1. ";
                    //category = XDFCategories.PedalMapProt;

                    break;
                case "PedalMapProt.X_AccPedal":
                    description = "In.X_AccPedal vermenigvuldigd met PedalMapProt.X_Fac gebruikt als een pointer in het pedaal kaart. Resolutie is 0,1%. ";
                    //category = XDFCategories.PedalMapProt;

                    break;
                case "Out.AD_Throttle":
                    description = "Actueel gasklep vraag van de 332-processor tot 592 processor in AD waarde na de gasklep gebied adaption. Resolutie: 1. Interval elke 10ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "AreaCal.iPartMax":
                    description = "I-deel van airmass controller wanneer deze aan te passen gasklep oppervlakte (toename) ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "AirCtrlCal.p_DeltaInlet":
                    description = "Als de delta inlaatdruk lager is dan deze waarde als de acclerator pedaal zich van niet-vrijgegeven aan vrijgelaten, de gasklep I-deel wordt op nul gezet. Resolutie is 0,1 kPa. ";


                    break;
                case "AirctlData.Ti":
                    description = "De parameter voor het I-deel van de airmass-controller. Resolutie is 1 ms. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "TiCalcuProt.p_InletOld":
                    description = "Oude inlaatdruk. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.TiCalcuProt;

                    break;
                case "AreaCal.A_MinAdap":
                    description = "Mininum waarde van AreaAdap.A_Throttle ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "AreaCal.m_ReqDiff":
                    description = "Adapt gasklep gebied alleen als ABS (AirCtrlProt.m_ReqFilt-AirctlData.Actual) <= m_ReqDiff ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "AreaCal.A_MaxAdap":
                    description = "Maximale waarde van AreaAdap.A_Throttle ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "AreaCal.N_Stable":
                    description = "De tijd dat de voorwaarden moeten stabiele omgeving aan te passen (N * 250ms) ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "AreaCal.n_EngOffs":
                    description = "Maximaal offset van nominaal toerental van de motor van stationair toerental ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "CruiseComCal.InitTapDown":
                    description = "Minimale initialisatievector puls voor tik omlaag als pols zal worden gegenereerd. Resolutie is Nm (wiel). ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.M_DeltaRamp":
                    description = "Ramp voor M_DeltaRoad die krijg actief na RoadTimer> TimerLimit om M_RoadLoad1 de standaardstijl roadload. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.M_Minimum":
                    description = "Minimale motorkoppel te beperken integrator. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "App7Cal.m_FuelActual":
                    description = "Indien deze gegevens niet nul is zal het worden gebruikt als werkelijke fuelmass voor het verkrijgen van een vaste injectiontime. Resolutie is 0,01 mg / c. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseComCal.InitTapUp":
                    description = "Minimale initialisatievector puls voor tik op als pols zal worden gegenereerd. Resolutie is Nm (wiel). ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitAcc":
                    description = "Minimale initialisatievector puls voor versnelling via tik op de knop. Resolutie is Nm (wiel). ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitTapUp54":
                    description = "Minimale initialisatievector puls voor tik op als puls wordt gegenereerd Tapup knop moet worden vrijgegeven nadat de vertraging. Resolutie is Nm (wiel). ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "MaxVehicCal.v_MaxSpeed":
                    description = "Voertuig snelheidsbeperking waar de functies max.vehicle snelheidsbeperking actief is. Resolutie van 1 km / h. ";
                    //category = XDFCategories.MaxVehicCal;

                    break;
                case "MaxVehicCal.v_Hysteresis":
                    description = "Hysterese waar Max. snelheidsbegrenzingsfunctie actief de functie actief is indien de werkelijke snelheid> MaxVehicleCal.v_MaxSpeed en zal niet actief zijn indien de werkelijke snelheid <MaxVehicleCal.v_MaxSpeed - MaxVehicleCal.v_Hysteresis. Resolutie van 1 km / h. ";
                    //category = XDFCategories.MaxVehicCal;

                    break;
                case "CCCal.v_Threshold":
                    description = "Als de werkelijke v_Deviation is hoger dan v_Threshold en unsigned werkelijke M_DeltaWheel is lager dan M_DeltaWheelMin M_DelatWheel = M_DeltaWheelMin.The teken voor minimaal M_DeltaWheel zal afkomstig zijn van het teken van v_Difference. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CCCal;

                    break;
                case "CCCal.M_DeltaWheelMin":
                    description = "Minimale M_DeltaWheel als v_Deviation hoger is dan v_Threshold en unsigned werkelijke M_DeltaWheel is lager dan M_DeltaWheelMin Het teken zal com Uit teken van v_Difference. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CCCal;

                    break;
                case "CruiseFilterCal.a_Filter":
                    description = "Filterconstant voor de werkelijke accelaration. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseFilterCal;

                    break;
                case "CruiseFilterCal.M_Filter":
                    description = "Filterconstant voor de werkelijke weg koppel bij. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseFilterCal;

                    break;
                case "CruiseFilterCal.v_Filter":
                    description = "Filterconstant voor de werkelijke snelheid van het voertuig. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseFilterCal;

                    break;
                case "App7Cal.X_AccPedReq":
                    description = "Indien deze gegevens niet nul is zal het worden gebruikt als In.X_AccPedal. (de \"App7Cal.ST_PedalLoop\" moet ook worden ingesteld op trigg deze functie). ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "App7Cal.t_HighLevel":
                    description = "Dit is het moment draait op de hoge stand van het pedaal tijdens een AirmassStep rennen. Resolutie is 1 sec. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseCal.v_LimitDefault":
                    description = "v limiet voor het verminderen van de a_Request0 boven v_limit a_Request1 = a_Request0 wordt alleen gebruikt als cruise niet actief is en de v_maxspeed grenswaarde moet krijgen actief. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "App7Cal.t_Ramp":
                    description = "Dit is de ramptime zowel gaan van laag naar hoog en van hoge naar lage stand van het pedaal tijdens een AirmassStep lopen. Resolutie is 0,01 sec. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseComCal.NegMRange":
                    description = "Begin van negatieve koppel assortiment verkleinde in wiel koppel zal worden gebruikt voor init PULS berekening. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.a_DeadRange":
                    description = "Dead bereik van de acc. signaal voor het berekenen van de initpuls.If de CruiseProt.a_Delta lager is dan deze sche gegevens geen init_puls zal worden berekend. Resolutie is 0,01 m / s ^ 2. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseCal.v_BigDiff":
                    description = "ijkgegevens om een groot verschil tussen v_actual en v_memory. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_ResumeThresh":
                    description = "Als v_memory - v_actual is <= drempel de integrator zal worden geïnitialiseerd om negative_engine_torque. Anders roadload wordt genomen. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.a_DecThreshold":
                    description = "Drempel voor maximale ACC / DEC uit te schakelen cruise control. Resolutie is 0,01 m / s ^ 2. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.TipGrad":
                    description = "Verloop van M_EngineTip in Nm/10 ms baseren op motorkoppel. Resolutie is 1 Nm. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseComCal.InitFac_6_2":
                    description = "Initialization factor voor init_puls staat 6 sub 2. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_6_1":
                    description = "Initialization factor voor init_puls staat 6 sub 1. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_6_3":
                    description = "Initialization factor voor init_puls staat 6 sub 3. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "App7Cal.X_AccPedReqHigh":
                    description = "Dit is de hoge stand van het pedaal tijdens een AirmassStep lopen. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "CruiseComCal.InitFac_7_1":
                    description = "Initialization factor voor init_puls staat 7 sub 1. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_4_2":
                    description = "Initialization factor voor init_puls staat 4 sub 2. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_4_1":
                    description = "Initialization factor voor init_puls voor state 4 sub 1. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_5_2":
                    description = "Initialization factor voor init_puls staat 5 sub 2. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_5_4":
                    description = "Initialization factor voor init_puls staat 5 sub 4. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.InitFac_5_3":
                    description = "Initialization factor voor init_puls staat 5 sub 3. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CCCal.v_USDOffset":
                    description = "Offset waar de functie Volgens schema Ontkoppel zal enabled.If de werkelijke snelheid is> = v_request - compensatie van de functies is ingeschakeld. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CCCal;

                    break;
                case "AirComp.LimComp":
                    description = "Factorfor compensatie van \"BoostCal.I_LimTab\" afhankelijk van de temperatuur en druk. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "AirComp.LimPresComp":
                    description = "Factor voor compensatie van \"BoostCal.I_LimTab\" afhankelijk van de omgevingsdruk. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "ECMStat.FuelBe":
                    description = "Brandstof consumptie in g / kWh (BE). ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "AirComp.RatioP1P2":
                    description = "Pressure P1 gedeeld met de werkelijke druk. Resolutie is 0.001. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "AirComp.P1":
                    description = "Actueel druk voordat gasklep bij de kalibratie van ruimte matrix werd gedaan. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "AirComp.PresComp":
                    description = "factor voor de compensatie van m_request afhankelijk van de druk voor de gasklep. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "AirComp.LimTempComp":
                    description = "Factor voor compensatie van \"BoostCal.I_LimTab\" afhankelijk van de temperatuur van de inlaatlucht. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "AirComp.Comp":
                    description = "factor voor de compensatie van m_request afhankelijk van zowel temperatuur en druk. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "LoadCo.n_NomIdleOff":
                    description = "Offset nominale toerental van de motor, afhankelijk van servokleppen druk. Resolutie is 1 tpm. ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "LoadCo.Q_TotCompAir":
                    description = "Totale compensatie lucht, elektrische-+ AC-coldfriction-loadcompensation lucht. (LoadCoProt.Q_ACAirReq + LoadCoProt.Q_ElLoadCoAir + LoadCo.Q_ColdFricAir). Let wel, deze luchtstroom variabele omvat niet het airmass voor gasklep potentiometer wiperclean functie, LoadCoProt.m_WCleanAir. De totale airmass van de loadcompensation functie (m_nLow) is: LoadCo.Q_TotCompAir omgezet naar airmass (m) + LoadCoProt.m_WCleanAir. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "LoadCo.Q_ColdFricAir":
                    description = "Airmass veredelingsprodukten voor koude wrijving. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "LoadCoProt.Q_ElLoadCoAir":
                    description = "Airmass compensatie voor de belasting op de motor als gevolg van elektrische verbruik. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.t_ElLoadRamp":
                    description = "Rampingtime. Wanneer een verandering in elektrische lading ontstaan airmass de vergoeding zal worden verhoogd of verlaagd in de tijd. Lezen van een kleine tafel met behulp van enginespeed als ondersteuning punten. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "AirCompCal.Hysteres":
                    description = "Als de druk voor de gasklep> atmosfeer druk, maar niet meer dan dit hysteres, compensatie factor gedeeltelijk gebruikt. Resolutie is 1 mbar. ";


                    break;
                case "ECMStat.t_Soak":
                    description = "Tijd motor zijn gestopt. Resolutie is 1 sec. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.p_DiffThrot":
                    description = "Differance tussen inlaatspruitstuk luchtdruk en de luchtdruk voor de gasklep. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.p_Diff":
                    description = "Differance tussen inlaatspruitstuk luchtdruk en externe luchtdruk. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.n_Engine10ms":
                    description = "Kopie van In.n_Engine gemaakt in het begin van de 10 ms functie beller, zodat het mogelijk om gebruik te maken van dezelfde motortoerental aanwijzer in verschillende functies. Resolutie is 0 tpm. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "AirComp.TempComp":
                    description = "factor voor de compensatie van m_request afhankelijk van de inlaatlucht temperatuur. Resolutie is 0.001%. ";
                    //category = XDFCategories.AirComp;

                    break;
                case "CCRatioCal.NotLockFactDy":
                    description = "Filter constant voor niet vastzetten in de automatische auto's te filteren versnelling als cruise-status is in cv-modus (NormalMode == 0) ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "CCRatioCal.NotLockFactSt":
                    description = "Filter constant voor niet vastzetten in de automatische auto's te filteren versnelling als cruise-status is in de normale modus (NormalMode == 1) ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "CCRatioCal.LockUpFact":
                    description = "Filter constante voor het vastzetten in de automatische auto's te filteren overbrengingsverhouding ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "CCCal.v_USDMin":
                    description = "Minimale USD speed.If werkelijke <v_request - v_USD de cruise zal worden ingeschakeld off.The minimale v_USD zal worden v_USDMin. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CCCal;

                    break;
                case "ShiftSupCal.X_AccLim":
                    description = "Deze voorwaarde (en een aantal andere) dat moet worden voldaan voordat begonnen wordt met de oprit van de schakelindicatoren steun gecompenseerd waardoor Out.X_AccPedal te verhogen en dwingen de automatische versnellingsbak van een verschuiving van de CruiseProt.a_Actual moet lager zijn dan dit percentage van CruiseProt.a_Requested vóór de compensatie wordt verhoogd. Resolutie is 0,1%. ";
                    //category = XDFCategories.ShiftSupCal;

                    break;
                case "ShiftSupCal.a_Offset":
                    description = "Deze voorwaarde (en een aantal andere) dat moet worden voldaan voordat begonnen wordt met de oprit van de schakelindicatoren steun gecompenseerd waardoor Out.X_AccPedal te verhogen en dwingen de automatische versnellingsbak van een verschuiving van de CruiseProt.a_Actual moet lager zijn dan de absolute waarde voor de compensatie wordt verhoogd. Resolutie is 0,01 m / s. ";
                    //category = XDFCategories.ShiftSupCal;

                    break;
                case "TiCalcuCal.TiNoPressure":
                    description = "Gebruikte ti parameter zo druk over gaspedaal wordt in een bepaald bereik. Resolutie is 1 bit. ";
                    //category = XDFCategories.TiCalcuCal;

                    break;
                case "ECMStat.t_StartTime":
                    description = "Engine begintijd, gemeten door het meten van de tijd uit dat de batterij volatage daalt 1.0V aan de tijd die een toerental van 1.000 tpm bereikt. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "TiCalcuCal.p_DiffMin":
                    description = "Determind de minimale druk over gaspedaal wanneer een manipulatie van de ti parameter is toegestaan. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.TiCalcuCal;

                    break;
                case "ECMStat.AirFuelRatio":
                    description = "Verhouding tussen lucht (MAF.m_AirInletFuel of MAF.m_AirInmletTorq) en de werkelijke ingespoten brandstof. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "CCRatioCal.NotCruiseFact":
                    description = "Filter constant voor niet cruise mode en handmatige auto's te filteren overbrengingsverhouding ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "ECMStat.T_Catalyst":
                    description = "Berekend katalysator temperatuur. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.P_Engine":
                    description = "Berekend motorvermogen. Gemeten in pk. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "TempTiIdleCal.Idle":
                    description = "Parameter voor I-deel van airmass-controller verandert het gedrag van de controller. kortere tijd => sneller het I-deel van de controller. Resolutie is 1 ms. ";
                    //category = XDFCategories.TempTiIdleCal;

                    break;
                case "LimpIn.T_AirAmbient":
                    description = "Luchttemperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.p_AC":
                    description = "AC druk EENHEID: Bar MAX: 30 Min: 0 TRANS: V = P * 100. Resolutie is 0,01 (in stappen van 0,25). Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.V_FuelTank":
                    description = "Brandstofpeil EENHEID: l (liter) MAX: 100 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.T_ACEvaporator":
                    description = "AC verdamper temperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.M_TCMLimitReq":
                    description = "Maximaal motorkoppel verzoek van TCM EENHEID: Nm MAX: 400 MIN: -100 TRANS: V = P. resolutie is 1. Interval is 10 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.v_Vehicle2":
                    description = "snelheid van het voertuig, gemeten op het achterwiel, verzonden van MIU. EENHEID: km / h Max: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "PowInhProt.N_Readings":
                    description = "Het aantal lezingen van de huidige tijdens een test bij de H-brug wordt geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "ActualIn.AD_ThrottlePot1":
                    description = "Throttle positie AD waarde (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.I_LoadAlternator":
                    description = "ALTERNATOR laadeenheid: Amp MAX: 255 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.M_TCSTorqueReq":
                    description = "Maximumkoppelomvorming verzoek van TCS systeem via CAN. Resolutie is 1 Nm. Elk interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.M_TCSLdaTorqueReq":
                    description = "Maximumkoppelomvorming verzoek van TCS systeem via CAN. Resolutie is 1 Nm. Elk interval is 20 ms.";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.AD_ThrottlePot2":
                    description = "Throttle positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.A_Throttle":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.A_Throttle2":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.AD_PedalPot1":
                    description = "Pedaal positie AD waarde van Master CPU (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrCal.SerCom":
                    description = "Seriële communicatie mislukt. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.ROMCheck":
                    description = "rom controleren mislukt. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.StackOver":
                    description = "Stack overschreden. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.SwMon339":
                    description = "Software monitoring van 339 mislukt. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.AD_ThrotDiff":
                    description = "Verhoogde robuustheid om 100% PWM in sluitrichting Het verschil tussen de gevraagde en de feitelijke gasklep positie (AD waarde) moet groter zijn dan deze waarde, in combinatie met \"100% PWM bij de afsluiting van richting \"gerapporteerd door de MCP tijdens het filter tijdig vóór de Main CPU verslag een fout, 100% PWM inclosing richting, en voer pechstrategie. resolutie is 1 AD. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.t_ThrSumLimp":
                    description = "Het filter tijd voor gasklep som fout wordt gemaakt in functie van criticaliteit. In het geval dat de gasklep niet debounce tijdens de opening van het filter moet worden lang, anders het filter TIMS wordt kort, ThrErrCal.ThrSensSum []. Tijdens de lange debouncing tijd wordt calibratable twee time-outs, ThrErrCal.t_ThrSumLimp en ThrErrCal.t_ThrSumInfo, de eerste die een diagnostische info DTC P1231 systeem zonder actie, de tweede generatoraggregaten DTC P1230 en ETC mechanische pechstrategie. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.t_FullPWMNoI":
                    description = "100% PWM in de opening richting zonder stroom. Wanneer de 592 verslag 100% PWM in de opening richting en de huidige in de H-brug is te laag de 339 wacht deze tijd voordat de fout wordt gemeld. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.SpringForce":
                    description = "Geen terugkeer voorjaar van kracht. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.n_FCutAtLH":
                    description = "Als het toerental van de motor hoger is dan deze tpm en het systeem is in pechstrategie vanwege pedaal Poti of ADC vergelijking fouten brandstof gesneden is besteld. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.n_NoFCutAtLH":
                    description = "Als het toerental van de motor lager is dan deze tpm en het systeem is in pechstrategie vanwege pedaal Poti of ADC vergelijking fouten brandstof Cut is niet besteld. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ActualIn.Q_AirInlet":
                    description = "Massa luchtstroom sensor (gram / sec) Eenheid: g / s MAX: 340 MIN: 2 TRANS: V = P * 100. Resolutie is 0,01. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.T_Engine":
                    description = "Temperatuur koelvloeistof motor EENHEID: (C Max: 150 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.T_AirInlet":
                    description = "temperatuur van de inlaatlucht EENHEID: (C Max: 140 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "TqToHiProt.Q_AirInletMax":
                    description = "Max Q_AirInlet toegestaan als het systeem is in limphome. Resolutie is 0,01 g / s. ";
                    //category = XDFCategories.TqToHiProt;

                    break;
                case "PowInhProt.N_Readings2":
                    description = "het aantal lezingen van de huidige tijdens een test bij de H-brug is NIET geremd. ";
                    //category = XDFCategories.PowInhProt;

                    break;
                case "ActualIn.p_AirInlet":
                    description = "inlaatlucht van de motor druk EENHEID: kPa MAX: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.p_AirAmbient":
                    description = "Luchtdruk luchtdruk EENHEID: kPa MAX: 120 MIN: 50 TRANS: V = P * 10. Resolutie is 0.1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrCal.DkSens2Lim":
                    description = "Throttle sensor D2 uit spec. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.FullPWMOpen":
                    description = "100% PWM in de opening richting. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.FullPWMClose":
                    description = "100% PWM bij de afsluiting richting. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.P2SwitchErr":
                    description = "Pedal sensor P2 schakelen defect. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ActualIn.U_Knock":
                    description = "Geïntegreerde spanning voor domino detectie EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrCal.Ped2SensLim":
                    description = "Pedal sensor 2 limiet schuld. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.ThrDeltaLimit":
                    description = "Throttle derivta limiet voor keuze tijdig vóór 339 aangeven fout. Resolutie is 0.1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "LimpIn.I_HeatO2SensRear":
                    description = "Achter zuurstofsensor kachel huidige EENHEID: mA MAX: 6000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.p_FuelTank":
                    description = "Luchtdruk luchtdruk EENHEID: Pa MAX: 2500 MIN: -2500 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.n_Wheel":
                    description = "Wheel snelheid EENHEID: rpm MAX: 3000 min: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.v_Vehicle3":
                    description = "Recht voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.v_Vehicle":
                    description = "Links voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.I_HeatO2SensFront":
                    description = "Front zuurstofsensor kachel huidige EENHEID: mA MAX: 6000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.AD_SlavePedalPot1":
                    description = "Pedaal positie AD waarde uit Slavenmarkt CPU (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.AD_PedalPot1":
                    description = "Pedaal positie AD waarde van Master CPU (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.A_Throttle2":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.AD_PedalPot2":
                    description = "Pedaal positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.U_O2SensRear":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min: 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.U_O2SensFront":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min: 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.X_AccPedal":
                    description = "Pedal functie eenheid:% MAX: 130 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.U_Batt":
                    description = "Batterijvoltage EENHEID: V MAX: 25,5 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.v_Vehicle3":
                    description = "Recht voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.n_Wheel":
                    description = "Wheel snelheid EENHEID: rpm MAX: 3000 min: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.U_Egr":
                    description = "EGR klep functie eenheid: Volt MAX: 5 MIN: 0 TRANS: V = P * 1000. Resolutie is 0.001. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.U_Batt":
                    description = "Batterijvoltage EENHEID: V MAX: 25,5 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.A_Throttle":
                    description = "Throttle oppervlakte-eenheid: mm (MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.T_ACEvaporator":
                    description = "AC verdamper temperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.I_Egas":
                    description = "Werkelijke stroom van h_bridge. Resolutie is 0.001 A. Interval is elke 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.t_IgnDetect2":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.t_IgnDetect1":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.n_Engine":
                    description = "Motortoerental EENHEID: rpm MAX: 8000 MIN: 25 (set van 10, wanneer de motor begint te bewegen) TRANS: V = P. resolutie is 1. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.v_Vehicle2":
                    description = "snelheid van het voertuig, gemeten op het achterwiel, verzonden van MIU. EENHEID: km / h Max: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.M_TCSTorqueReq":
                    description = "Maximumkoppelomvorming verzoek van TCS systeem via CAN. Resolutie is 1 Nm. Elk interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.n_GearBoxIn":
                    description = "Toezending input rpm (turbine snelheid) Gebruikt detecteert wanneer de belasting wordt gewijzigd voor de motor, versnelling is ingeschakeld. Resolutie is 1 tpm. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.v_GearBoxOut":
                    description = "Toezending uitvoersnelheid Gebruikt door de Differentiële Protection System. Resolutie is 0,1 km / h. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.M_TCMLimitReq":
                    description = "Maximaal motorkoppel verzoek van TCM EENHEID: Nm MAX: 400 MIN: -100 TRANS: V = P. resolutie is 1. Interval is 10 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.U_KnockDiag":
                    description = "Diagnostische domino-niveau voor de detectie van snelkoppeling tussen ECS en cassette EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.p_AC":
                    description = "AC druk EENHEID: Bar MAX: 30 Min: 0 TRANS: V = P * 100. Resolutie is 0,01 (in stappen van 0,25). Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ComData.To592RamAdr1":
                    description = "Deze gegevens omvatten het adres dat moet worden gelezen van de 592 ram. Het resultaat zal worden gekopieerd naar \"ComProt.Fr592RamData1\". ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.To592RamAdr2":
                    description = "Deze gegevens omvatten het adres dat moet worden gelezen van de 592 ram. Het resultaat zal worden gekopieerd naar \"ComProt.Fr592RamData2\". ";
                    //category = XDFCategories.ComData;

                    break;
                case "ActualIn.V_FuelTank":
                    description = "Brandstofpeil EENHEID: l (liter) MAX: 100 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.AD_ThrottlePot2":
                    description = "Throttle positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.AD_ThrottlePot1":
                    description = "Throttle positie AD waarde (potentiometer 1) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ComData.Fr592RamWord":
                    description = "Gegevens woord lezen van 592 ram, gespecificeerd door het adres in de \"ComProt.To592RamAdr1\" en \"ComProt.To592RamAdr2\" ComProt.Fr592RamWord = ComProt.Fr592RamData1 * 256 + ComProt.Fr592RamData2 ";
                    //category = XDFCategories.ComData;

                    break;
                case "LimpIn.p_AirBefThrottle":
                    description = "inlaatlucht van de motor druk EENHEID: kPa MAX: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.T_Engine":
                    description = "Temperatuur koelvloeistof motor EENHEID: (C Max: 150 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.Q_AirInlet":
                    description = "Massa luchtstroom sensor (gram / sec) Eenheid: g / s MAX: 340 MIN: 2 TRANS: V = P * 100. Resolutie is 0,01. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.U_Knock":
                    description = "Geïntegreerde spanning voor domino detectie EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.T_AirInlet":
                    description = "temperatuur van de inlaatlucht EENHEID: (C Max: 140 MIN: -40 TRANS: V = P. resolutie is 1. Interval is 1000 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.T_AirAmbient":
                    description = "Luchttemperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.p_AirInlet":
                    description = "inlaatlucht van de motor druk EENHEID: kPa MAX: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is Every verbranding. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.p_AirAmbient":
                    description = "Luchtdruk luchtdruk EENHEID: kPa MAX: 120 MIN: 50 TRANS: V = P * 10. Resolutie is 0.1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "CatModProt.T_Catalyst":
                    description = "Ongefilterde waarde die de katalytische temperatuur Deze waarde is LP gefilterd tot een beter model van de tijdelijke toename en afname van de kat. Het gefilterde signaal wordt ECMStat.T_Catalyst. ";
                    //category = XDFCategories.CatModProt;

                    break;
                case "ActualIn.X_AccPedal":
                    description = "Pedal functie eenheid:% MAX: 130 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrProt.AD_OldAccPed":
                    description = "In.AD_PedalPot1 wordt opgeslagen om te worden gebruikt in de ADC vergelijking test uitgesteld 20ms. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "CatDiagLevProt.m_Av":
                    description = "De gemiddelde belasting berekend tijdens de tweede fase diag. ";
                    //category = XDFCategories.CatDiagLevProt;

                    break;
                case "CatModProt.n_LoadCnt":
                    description = "Aantal zelfontbrandingen dat afkomstig is van CatModCal.n_CombStart tabel ";
                    //category = XDFCategories.CatModProt;

                    break;
                case "ThrErrProt.TimerDetLimp":
                    description = "Timer voor de totale time systeem hebben detecteren 100% PWM in de opening richting. RESULOTION: 1 sec. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ActualIn.U_O2SensFront":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min: 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.U_O2SensRear":
                    description = "Front zuurstofsensor spanning EENHEID: MV MAX: 2000 min: 0 TRANS: V = P. resolutie is 1. Interval is ieder en elk 1000 mm wanneer de motor wordt gestopt. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "CatModProt.n_HighLoad":
                    description = "Aantal zelfontbrandingen steekproef bij belasting hoger is dan een limiet ";
                    //category = XDFCategories.CatModProt;

                    break;
                case "ThrErrProt.AD_ThrotDiff":
                    description = "Het verschil tussen de werkelijke en verzocht gasklep positie. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.OutAD_ThrFr":
                    description = "Bevroren Out.AD_Throttle waarde die wordt gebruikt voor het opsporen van schuld in gasklep potentimeter 1 .. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.Pot1DiagCnt":
                    description = "Diagnose teller voor tracking error van gasklep potentimeter 1 (In.AD_ThrottlePot1). 0 - Motortoerental grens actief 1 - Motortoerental op OK 2 - Out.AD_Throttle is stabiel 3 - steady state binnen een bepaalde tijd 4 -- De werkelijke airmass is dichtbij genoeg om gevraagd airmass 5 - Throttle pos 1 delta van de grens 6 - Motor schokbewegingen, (airmass verandering) 7 - Fout moet in gasklep pos 1, geen andere fouten in ontdekt door wisser schonere functie en geen fout in MAF sensor en geen fout aan gaspedaal. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ActualIn.AD_PedalPot2":
                    description = "Pedaal positie AD waarde (potentiometer 2) EENHEID: AD waarde MAX: 1024 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrProt.AD_ThrP1Fr":
                    description = "Bevroren In.AD_ThrottlePot1 waarde die wordt gebruikt voor het opsporen van schuld in gasklep potentimeter 1 .. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.m_AirMaxDelta":
                    description = "Maximaal airmass delta tijdens evaluatie tijd. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.m_AirFreeze":
                    description = "Bevroren In.m_AirInlet waarde die wordt gebruikt voor het opsporen van schokbewegingen motor. If (ThrErrCal.m_AirMaxDelta> ThrErrCal.m_AirDeltaLim) of (ThrErrCal.m_AirMinDelta <-ThrErrCal.m_AirDeltaLim) is het mogelijk dat de motor is schokbewegingen. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.m_AirMinDelta":
                    description = "Minimale airmass delta tijdens evaluatie tijd. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "LimpIn.U_Egr":
                    description = "EGR klep functie eenheid: Volt MAX: 5 MIN: 0 TRANS: V = P * 1000. Resolutie is 0.001. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ActualIn.p_FuelTank":
                    description = "Luchtdruk luchtdruk EENHEID: Pa MAX: 2500 MIN: -2500 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.v_Vehicle":
                    description = "Links voorwiel EENHEID snelheid: km / h Max: 300 MIN: 0 (detectie van min. 1.0 km / h) TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErrCal.t_ThrSumInfo":
                    description = "Het filter tijd voor gasklep som fout wordt gemaakt in functie van criticaliteit. In het geval dat de gasklep niet debounce tijdens de opening van het filter moet worden lang, anders het filter TIMS wordt kort, ThrErrCal.ThrSensSum []. Tijdens de lange debouncing tijd wordt calibratable twee time-outs, ThrErrCal.t_ThrSumLimp en ThrErrCal.t_ThrSumInfo, de eerste die een diagnostische info DTC P1231 systeem zonder actie, de tweede generatoraggregaten DTC P1230 en ETC mechanische pechstrategie. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "In.M_TCSTorqueReq":
                    description = "Maximumkoppelomvorming verzoek van TCS systeem via CAN. Resolutie is 1 Nm. Elk interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.M_TCSLdaTorqueReq":
                    description = "Maximumkoppelomvorming verzoek van TCS systeem via CAN. Resolutie is 1 Nm. Elk interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "SafetySwCal.Timer":
                    description = "Debouncing tijd voor \"Throttle_limit_error\", fout nr32 ";
                    //category = XDFCategories.SafetySwCal;

                    break;
                case "Missf.lastYPos":
                    description = "ypos onthouden van vorig ontdekt ontstekingsfouten om gebruikt te worden in ontstekingsfouten counter kaarten. Interval is per verbranden. ";
                    //category = XDFCategories.Missf;

                    break;
                case "MonStimCal.Time":
                    description = "Max toegelaten tijd voor wachten voor het juiste antwoord van 592. Resolutie is 1 msec. ";
                    //category = XDFCategories.MonStimCal;

                    break;
                case "In.I_LoadAlternator":
                    description = "ALTERNATOR laadeenheid: Amp MAX: 255 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.M_TCMLimitReq":
                    description = "Maximaal motorkoppel verzoek van TCM EENHEID: Nm MAX: 400 MIN: -100 TRANS: V = P. resolutie is 1. Interval is 10 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.t_TCMTrqLimDuration":
                    description = "Maximaal motorkoppel duur EENHEID: ms MAX: 2500 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 10 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.T_ACEvaporator":
                    description = "AC verdamper temperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.v_Vehicle2":
                    description = "snelheid van het voertuig, gemeten op het achterwiel, verzonden van MIU. EENHEID: km / h Max: 300 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "Missf.outOfLimDelay":
                    description = "Geeft die het nr van combsutions na de start voor ontstekingsfouten diag is gestart. Deze vertraging wordt veroorzaakt door omgevingsfactoren. (Low ambient druk en lage temperatuur van de motor starten) ";
                    //category = XDFCategories.Missf;

                    break;
                case "CurrToHiCal.I_limit":
                    description = "Max toegelaten stroom in mechanisch pechstrategie. ";
                    //category = XDFCategories.CurrToHiCal;

                    break;
                case "ActualIn.v_GearBoxOut":
                    description = "Toezending uitvoersnelheid Gebruikt door de Differentiële Protection System. Resolutie is 0,1 km / h. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "PowInhCal.t_TestPhase4":
                    description = "Laad-klinkende \"Power stadium remmen test\" Test fase 4 periode voor Power Stage remmen test. Resolutie is 1 msec. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "Missf.nrofStartMisf":
                    description = "Geeft het nr van misf tijdens de eerste 1000revs uit eng. starten en 850 tpm. ";
                    //category = XDFCategories.Missf;

                    break;
                case "In.p_AC":
                    description = "AC druk EENHEID: Bar MAX: 30 Min: 0 TRANS: V = P * 100. Resolutie is 0,01 (in stappen van 0,25). Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "PowInhCal.t_TestPhase5":
                    description = "Laad-klinkende \"Power stadium remmen test\" Test fase 5 periode voor Power Stage remmen test. Resolutie is 1 msec. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "TqToHiCal.Time":
                    description = "Max toegestane tijd met hoge stroomsterkte in mechanische pechstrategie. Resolutie is 1 msec. ";
                    //category = XDFCategories.TqToHiCal;

                    break;
                case "Missf.lastXPos":
                    description = "xpos onthouden van vorig ontdekt ontstekingsfouten om gebruikt te worden in ontstekingsfouten counter kaarten. Interval is per verbranden. ";
                    //category = XDFCategories.Missf;

                    break;
                case "In.T_AirAmbient":
                    description = "Luchttemperatuur EENHEID: (C Max: +50 MIN: -40 TRANS: V = P * 10. Resolutie is 0.1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ActualIn.t_IgnDetect1":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "Missf.Det2HighCount":
                    description = "opgehoogd voor iedere verbranding er detecteren signaal boven SyncCal.t_DetectLimit. Interval elke verbranding. ";
                    //category = XDFCategories.Missf;

                    break;
                case "ThrErrCal.m_AirDiff":
                    description = "Maximal airmass verschil tussen de werkelijke airmass en verzocht airmass. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErr2Cal.t_ThrSumInfo":
                    description = "Het filter tijd voor gasklep som fout wordt gemaakt in functie van criticaliteit. In het geval dat de gasklep niet debounce tijdens de opening van het filter moet worden lang, anders het filter TIMS wordt kort, ThrErr2Cal.ThrSensSum []. Tijdens de lange debouncing tijd wordt calibratable twee time-outs, ThrErr2Cal.t_ThrSumLimp en ThrErr2Cal.t_ThrSumInfo, de eerste die een diagnostische info DTC P1231 systeem zonder actie, de tweede generatoraggregaten DTC P1230 en ETC mechanische pechstrategie. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ActualIn.n_Engine":
                    description = "Motortoerental EENHEID: rpm MAX: 8000 MIN: 25 (set van 10, wanneer de motor begint te bewegen) TRANS: V = P. resolutie is 1. Interval is elke verbranding / 5 ms wanneer de motor is nog steeds. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ADCCal.MaxDiff":
                    description = "Max. toegestaan differance tussen pedaal 1 sensor gelezen door 339 en 692. Resolutie: 1. ";
                    //category = XDFCategories.ADCCal;

                    break;
                case "Missf.Det1HighCount":
                    description = "opgehoogd voor iedere verbranding er detecteren signaal boven SyncCal.t_DetectLimit. Interval elke verbranding. ";
                    //category = XDFCategories.Missf;

                    break;
                case "Ser339Cal2.ErrTime":
                    description = "Tijd met seriële fout op 339 vóór limphome. Resolutie is 1 msec. ";
                    //category = XDFCategories.Ser339Cal2;

                    break;
                case "ActualIn.I_Egas":
                    description = "Werkelijke stroom van h_bridge. Resolutie is 0.001 A. Interval is elke 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ThrErr2Cal.StackOver":
                    description = "Stack overschreden. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErr2Cal.ROMCheck":
                    description = "rom controleren mislukt. Tijd 592 detecteren fout voor 339 aangeven fout. Resolutie is 1 msec. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErr2Cal.ThrDeltaLimit":
                    description = "Throttle derivta limiet voor keuze tijdig vóór 339 aangeven fout. Resolutie is 0.1. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErrCal.OutAD_ThrMaxD":
                    description = "Maximaal gasklep delta limiet voor stabiele toestand. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErr2Cal.t_ThrSumLimp":
                    description = "Het filter tijd voor gasklep som fout wordt gemaakt in functie van criticaliteit. In het geval dat de gasklep niet debounce tijdens de opening van het filter moet worden lang, anders het filter TIMS wordt kort, ThrErr2Cal.ThrSensSum []. Tijdens de lange debouncing tijd wordt calibratable twee time-outs, ThrErr2Cal.t_ThrSumLimp en ThrErr2Cal.t_ThrSumInfo, de eerste die een diagnostische info DTC P1231 systeem zonder actie, de tweede generatoraggregaten DTC P1230 en ETC mechanische pechstrategie. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "ThrErrCal.ErrorCntLim":
                    description = "Limit waar faultcode 1230 wordt gemeld, ThrLimpAdapT.n_ThrPot1Fault> = ThrErrCal.ErrorCntLim de faultcode. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ActualIn.t_IgnDetect2":
                    description = "Verbrandingscyclus detecteren PULS tijd EENHEID: microseconden (us) MAX: 65.535 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "PowInhCal.t_TestPhase1":
                    description = "Laad-klinkende \"Power stadium remmen test\" Test fase 1 periode voor Power Stage remmen test. Resolutie is 1 msec. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "PowInhCal.I_RelLimit":
                    description = "Min toegestaan huidige verschil als H-brug is uitgeschakeld en wanneer het is ingeschakeld. Een relatieve huidige vermeldt dat het niet mogelijk is voor de remming van de H-brug. Resolutie is 1 mA. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "Missf.nrCVSErrorBlocks":
                    description = "Counts het nr van de blokken van de verbrandingskamer waar het percentage ontstekingsfouten is dan beperkt. Na 3 blokken fout wordt gemeld. Geldig voor CVS misf Diag. Interval elke blok. ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.nrTempErrorBlocks":
                    description = "Counts het nr van de blokken van de verbrandingskamer waar het percentage ontstekingsfouten is dan beperkt. Na 3 blokken fout wordt gemeld. Geldig voor Temp misf Diag. Interval elke blok. ";
                    //category = XDFCategories.Missf;

                    break;
                case "ActualIn.U_KnockDiag":
                    description = "Diagnostische domino-niveau voor de detectie van snelkoppeling tussen ECS en cassette EENHEID: MV MAX: 5000 MIN: 0 TRANS: V = P. resolutie is 1. Interval is Every verbranding. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "PowInhCal.t_TestPhase2":
                    description = "Laad-klinkende \"Power stadium remmen test\" Test fase 2 periode voor Power Stage remmen test. Resolutie is 1 msec. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "PowInhCal.t_TestPhase3":
                    description = "Laad-klinkende \"Power stadium remmen test\" Test fase 3 periode voor Power Stage remmen test. Resolutie is 1 msec. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "Ser339Cal.ErrTime":
                    description = "Tijd met seriële fout op 339 vóór limphome. Resolutie is 1 msec. ";
                    //category = XDFCategories.Ser339Cal;

                    break;
                case "In.V_FuelTank":
                    description = "Brandstofpeil EENHEID: l (liter) MAX: 100 MIN: 0 TRANS: V = P * 10. Resolutie is 0.1. Interval is 1000 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ThrErrCal.m_AirDeltaLim":
                    description = "Delta limiet op te sporen slecht comfort (schokbewegingen). Gebruikt samen met ThrErrProt.m_AirFreeze. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ADC2Cal.MaxDiff":
                    description = "Max. toegestaan differance tussen pedaal 1 sensor gelezen door 339 en 692. Resolutie: 1. ";
                    //category = XDFCategories.ADC2Cal;

                    break;
                case "ThrErrCal.n_EngineLim":
                    description = "Geen evaluatie in motortoerentallen groter dan ThrErrProt.n_EngineLim. De reden is het opslaan van CPU-capaciteit en hoge toerental van de motor. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ThrErrCal.t_Steady":
                    description = "De tijd tot steady state detecteren. Resolutie is 1 ms. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "ActualIn.n_GearBoxIn":
                    description = "Toezending input rpm (turbine snelheid) Gebruikt detecteert wanneer de belasting wordt gewijzigd voor de motor, versnelling is ingeschakeld. Resolutie is 1 tpm. Schaalinterval wordt elke 50 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "PowInhCal.I_AbsLimit":
                    description = "Max toegestane absolute huidige als H-brug is uitgeschakeld. Een actuele bovenstaande blijkt dat het niet mogelijk is voor de remming van de H-brug. Resolutie is 1 mA. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "Missf.startDelay":
                    description = "De vertraging in zelfontbrandingen na de start, voor het detecteren signaal wordt geëvalueerd en de transiënte filter wordt geactiveerd. Schaalinterval wordt Achtergrond (100ms). ";
                    //category = XDFCategories.Missf;

                    break;
                case "ActualIn.ST_CruiseB2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.X_GearLever":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 50 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CruiseC1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_TCSTorqueReq":
                    description = "Actuele status op de televisiecamerasystemen koppel verzoek via CAN. 0 - niet geldig 1 - geldig Interval is elke 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CruiseA2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CheckEngine":
                    description = "TCM controle van de motor verzoek EENHEID: Boole (0 = geen verzoek, 1 = inschakelen lamp) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CrankRequest":
                    description = "Engine cranking status EENHEID: bool (0 = niet cranking, 1 = cranking) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_TCMSport":
                    description = "TCM sport status EENHEID: bool (0 = niet van de sport-modus, 1 = sport-modus) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "In.ST_ACReq":
                    description = "AC verzoek status EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.X_ActualGear":
                    description = "Actueel vistuig op de automatische versnellingsbak. 2 - Omgekeerde 3 - Neutraal 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock-up 12 - Gear 4, lock-up Interval is elke 50 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_ElevatedIdle":
                    description = "Verhoogde stationair toerental van de motor EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_ReverseGear":
                    description = "Achteruit status EENHEID: bool (0 = niet achteruitrijdend, 1 = achteruitrijdend) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ActualIn.ST_ElevatedIdle":
                    description = "Verhoogde stationair toerental van de motor EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "KnkDetProt.NrOfRefAdapt2":
                    description = "Aantal aanpassingen uitgevoerd. Toegevoegd door Mea-TLN 2001-02-23 ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "ActualIn.ST_CruiseC2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "KnkDetProt.NrOfRefAdapt1":
                    description = "Aantal aanpassingen uitgevoerd. Toegevoegd door Mea-TLN 2001-02-23 ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "ActualIn.ST_ACReq":
                    description = "AC verzoek status EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_ReverseGear":
                    description = "Achteruit status EENHEID: bool (0 = niet achteruitrijdend, 1 = achteruitrijdend) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "In.ST_CruiseC2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_TCMSport":
                    description = "TCM sport status EENHEID: bool (0 = niet van de sport-modus, 1 = sport-modus) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "KnkAdapt1Prot.Finished":
                    description = "Vermeld of berekening uitgeschakeld mediane waarde klaar bent. ";
                    //category = XDFCategories.KnkAdapt1Prot;

                    break;
                case "In.ST_CheckEngine":
                    description = "TCM controle van de motor verzoek EENHEID: Boole (0 = geen verzoek, 1 = inschakelen lamp) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_CrankRequest":
                    description = "Engine cranking status EENHEID: bool (0 = niet cranking, 1 = cranking) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ActualIn.ST_CruiseB1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.X_ActualGear":
                    description = "Actueel vistuig op de automatische versnellingsbak. 2 - Omgekeerde 3 - Neutraal 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock-up 12 - Gear 4, lock-up Interval is elke 50 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "GearAdap.ST_Automatic":
                    description = "Werkelijke aanduiding indien het voertuig is uitgerust met een automatische versnellingsbak status. 1 = Automatische versnellingsbak gedetecteerd 0 = handgeschakelde versnellingsbak ";
                    //category = XDFCategories.GearAdap;

                    break;
                case "GearCal.n_SULAtGear":
                    description = "Motortoerental grenzen te activeren Shift Up Lamp. Eerste woord waarde voor de eerste versnelling enz. resolutie is 1 tpm. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "GearAdap.ST_ACRequested":
                    description = "Adaptieve opslag voor ECMStat.ST_ACRequested. ";
                    //category = XDFCategories.GearAdap;

                    break;
                case "ExecCntrlOption.ThrPWM":
                    description = "Verzoek aan de gasklep PWM kapitein ter beperking van de 592 gasklep PWM vanwege diagnostische controle van de gasklep huidige. ";
                    //category = XDFCategories.ExecCntrlOption;

                    break;
                case "AngleLimProt.RampActHigh":
                    description = "Geeft aan dat de hoek van de beperking in het bovenste bereik is actief. Resolutie is \"0\" => niet actief is. ";
                    //category = XDFCategories.AngleLimProt;

                    break;
                case "AngleLimProt.RampActLow":
                    description = "Geeft aan dat de hoek van de beperking in het onderste bereik is actief. Resolutie is \"0\" => niet actief is. ";
                    //category = XDFCategories.AngleLimProt;

                    break;
                case "KnkAdapt1Prot2.Finished":
                    description = "Vermeld of berekening uitgeschakeld mediane waarde klaar bent. ";
                    //category = XDFCategories.KnkAdapt1Prot2;

                    break;
                case "AngleLimCal.AD_GradHigh":
                    description = "Gradient voor gasklep hoek beperking bovenste bereik. Resolutie is beetje. ";


                    break;
                case "In.ST_IgnitionKey":
                    description = "Ontstekingssysteem belangrijke status EENHEID: Boole (0 = contactsleutel uitgeschakeld, 1 = ontsteking toets op) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "App7Cal.X_StepCycles":
                    description = "Deze gegevens is het aantal cycli stap die zal worden gerund voordat stoping pedaal simulatie. 0 -> Running forever (strekkende tot ST_PedalLoop = 0). ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "App7Cal.PWM_BoostCntrl":
                    description = "Als AirMod> = 3this gegevens zullen worden gebruikt als output. elseApp7CAl.PWM_BoostCntrl = Out.PWM_BoostCntrl ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "App7Cal.ST_PedalLoop":
                    description = "Status beetje om de APP7 pedaal simulatie. 0 - Niet actief (pedaal pos is calc uit In.AD_AccPedal). 1 - lus is geactiveerd. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "In.ST_CruiseC1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "KnkAdaptCal.ST_Qadapt":
                    description = "0 - Quickadaption uitgeschakeld. 1 - Quickadaption ingeschakeld. Toegevoegd door MEA-TLN. ";
                    //category = XDFCategories.KnkAdaptCal;

                    break;
                case "App7Cal.FuelMode":
                    description = "Selecteer de brandstof controle mod. 0 - Normaal 1 - App7Cal.m_FuelActual boven de brandstof ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "App7Cal.FuelFactor":
                    description = "Factor om brandstof correcties in proefbanken ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "App7Cal.t_LowLevel":
                    description = "Dit is de tijd weergegeven op het lage niveau airmass tijdens een AirmassStep rennen. Resolutie is 1 sec. ";
                    //category = XDFCategories.App7Cal;

                    break;
                case "ActualIn.ST_ClutchBrake1":
                    description = "Koppeling rem van meester processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CruiseA1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_ClutchBrake2":
                    description = "Koppeling rem van slaaf processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "In.ST_CruiseB2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_CruiseA2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ActualIn.ST_BrakeLight":
                    description = "remlicht status EENHEID: Boole (0 = brakelight uitgeschakeld, 1 = brakelight verlicht) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_IgnitionKey":
                    description = "Ontstekingssysteem belangrijke status EENHEID: Boole (0 = contactsleutel uitgeschakeld, 1 = ontsteking toets op) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "In.ST_CruiseB1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "GearCal.T_ActivateSUL":
                    description = "temperatuurgrens voor het activeren Shift Up Lamp. Onder deze temperatuur de SUL is niet actief. Resolutie: 1 ° C. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "In.ST_ClutchBrake1":
                    description = "Koppeling rem van meester processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_BrakeLight":
                    description = "remlicht status EENHEID: Boole (0 = brakelight uitgeschakeld, 1 = brakelight verlicht) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_ClutchBrake2":
                    description = "Koppeling rem van slaaf processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "GearCal.Range":
                    description = "Ratio assortiment voor het lokaliseren van de werkelijke versnelling. Op te sporen een hogere versnelling moet de werkelijke verhouding tussen GearCal.Ratio + GearCal.Range en GearCal.Ratio-GearCal.Range. ";
                    //category = XDFCategories.GearCal;

                    break;
                case "In.ST_CruiseA1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_TCSLdaTorqueReq":
                    description = "Actuele status op de televisiecamerasystemen koppel verzoek via CAN. 0 - niet geldig 1 - geldig Interval is elke 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.X_GearLever":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 50 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_TCSTorqueReq":
                    description = "Actuele status op de televisiecamerasystemen koppel verzoek via CAN. 0 - niet geldig 1 - geldig Interval is elke 20 ms. ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_BoostMeter":
                    description = "Vermelding van MIU als Turbo instrument bestaat ";
                    //category = XDFCategories.In;

                    break;
                case "KnkDetCal.NrofMaxRefAdap":
                    description = "Aantal aanpassingen tot het filteren begint te werken in zowel op en neer. Voordat dat aantal aanpassingen waarde filterd alleen wanneer deze lager is. Hogere waarden worden gebruikt. Toegevoegd door Mea-TLN ";
                    //category = XDFCategories.KnkDetCal;

                    break;
                case "In.ST_vVehicle":
                    description = "OBDII diagnos-status gedaan door ABS 0 = Prijs op OK 1 = Diagnos niet gebeuren op linker wiel 2 = Sensor fout op linker wiel 16 = Fout ABS, diagnos niet gedaan door ABS 17 = Fout ABS, diagnos niet gedaan op links wiel 18 = Fout ABS, Sensor fout op linker wiel ";
                    //category = XDFCategories.In;

                    break;
                case "In.ST_CarType":
                    description = "Auto type lezen van TWEEVOUDIGE knooppunt 0 = 1 9-5 = 9-5 Estate 2 = Converteerbare 3 = 9-3 ";
                    //category = XDFCategories.In;

                    break;
                case "Out.PWM_HeatO2SensFront":
                    description = "PWM verwarmingssysteem O2 sensor front EENHEID:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.PWM_HeatO2SensRear":
                    description = "PWM verwarmingssysteem O2 sensor achterzijde EENHEID:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_HeatO2SensRear":
                    description = "Achter zuurstofsensor kachel EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 250 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_ACRelay":
                    description = "AC relais EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_SecAirPump":
                    description = "SEC Air pomp: Boole (0 = Shut uitgeschakeld, 1 = stromend MAX: 1 MIN: 0 TRANS: V = P *. Resolutie 1. Interval is 250 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_HeatO2SensFront":
                    description = "Front zuurstofsensor kachel EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 250 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_Bypass":
                    description = "Turbo bypass klep EENHEID: bool (0 = open, 1 = gesloten) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_MainRelay":
                    description = "aftapkraan PWM uitgang EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "F_KnkDetCal.fi_SCEnable":
                    description = "Ontstekingssysteem gecompenseerd toegevoegd wanneer sootcontrol modus is ingeschakeld. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "F_KnkDetCal.X_AirMass":
                    description = "Factor gebruikt voor de berekening van de AirMassHighLim waarde. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "F_KnkDetCal.FDCntMax":
                    description = "bovengrens voor de F_KnkDet.FalseDetCount teller. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "Out.CMD_CanisterCloseVlv":
                    description = "aftapkraan PWM uitgang EENHEID: Boole (0 = open, 1 = gesloten) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_FuelPumpRelay":
                    description = "Brandstofpomp relais EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "FlashSave.KnkSoundRedFac":
                    description = "factor voor hoeveel van de ontsteking knock geluid vermindering moet worden gebruikt. Deze factor wordt opgeslagen in het flash tijdens powerdown en de gegevens zullen dan ook geldig, zelfs als de batterij is verwijderd. ";
                    //category = XDFCategories.FlashSave;

                    break;
                case "FlashSave.ST_ShiftUpLamp":
                    description = "modus voor een verschuiving van indicatie lamp. Deze gegevens kunnen worden gecontroleerd vanaf Tech2 tot overschrijven van de standaard inschakelen / uitschakelen modus voor verschuiving up indicatie. ";
                    //category = XDFCategories.FlashSave;

                    break;
                case "Out.CMD_ThrLimpHome":
                    description = "Control de gasklep limphome voorjaar. De output wordt alleen geactiveerd voor 1 sec. U activeert het opnieuw moet de contactsleutel worden swiched uitgeschakeld. Interval is limphome. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_Automatic":
                    description = "Werkelijke aanduiding indien het voertuig is uitgerust met een automatische versnellingsbak status 1 = Automatische versnellingsbak gedetecteerd 0 = handgeschakelde versnellingsbak ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_EGasOff":
                    description = "Is verzonden wanneer E-gas in pechstrategie. Koppel zal alleen verminderen door gloeien bij koppel vermindering verzoeken. 1 - - E-gas uitgeschakeld 0 - - Normaal Interval is elke 1000 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_LimpHome":
                    description = "Boost regelklep PWM uitgang EENHEID:% MAX: 100 min: 0 TRANS: V = P * 1. Resolutie is 0.1. Interval is 20 ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "OBDWorstCase.t_NoVSignal":
                    description = "Langste tijd zonder v_speed na nosignal voldeden aan de criteria, ooit. ";
                    //category = XDFCategories.OBDWorstCase;

                    break;
                case "Crank.ST_EnginePosFound":
                    description = "Deze vlag is ingesteld wanneer de kloof op de toothwheel wordt gedetecteerd en verwijderd wanneer de synchronisatie is verloren. ";
                    //category = XDFCategories.Crank;

                    break;
                case "DisplAdap.ST_Enable":
                    description = "In-/uitschakelen prestaties controle, cruise tekst en verstelbare max. snelheid van het voertuig functie. Voorwaarden voor het activeren van de prestaties controle: DisplAdap.ST_Enable = 1 en Out.CMD_CruiseLamp = 0 en In.ST_TCMSport = 0 en (ECMStat.ST_SID_Node of AMOS is aangesloten) ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "Displ.ST_SIDButtons":
                    description = "Status op de SID knoppen: beetje knop 7 CLEAR 6 SET 5 - 4 + 3 OVERNACHTING PANEL Interval is elke 100 ms bij een evenement. ";
                    //category = XDFCategories.Displ;

                    break;
                case "Displ.ST_PassangerBeltOn":
                    description = "Vermeld als passagier heeft gordel op (Info van tweemaal) ";
                    //category = XDFCategories.Displ;

                    break;
                case "DisplAdap.ScannerSelect":
                    description = "Deze variabele activeert en selecteert een conversie tabel voor de berekening van de lambda-waarde afhankelijk van het AD Scanner input. indien DisplAdap.ScannerSelect = 0 Functie gehandicapten anders als DisplAdap.ScannerSelect = 1 DisplProt.LambdaScanner = f (DisplAdap.LamScannerTab1) anders als DisplAdap.ScannerSelect = 2 DisplProt.LambdaScanner = f (DisplAdap.LamScannerTab2) anders als DisplAdap.ScannerSelect = 3 DisplProt.LambdaScanner = f (DisplAdap.LamScannerTab3) ";
                    //category = XDFCategories.DisplAdap;

                    break;
                case "ROMChecksum.Error":
                    description = "Fout vlag voor de Flash checksum berekening. 1 = Checksum-fout 0 = geen checksum error Als de checksum is defect 4 keer na elkaar zal deze vlag BES ingesteld. De controlesom wordt continu berekend achtergrond. De berekening is gedaan tot 300 ms zijn verstreken sinds de laatste start van de achtergrond. Maar zelfs indien de normale achtergrond neemt 300ms erts meer zal ten minste 400 bytes worden checksum berekend. Bij 3000 tpm neemt een checksum-berekening ongeveer 2 sec. ";
                    //category = XDFCategories.ROMChecksum;

                    break;
                case "ROMChecksum.StackError":
                    description = "Vermelding, indien de stack omvang groter dan 3500 bytes.";
                    //category = XDFCategories.ROMChecksum;

                    break;
                case "ROMChecksum.EOLProgOK":
                    description = "Deze gegevens moet gelijk zijn aan'1 '(49) als het einde van de lijn programmering is geslaagd. Als deze vlag niet correct is zal de brandstof worden uitgeschakeld en de motor start niet. ";
                    //category = XDFCategories.ROMChecksum;

                    break;
                case "Displ.ST_DriverBeltOn":
                    description = "Vermeld als bestuurder heeft gordel op (Info van tweemaal) ";
                    //category = XDFCategories.Displ;

                    break;
                case "Displ.ST_PassengerInSeat":
                    description = "Vermeld indien er sprake is van een passagier (Info van tweemaal) ";
                    //category = XDFCategories.Displ;

                    break;
                case "F_KnkDetCal.X_KnkDecay":
                    description = "Referentie verval factor voor U_AveKnock. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "LimpIn.ST_CruiseB2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CruiseC2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CruiseC1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CruiseA2":
                    description = "Cruise controller schakelt uit slaaf processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_ACReq":
                    description = "AC verzoek status EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CruiseB1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CruiseA1":
                    description = "Cruise controller schakelopties van meester processor unit: bool (0 = vrij, 1 = ingedrukt) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "Sync.detect2OK":
                    description = "Geeft detectsignal voor de diagnose dat de sporen 2 signaal zijn ok gedurende ten minste 20 verbranding van 50. ";
                    //category = XDFCategories.Sync;

                    break;
                case "LimpIn.ST_ClutchBrake1":
                    description = "Koppeling rem van meester processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_ClutchBrake2":
                    description = "Koppeling rem van slaaf processor unit: Boole (0 = inactief, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ECMStat.ST_ACRequested":
                    description = "Geeft als AC aanwezig is in het systeem. Als de wisselstroomadapter die is gevraagd over de bus deze vlag zal worden vastgesteld en nieuwere gewist. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "QAdaptCal.BlockSize":
                    description = "Het aantal zelfontbrandingen te evalueren domino minimale waarde. ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "LimpIn.ST_ElevatedIdle":
                    description = "Verhoogde stationair toerental van de motor EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "SyncCal.n_CombLimit":
                    description = "Aantal kloppen, na elkaar volgende, zelfontbrandingen voordat de motor zal syncronice. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.SyncCal;

                    break;
                case "ECMStat.ST_EngineStarted":
                    description = "Vermeld of motor hebt gestart. 1 => begonnen 0 => niet gestart. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_EngNotMoving":
                    description = "Vermeld indien de motor niet in beweging is. 1 => motor is niet beweegt. 0 => motor in beweging is. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "SyncProt.DetectOkCnt":
                    description = "Actueel correct detecteren teller. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.SyncProt;

                    break;
                case "ECMStat.ManualGear":
                    description = "Actueel versnelling (handtherapiën versnellingsbak). Fwd 1.5 Rew \"R\" Ongedefinieerd 'U' ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_EngineMoving":
                    description = "Vermeld als motor in beweging is. 1 => de motor in beweging is. 0 => motor is stil. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_PedalReleased":
                    description = "Vermeld als gaspedaal wordt losgelaten. Deze vlag is ingesteld in het stationair lucht routine. 1 => Pedal vrijgegeven 0 => Pedal niet vrijgegeven ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "In.ST_TCMFreezeFrameReq":
                    description = "Request te sturen Powertrain Freeze Frame te TCM EENHEID: bool (0 = uitgeschakeld, 1 = on) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is x ms. ";
                    //category = XDFCategories.In;

                    break;
                case "ECMStat.ST_ActiveAirDem":
                    description = "Actieve functie veeleisende airmass DRIVE MASTER = 1x LIMIET WHEEL 3x = 10 = PedalMap 30 = Niet gebruikt 11 = Cruise Control 31 = Max snelheid van het voertuig 12 = Idle Control MIN LIMIET ENGINE = 4x TORQUE MASTER = 2x 40 = LDA Vraag 20 = Max motorkoppel 41 = Min Load 21 = Traction Control 22 = Manual Gearbox Limit MAX LIMIT ENGINE = 5x 23 = automatische versnellingsbak Lim 50 = Knock Airmass Limit 24 = STALL Limit (Automatic) 51 = Max toerental van de motor 25 = speciale modus 52 = Max Air for Lambda 26 1 = Reverse Limit (Automatic) 53 = Max Turbo Speed 27 = ontstekingsfouten Diagnose Limiet 54 = cartergassen ontluchtingsinrichting fout 28 = Brake Beheer 55 = Defecte APC 29 = GK Prot (Automatic) Emissiebeperking 6x = 61 = motor Tipin Beperking 62 = Engine Tipout Beperking VEILIGHEID BEPERKING = 7x 70 veiligheidsschakelaar ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ActualIn.ST_BoostMeter":
                    description = "Vermelding van MIU als Turbo instrument bestaat ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_vVehicle":
                    description = "OBDII diagnos-status gedaan door ABS 0 = Prijs op OK 1 = Diagnos niet gebeuren op linker wiel 2 = Sensor fout op linker wiel 16 = Fout ABS, diagnos niet gedaan door ABS 17 = Fout ABS, diagnos niet gedaan op links wiel 18 = Fout ABS, Sensor fout op linker wiel ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "ActualIn.ST_CarType":
                    description = "Auto type lezen van TWEEVOUDIGE knooppunt 0 = 1 9-5 = 9-5 Estate 2 = Converteerbare 3 = 9-3 ";
                    //category = XDFCategories.ActualIn;

                    break;
                case "LimpIn.X_ActualGear":
                    description = "Actueel vistuig op de automatische versnellingsbak. 2 - Omgekeerde 3 - Neutraal 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock-up 12 - Gear 4, lock-up Interval is elke 50 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ECMStat.ST_BlkHeatStart":
                    description = "De start werd geïdentificeerd als een blockheater beginnen en moet daarvoor extra verrijkingen, omdat de waarde van de motor temperatuur is onbetrouwbaar ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_TCSCANBased":
                    description = "Vermeld als Traction control systeem (TCS) is aangetroffen op de bus in plaats van een PWM. Dit impliceert dat v_Vehicle is overgenomen uit de bus in plaats van de analoge ingang. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "LimpIn.ST_BrakeLight":
                    description = "remlicht status EENHEID: Boole (0 = brakelight uitgeschakeld, 1 = brakelight verlicht) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "Sync.EngineCycleMode":
                    description = "Engine synchronisatie modus 0 - Niet gesynchroniseerd 1 - gesynchroniseerd en aangepast 360 ° 2 - gesynchroniseerd en niet aangepast ";
                    //category = XDFCategories.Sync;

                    break;
                case "Sync.detect1OK":
                    description = "Geeft detectsignal voor de diagnose dat de sporen 1 signaal zijn ok gedurende ten minste 20 verbranding van 50. ";
                    //category = XDFCategories.Sync;

                    break;
                case "ECMStat.ST_Automatic":
                    description = "Vermeld of automatische versnellingsbak wordt gedetecteerd. 1 => Automatisch 0 => handgeschakelde versnellingsbak. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_EngineSynced":
                    description = "Vermeld of motor hebben syncronised 1 => motor syncronised 0 => motor niet syncronised ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_AutNeutral":
                    description = "Vermeld, indien de automatische versnellingsbak in de neutrale positie. 1 => Neutrale positie 0 => Niet neutraal standpunt. ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_DICE_Node":
                    description = "Vermeld of DICE knoop wordt gedetecteerd op de CAN-bus. 1 => DICE Herkend 0 => DICE niet gedetecteerd ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "LimpIn.ST_IgnitionKey":
                    description = "Ontstekingssysteem belangrijke status EENHEID: Boole (0 = contactsleutel uitgeschakeld, 1 = ontsteking toets op) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "ECMStat.ST_SID_Node":
                    description = "Vermeld als SID knoop wordt gedetecteerd op de CAN-bus. 1 => SID Detected 0 => SID niet gedetecteerd ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "ECMStat.ST_MIU_Node":
                    description = "Vermeld of MIU knoop wordt gedetecteerd op de CAN-bus. 1 => MIU Herkend 0 => MIU niet gedetecteerd ";
                    //category = XDFCategories.ECMStat;

                    break;
                case "Out.ST_CruiseActive":
                    description = "Cruise control actief EENHEID: Boole (0 = uitgeschakeld, 1 = actief) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms + evenement. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_EngineStarted":
                    description = "Engine gestart vlag EENHEID: Boole (0 = motor niet gestart, 1 = motor gestart) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 250ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_CheckFillerCap":
                    description = "Check filler cap commando EENHEID: Boole (0 = uitgeschakeld, 1 = ingeschakeld) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is gebeurtenis. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_ShiftUp":
                    description = "Shift up commando EENHEID: Boole (0 = uitgeschakeld, 1 = ingeschakeld) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms + evenement. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_CheckEngine":
                    description = "Check motor lamp commando EENHEID: Boole (0 = uitgeschakeld, 1 = ingeschakeld) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100ms + evenement. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_CruiseLamp":
                    description = "Cruise controller lamp commando EENHEID: Boole (0 = uitgeschakeld, 1 = ingeschakeld) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms + evenement. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_ClutchBrake":
                    description = "Clutchbrake vlag EENHEID: Boole (0 = niet geperst, 1 = koppelings-of rempedaal ingedrukt) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms + evenement. ";
                    //category = XDFCategories.Out;

                    break;
                case "LimpIn.ST_BoostMeter":
                    description = "Vermelding van MIU als Turbo instrument bestaat ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_vVehicle":
                    description = "OBDII diagnos-status gedaan door ABS 0 = Prijs op OK 1 = Diagnos niet gebeuren op linker wiel 2 = Sensor fout op linker wiel 16 = Fout ABS, diagnos niet gedaan door ABS 17 = Fout ABS, diagnos niet gedaan op links wiel 18 = Fout ABS, Sensor fout op linker wiel ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CarType":
                    description = "Auto type lezen van TWEEVOUDIGE knooppunt 0 = 1 9-5 = 9-5 Estate 2 = Converteerbare 3 = 9-3 ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "F_KnkDetCal.FDCntInit":
                    description = "De waarde van deze variabele beslissen wat voor soort status u start inch (Roet, Knock of normale modus) ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "Out.CMD_WarmUpSP":
                    description = "TCM Warmup verschuiving patroon commando EENHEID: Boole (0 = normale verschuiving patroon, 1 = Warmup verschuiving patroon) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "F_KnkDetCal.EvalDelay":
                    description = "Aantal zelfontbrandingen voordat evaluatie na knock indicatie. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "F_KnkDetCal.KnkFilterVal":
                    description = "Filter constante gebruikt voor lowpass filter. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "Out.CMD_KickDown":
                    description = "TCM kickdown commando EENHEID: bool (0 = geen kickdown, 1 = kickdown) MAX: 1 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 20ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "F_KnkDetCal.FDCntMin":
                    description = "ondergrens voor de F_KnkDet.FalseDetCnt teller. ";
                    //category = XDFCategories.F_KnkDetCal;

                    break;
                case "F_KnkDet.ST_SteadyState":
                    description = "Deze vlag geeft i steadystate modus Interval is Iedere verbranding. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "QAdaptCal.FilterVal":
                    description = "Filter waarde die wordt gebruikt voor het low pass filter. ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "QAdaptCal.X_MultFact":
                    description = "vermenigvuldigings aanpassing van blok min berekening. tmp1 = (BlockMin * QAdaptCal.X_MultFact) + QAdaptCal.Offs ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "LimpIn.ST_CheckEngine":
                    description = "TCM controle van de motor verzoek EENHEID: Boole (0 = geen verzoek, 1 = inschakelen lamp) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_CrankRequest":
                    description = "Engine cranking status EENHEID: bool (0 = niet cranking, 1 = cranking) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 100 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "QAdaptCal.Offs":
                    description = "Offset aanpassing van blok min berekening. tmp1 = (BlockMin * QAdaptCal.X_MultFact) + QAdaptCal.Offs ";
                    //category = XDFCategories.QAdaptCal;

                    break;
                case "Out.X_EngineType":
                    description = "Motortype EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 1000ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.X_ActualGear":
                    description = "Actueel vistuig EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.ST_BrakeLight":
                    description = "remlicht status 0 = brakelight off 1 = brakelight verlicht ";
                    //category = XDFCategories.Out;

                    break;
                case "Out.CMD_WarmUpCycle":
                    description = "Opwarmtijd cyclus gedaan, de informatie wordt gebruikt door TCM Interval is s. ";
                    //category = XDFCategories.Out;

                    break;
                case "LimpIn.X_GearLever":
                    description = "Automatische versnellingsbak modus EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 50 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_TCSTorqueReq":
                    description = "Actuele status op de televisiecamerasystemen koppel verzoek via CAN. 0 - niet geldig 1 - geldig Interval is elke 20 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "Out.X_BoostMeter":
                    description = "Turbo boost meter EENHEID: Encoded, 0-255 MAX: 255 MIN: 0 TRANS: V = P *. Resolutie: 1. Interval is 100ms. ";
                    //category = XDFCategories.Out;

                    break;
                case "F_KnkDet.ST_Active":
                    description = "Status vlag voor valse indicatie. 0 - Normaal domino kalibratie. 1 - Gedaald domino gevoeligheid. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "F_KnkDet.ST_DoubleDetect":
                    description = "ST Doubledetect geeft aan wanneer douledetect accures. De variabele kan worden waar of onwaar. Interval is Every verbranding. ";
                    //category = XDFCategories.F_KnkDet;

                    break;
                case "LimpIn.ST_TCMSport":
                    description = "TCM sport status EENHEID: bool (0 = niet van de sport-modus, 1 = sport-modus) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "LimpIn.ST_ReverseGear":
                    description = "Achteruit status EENHEID: bool (0 = niet achteruitrijdend, 1 = achteruitrijdend) MAX: 1 MIN: 0 TRANS: V = P. resolutie is 1. Interval is 250 ms. ";
                    //category = XDFCategories.LimpIn;

                    break;
                case "KnkDetProt.RefFactor":
                    description = "Actueel factor voor de berekening van de referentiespanning voor knockdetection KnkDetProt.U_RefLevelActual. Deze factor is van de landkaart KnkDetCal.RefFactorMap. Als F_KnkDet.ST_Active is ingesteld (valse domino ontdekt), dan is de kaart waarde daalde met: KnkDetProt.RefFactor = KnkDetProt.RefFactor / KnkDetCal.X_FalseDetRef (Meer info over valse knock detectie in structs: F_KnkDet, F_KnkDetCal) Interval is Iedere verbranding. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "LoadCoProt.ST_ACReq":
                    description = "Dit is normaliter een kopie van In.ST_ACReq, maar als de bestuurder heeft geduwd het pedaal meer dan een gekalibreerde beperken en het toerental van de motor lager is dan een gekalibreerde beperken, het AC zal worden uitgeschakeld door LoadCoProt.ST_Req op 0. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "LoadCoProt.ST_ACRamping":
                    description = "Status; AC veredelingsprodukten airmass is speedramp in-of uitschakelen. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "ComData.Fr592MonStim":
                    description = "TBD ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.Fr592MonAnsw":
                    description = "TBD ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.To592MonStim":
                    description = "TBD ";
                    //category = XDFCategories.ComData;

                    break;
                case "Tamper.ST_Error":
                    description = "Als brandstof gesneden moet zijn uitgeschakeld, afhankelijk van manipulatie bescherming. ";
                    //category = XDFCategories.Tamper;

                    break;
                case "ComData.Fr592StatusCCL":
                    description = "Bit 7 in deze byte geeft aan wanneer het gaspedaal wordt in limphome modus. ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.Fr592RamData2":
                    description = "Gegevens lezen van 592 ram, gespecificeerd door het adres in de \"ComProt.To592RamAdr2\". ";
                    //category = XDFCategories.ComData;

                    break;
                case "ThrErr.DemandStatus":
                    description = "Status informatie als gewone gasklep vraag waarde tot 592 moet worden gebruikt. 0 = Normaal vraag waarde worden gebruikt. 1 = Demand waarde gelijk aan 0, H-brug gehandicapten en limphome voorjaar vrijgegeven. 3 = Demand waarde gelijk met 0, H-brug ingeschakeld en limphome voorjaar vrijgegeven. ";
                    //category = XDFCategories.ThrErr;

                    break;
                case "ThrErr.ST_PwmLimOrdered":
                    description = "Vermeld bij PWM beperken kapitein dat PWM beperking wordt gelast door Thrlimp. ";
                    //category = XDFCategories.ThrErr;

                    break;
                case "ComData.To592MonAnsw":
                    description = "TBD ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.To592Reaction":
                    description = "Bevelen tot 592: bit 7 - Zet gasklep bits 6 - Zet de gasklep bit 5 bit 4 - Duidelijke fouten ";
                    //category = XDFCategories.ComData;

                    break;
                case "ComData.Fr592RamData1":
                    description = "Gegevens lezen van 592 ram, gespecificeerd door het adres in de \"ComProt.To592RamAdr1\". ";
                    //category = XDFCategories.ComData;

                    break;
                case "LoadCo.ST_ACCompAir":
                    description = "Status wat aangeeft dat Load Compensatie functie verzoek airmass te compenseren voor AC compressor belasting. \"ON\" - Comp Air wordt gevraagd \"-\" - Geen compensatie lucht ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "LoadCo.ST_ACStartAir":
                    description = "Status wat aangeeft dat Load Compensatie functie verzoek extra airmass te compenseren voor AC compressor begint belasting. \"ON\" - Extra lucht wordt gevraagd \"-\" - Geen extra vergoeding lucht ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "PowInh.ST_TestPhase":
                    description = "Test fase: 0 = Test nog niet gestart. Motor blijft draaien 1 = H-brug geremd, maar de meting niet gestart 2 = Meten met H-brug geremd 3 = H-brug nog steeds geremd en Out.AD_Throttle = 0 4 = H-brug is ingeschakeld, maar de meting niet gestart 5 = Meten met H-brug ingeschakeld 6 = Evaluatie van de metingen 7 = meting beëindigd of onderbroken ";
                    //category = XDFCategories.PowInh;

                    break;
                case "LoadCo.ST_IdleAdapt":
                    description = "Als compensatie airmass voor servokleppen druk te hoog zijn normaal stationair controle adaption uitgeschakeld. 0 = Adaptie toegestaan. 1 = Adaptie niet toegestaan. ";
                    //category = XDFCategories.LoadCo;

                    break;
                case "MonStim.Calc":
                    description = "Berekening waarde voor toezicht op controle van de 339-software. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "MonStim.EndResult":
                    description = "Definitieve berekening waarde voor toezicht op controle van de 339-software. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "MonStim.Stimulation":
                    description = "Stimulering waarde van 592 voor toezicht op controle van de 339-software. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "MonStim.Carry":
                    description = "Vermeld volgende functie te vervullen als zijn gelijk aan 1. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "MonStim.State":
                    description = "Vermeld welke modules die alowed te lopen. 0 = 10 msec. routines. 1 = 40 msec. routines. 2 = 50 msec. routines. 3 = 100 msec. routines. 4 = Tijd om te updaten eindresultaat. ";
                    //category = XDFCategories.MonStim;

                    break;
                case "LoadCoProt.ST_ElLoadRamp":
                    description = "Status blijkt indien elektrische belasting veredelingsprodukten airmass is speedramp. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "MaxVehicCal.Status":
                    description = "Aangezochte status van de maximale snelheid van het voertuig beperking. Resolutie is \"0\" => niet actief is. ";
                    //category = XDFCategories.MaxVehicCal;

                    break;
                case "CruiseFilterCal.m_CCFilt":
                    description = "Filterconstant voor de werkelijke airmass die wordt gevraagd van cruise control. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseFilterCal;

                    break;
                case "CruiseFilterCal.t_592Deb":
                    description = "Tijd voor debounce de cc_allowed info uit de 592. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseFilterCal;

                    break;
                case "ThrErr2Prot.ST_LimpHome":
                    description = "Bit 7 in deze byte geeft aan wanneer het gaspedaal wordt in limphome modus. ";
                    //category = XDFCategories.ThrErr2Prot;

                    break;
                case "CruiseComCal.TimerLimit":
                    description = "Timerlimit dalen M_DeltaRoad voor roadload berekening als rem signaal is actief in te stellen M_RoadLoad1 de standaardstijl roadload. Resolutie is 0.1 sec. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "ThrErrCal.ThrPotSumDiff":
                    description = "Als (ActualIn.AD_ThrottlePot1 + ActualIn.AD_ThrottlePot2)> (1164 - ThrErrCal.ThrPotSumDiff) de vlag ThrErr.ST_WiperCleaner, die triggs de Ruitewisser-Cleaner functie, wordt vastgesteld. Als 592 aangeven gasklep sensoren som fout in dit geval debouncing lange tijd worden gebruikt. Zie de beschrijving voor ThrErrCal.t_ThrSumInfo en ThrErrCal.t_ThrSumLimp. Resolutie: 1. ";
                    //category = XDFCategories.ThrErrCal;

                    break;
                case "CruiseComCal.M_RoadSize":
                    description = "Nummer van de steun voor de standaard roadload kaart ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "Ser339Prot.SerialStatus":
                    description = "Status byte voor seriële communicatie tot 592. 0 = Probleem met zowel RX en TX. Tx huidige status is eigenlijk onbekend, maar er was een probleem voor rx mislukt. 1 = Probleem met tx. 2 = Probleem met rx, tx status onbekend. 3 = OK. ";
                    //category = XDFCategories.Ser339Prot;

                    break;
                case "CruiseComCal.M_MinSize":
                    description = "Aantal steunpunten voor offset te motorkoppel te beperken integrator ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "ThrErrProt.RomErrCounter":
                    description = "ROM-fout in 592 moeten zijn ontdekt 4 keer voor fout in 339 is ingesteld. Deze teller wordt gebruikt. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.ST_LimSpr":
                    description = "Detectie van vrijgegeven limphome voorjaar. OP = Spring relesead. UIT = voorjaar niet vrijgegeven. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.PedAdapStored":
                    description = "Geef aan dat het pedaal adaption fout is geldig. De 592 hebt opgeslagen een geldig adaptatie in de 339. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.ST_DKShortCut":
                    description = "Detectie van korte teruggebracht tot +12 V in de H-brug. OP = Snelkoppeling OFF = geen snelkoppeling. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.ST_ThrStartup":
                    description = "Bit 7 in deze byte geeft aan wanneer het gaspedaal wordt in limphome modus. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "ThrErrProt.ST_LimpHome":
                    description = "Bit 7 in deze byte geeft aan wanneer het gaspedaal wordt in limphome modus. ";
                    //category = XDFCategories.ThrErrProt;

                    break;
                case "CruiseCal.a_AccSize":
                    description = "Aantal steunpunten om gevraagd accelaration of vertraging. Resolutie is beetje. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "PowInhAdap.ErrCounter":
                    description = "Aantal macht stadium remmen test schuld, zonder enige correcte test. ";
                    //category = XDFCategories.PowInhAdap;

                    break;
                case "CruiseCal.M_GradSize":
                    description = "Aantal steunpunten te krijgen koppel gradiënt beperking. Resolutie is beetje. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.a_DecTimeLim":
                    description = "Debouncing tijd voor vertraging drempel uit te schakelen cruise control. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "ROM339ChksmCal.ST_Enable":
                    description = "Vlag staat voor de ROM 339 checksum test 1 = Checksum test ingeschakeld 0 = Checksum test uitgeschakeld ";
                    //category = XDFCategories.ROM339ChksmCal;

                    break;
                case "CruiseCal.v_LimitSize":
                    description = "Bedrag van de steunpunten voor v limiet voor het verminderen van de a_Request0 v_limit = f (verzocht de snelheid van het voertuig). Resolutie is beetje. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "ADCCal.FilterConst":
                    description = "Filter constante voor de berekening van het pedaal signaal 1 & 2. PEDAL = PEDAL (n-1) * FilterConst + In.AD_AccPedal FilterConst + 1 ";
                    //category = XDFCategories.ADCCal;

                    break;
                case "CruiseComCal.ComFac_5":
                    description = "Comfort factor voor staat 5 procentpunten van a_Request1 als je bent in staat 5. Resolutie%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "ADC2Cal.FilterConst":
                    description = "Filter constante voor de berekening van het pedaal signaal 1 & 2. PEDAL = PEDAL (n-1) * FilterConst + In.AD_AccPedal FilterConst + 1 ";
                    //category = XDFCategories.ADC2Cal;

                    break;
                case "ThrErr2Cal.ThrPotSumDiff":
                    description = "Als (In.AD_ThrottlePot1 + In.AD_ThrottlePot2)> (1164 - ThrErr2Cal.ThrPotSumDiff) de vlag ThrErr2.ST_WiperCleaner, die triggs de Ruitewisser-Cleaner functie, wordt vastgesteld. Als 592 aangeven gasklep sensoren som fout in dit geval debouncing lange tijd worden gebruikt. Zie de beschrijving voor ThrErr2Cal.t_ThrSumInfo en ThrErr2Cal.t_ThrSumLimp. Resolutie: 1. ";
                    //category = XDFCategories.ThrErr2Cal;

                    break;
                case "CruiseComCal.ComFac_7":
                    description = "Comfort factor voor staat 7 procent van a_Request1 als u bent in staat 7. Resolutie%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.ComFac_6":
                    description = "Comfort factor voor staat 6 procent van a_Request1 als je bent in staat 6. Resolutie%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.v_FCOEnable":
                    description = "Boven deze snelheid van het voertuig FCO afwijking is toegestaan. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.M_DefOffset":
                    description = "Negatieve gecompenseerd voor roadload geschaald in% van de standaard roadload zal worden gebruikt voor het initialiseren van de cruise wiel integrator. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "CruiseComCal.ComFac_4":
                    description = "Comfort factor voor staat 4 procentpunten van a_Request1 als u in staat 4. Resolutie%. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "PowInhCal.Number":
                    description = "Aantal mislukte test voordat limphome. ";
                    //category = XDFCategories.PowInhCal;

                    break;
                case "CruiseComCal.MaxInit":
                    description = "Maximaal init PULS in positieve richting geschaald in motorkoppel. Resolutie is Nm. ";
                    //category = XDFCategories.CruiseComCal;

                    break;
                case "ThrErr2.ST_WiperCleaner":
                    description = "Vlag te wijzen op een positieve gasklep sensor som fout. Deze vlag wordt gebruikt om trigg de WiperCleaner functie. Als 592 aangeven gasklep sensoren som fout in dit geval debouncing lange tijd worden gebruikt. Zien beschrijving voor ThrErr2Cal.t_ThrSumInfo en ThrErr2Cal.t_ThrSumLimp. ";
                    //category = XDFCategories.ThrErr2;

                    break;
                case "CCRatioCal.FilterRamp":
                    description = "Ramp van het filter voor constante versnelling als de veranderingen in het systeem van niet arrestantenlokaal tot sluitingsuur. Resolutie is 1 Bit / 50ms. ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "ThrErr.ST_FuelCutOrdered":
                    description = "Brandstof gesneden volgorde van ThrLimp om het systeem veilig is. ";
                    //category = XDFCategories.ThrErr;

                    break;
                case "ThrErr.ST_CCNotAllowed":
                    description = "Vermeld bij Cruise controller die fout # 27 is actief (CC uitgeschakeld fout) ";
                    //category = XDFCategories.ThrErr;

                    break;
                case "ThrErr.ST_WiperCleaner":
                    description = "Vlag te wijzen op een positieve gasklep sensor som fout. Deze vlag wordt gebruikt om trigg de WiperCleaner functie. Als 592 aangeven gasklep sensoren som fout in dit geval debouncing lange tijd worden gebruikt. Zien beschrijving voor ThrErrCal.t_ThrSumInfo en ThrErrCal.t_ThrSumLimp. ";
                    //category = XDFCategories.ThrErr;

                    break;
                case "CCRatioCal.Hysteresis":
                    description = "Hysterese voor versnelling vóór de feitelijke verhouding is ingesteld op de nieuwe one.This ratio wordt alleen gebruikt voor het converteren M_Wheel te M_Engine. Resolutie: 1 Bit. ";
                    //category = XDFCategories.CCRatioCal;

                    break;
                case "TorqueProt.M_IgnInflTorq":
                    description = "Ontstekingssysteem invloed op koppel lezen van matrix. Resolutie is 0,1 Nm / graden. ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "Torque.ST_NoiseReduc":
                    description = "Status blijkt welke modus is werkelijk voor de ruisonderdrukking functie. 0 = Geen reductie. 1 = Vermindering is trigged maar niet geactiveerd. 2 = Vermindering is aangevraagd bij gekalibreerd niveau. 3 = vermindering is aangevraagd en speedramp. ";
                    //category = XDFCategories.Torque;

                    break;
                case "TorqueProt.manualgear":
                    description = "Opgeslagen vistuig sinds de laatste oproep van Torquemaster ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.OverBoostMode":
                    description = "Welke modus de overboostfunction is 0 = geen overboost 1 = Overboost 2 = Ramping 3 = Overboost niet toegestaan 4 = Niet overboosting 5 = Koeling ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_NewActGear":
                    description = "Actueel vistuig. Gebruikt voor de detectie van schakelindicatoren. Nieuw nummer te maken detectie van verschuiving omhoog en omlaag verschuiven makkelijker. 2 - Omgekeerde 3 - Neutraal 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 3, lock-up 9 - Gear 4 10 - Gear 4, lock-up ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "TorqueProt.X_OldActGear":
                    description = "Actueel vistuig 10 ms geleden. Gebruikt voor de detectie van schakelindicatoren. Nieuw nummer te maken detectie van verschuiving omhoog en omlaag verschuiven makkelijker. 2 - Omgekeerde 3 - Neutraal 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 3, lock-up 9 - Gear 4 10 - Gear 4, lock-up ";
                    //category = XDFCategories.TorqueProt;

                    break;
                case "EmLimCal.ClutchMode":
                    description = "Functiekeuzeschakelaar over het instellen van de gearshifting vlag, EmLim.ST_GearShifting. Standen: 0 - Gebruik alleen de In.ST_ClutchBrake1 1 - Gebruik zowel de In.ST_ClutchBrake1 en als de koppeling wordt ingedrukt voor meer dan EmLimCal.t_ClutchDelay ms, start de overbrengingsverhouding versnellingshendel detectie. 2 - Gebruik alleen de overbrengingsverhouding versnellingshendel detectie. Overbrengingsverhouding versnellingshendel detectie: Als het pedaal wordt vrijgegeven onder de 10% is een hoge en lage verhouding berekende maximum, EmLimProt.RatioLow en EmLimProt.RatioHigh, wanneer de ratio hoger is dan de hoge limiet of onder de lage limiet is de EmLim.ST_GearShifting vlag ingesteld. Wanneer het pedaal is boven de 5% en een hogere versnelling wordt gedetecteerd en de EmLimProt.RatioDelta minder dan 5 zal de EmLim.ST_GearShifting vlag worden gewist. ";
                    //category = XDFCategories.EmLimCal;

                    break;
                case "EmLim.ST_GearShifting":
                    description = "Deze vlag is ingesteld wanneer de koppeling wordt ingedrukt. Ofwel, door het opsporen van de In.ST_ClutchBrake1 of door detectie van een verandering in versnelling na het pedaal is vrijgegeven onder de 10%. Wanneer deze vlag is ingesteld zal de lucht antijerk worden uitgeschakeld. ";
                    //category = XDFCategories.EmLim;

                    break;
                case "Torque.ST_FuelCutReq":
                    description = "Status variabele blijkt als koppel Master verzoeken Fuel Cut Off. De FCO verzoek zal komen indien M_Engine> koppel limiet + gekalibreerd gecompenseerd. 0 = Fuel Cut Off niet om 1 = Fuel Cut Off gevraagd ";
                    //category = XDFCategories.Torque;

                    break;
                case "Torque.ST_ExtTrqLim":
                    description = "Ontstekingssysteem invloed op koppel lezen van matrix. 0 = Extern Limit Req zal worden gemaakt door de lucht vermindering 1 = korte tijd, vermindering zal alleen worden gedaan door ontsteking 2 = langere tijd, verlaging door de lucht gewoon voor een tijdje 3 = Overuren, Request heeft durated meer dan In.t_ExtLimDuration + TorqueCal.t_ThrOverTime ";
                    //category = XDFCategories.Torque;

                    break;
                case "CrnkCVCal.ST_Enable":
                    description = "Mogelijkheid tot uitschakelen van de motorcarters geval ventilatie ventiel controle. 0 = Crank zaak Ventilatie Ventiel functie OFF Diagnose uitgeschakeld. 1 = Crank zaak Ventilatie Ventiel functie OP Diagnose ingeschakeld. ";
                    //category = XDFCategories.CrnkCVCal;

                    break;
                case "CrnkCVCal.p_DiffLimit":
                    description = "Pressure beperken. Zolang In.p_Air <In.p_AirInlet + CrnkCVCal.p_DiffLimit + CrnkCVCal.p_DiffLimitHys de motorcarters geval ventilatie klep wordt geopend. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.CrnkCVCal;

                    break;
                case "CrnkCVCal.p_DiffLimitHys":
                    description = "Hysterese om ventiel te klep / klep. Wanneer de slinger geval klep geopend is: CrnkCVProt.p_DiffLimit = CrnkCVCal.p_DiffLimit + CrnkCVCal.p_DiffLimitHys. Resolutie is 0,1 kPa. ";
                    //category = XDFCategories.CrnkCVCal;

                    break;
                case "SwitchProt.ST_PedalIdle":
                    description = "Geeft aan dat pedaal is in idle stand. De pedal2 stationair informatie wordt gelezen door de 592, naar de 339 en debounced. Resolutie is \"0\" => niet in idle. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "LimEngCal.Status":
                    description = "Status uitgeschakeld beperken motor controle. ";
                    //category = XDFCategories.LimEngCal;

                    break;
                case "SwitchProt1.ST_PedalIdleOld":
                    description = "Geeft aan dat pedaal is in idle standpunt ten aanzien van pedaal poti 1. Resolutie is \"0\" => niet in idle. ";
                    //category = XDFCategories.SwitchProt1;

                    break;
                case "SwitchProt.PedalDebounce":
                    description = "Debouncing timer voor pedal2 stationair informatie tijdens het verplaatsen van niet-stationair tot stationair. Deze timer is ook indirect gebruikt worden door de beperking die functie wordt actief als het pedal2 inactief is en het gebied verzoek is boven de switchpoint. De debouncing tijd moeten worden zolang de oppervlakte verzoek treedt \"Onbelaste stand\" na het loslaten van het pedaal. Resolutie is 10 ms. ";
                    //category = XDFCategories.SwitchProt;

                    break;
                case "AirMinLimCal.ST_Loop":
                    description = "Engine Airmassflow Min Limit reguleren lus controle variabele. \"0\" - Beperk zal niet worden beschouwd. \"1\" - Open-lus. \"2\" - Sluit lus. ";
                    //category = XDFCategories.AirMinLimCal;

                    break;
                case "TorqueCal.M_OffsFCOStart":
                    description = "Verschil tussen de werkelijke motorkoppel en koppel limiet berekend door de Torque-Master, waar Fuel Cut Off zal beginnen te worden aangevraagd. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.M_OffsFCOStop":
                    description = "Verschil tussen de werkelijke motorkoppel en koppel limiet berekend door de Torque-Master, waar Fuel Cut Off zal niet worden gevraagd. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.M_HysIgnRedOff":
                    description = "Verschil tussen de werkelijke motorkoppel en koppel limiet berekend door de Torque-Master, waar Ontstekingssysteem verlaging stopt te worden gebruikt. Het wordt ook gebruikt als IGN. rood. hysterese starten wanneer de TCM heeft een korte koppel verlaging, omdat de M_HysIgnRedOn is groter dan deze gegevens. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.ST_Loop":
                    description = "Limit Wheel airmass controle lus status variabele. \"0\" - Beperk zal niet worden beschouwd. \"1\" - Open-lus. \"2\" - Sluit lus. ";


                    break;
                case "TorqueCal.X_CoolFactor":
                    description = "factor voor de vermindering van koeling tijdstip van aftrek van geaccumuleerde ontsteking verlaging tijd, veroorzaakt door koppel beperken functie. 0 -> afgetrokken tijd = tijd / 1 1 -> afgetrokken tijd = tijd / 2 2 -> afgetrokken tijd = tijd / 4 3 -> afgetrokken tijd = tijd / 8 4 -> afgetrokken tijd = tijd / 16 ";


                    break;
                case "LimEng.ST_MaxLimActive":
                    description = "Status variabele aangeeft welke MaxLim is actief (laagste) voor dit moment. 0 = Knock limiet 1 = Max motor snelheidsbeperking 2 = Performance controle 3 = Max turbo snelheidsbeperking 4 = Crank geval ventilatie defecte 5 = Defecte APC ";
                    //category = XDFCategories.LimEng;

                    break;
                case "AirctlData.FreezeIPart":
                    description = "Status vlag te bevriezen I-deel. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.AirctlData;

                    break;
                case "TorqueCal.M_HysIgnRedOn":
                    description = "Verschil tussen de werkelijke motorkoppel en koppel limiet berekend door de Torque-Master, waar Ontstekingssysteem vermindering zal beginnen te worden gebruikt. Resolutie is 1 Nm. ";


                    break;
                case "TorqueCal.ST_XAccLimRes":
                    description = "Te hoge motorkoppel op schakelindicatoren tijdens RESUME Activeert de \"Beperking functionaliteit 'in de Gear Shift Support functie dat: - de vriezer Out.X_AccPedal een bepaalde tijd na schakelindicatoren en - vertragen veranderingen in Out.X_AccPedal, max. Out.X_AccPedal delta ook tijdens een RESUME (Cruise.ST_ResumeMode == 1). De functie wordt gebruikt voor het voorkomen van onnodige schakelindicatoren maar kan leiden tot \"harde\" schakelindicatoren. Alleen gebruikt in de automatische auto's bij het rijden met cruise control en niet dwingende cruise met gaspedaal. 0 = Beperking functie niet actief tijdens RESUME 1 = bevriezing van Out.X_AccPedal na schakelindicatoren tijdens RESUME 2 = Limiet verandering van Out.X_AccPedal tijdens RESUME 3 = 1 + 2 ";


                    break;
                case "PedalMapCal.ST_Function":
                    description = "initialisering van de functie-status; hier speciaal om de status voor het pedaal; ";


                    break;
                case "PedalMapCal.ST_NoiseRed":
                    description = "Deze vlag controles als de kickdown vlag wordt aangegeven wanneer de kickdown koppel ruisonderdrukking is actief. Als deze vlag is ingesteld en Torque.ST_NoisReduc niet gelijk is aan nul zal kickdown niet te worden vermeld. ";


                    break;
                case "Idle.StartAirMode":
                    description = "Vermeld de werkelijke start-modus. 1 - Rpm lager dan de nominale stationair toerental + n_EngNomExtra - n_EngLOffOffset. De IdleProt.Q_StartOffs wordt gebruikt boven stationair adaptatie en constant deel. De conversie van airmass aan gaspedaal gebied is Gedaan met vaste enginespeed (Nominaal toerental van de motor). 2 - De IdleProt.Q_StartOffs is ramped aan nul. De voorwaarde om in mode 0 is: IdleProt.Q_StartOffs = 0 of (Motortoerental druppels onder nominale stationair toerental + IdleCal.n_EngNomExtra EN IdleProt.Q_StartOffs <= IdleCal.I_PartMax en meer dan 10 zelfontbrandingen in mode 2) Als de bovenstaande voorwaarde is waar zal de rest van IdleProt.Q_StartOffs worden copyed aan de IdleProt.I_Part en stationair controle zal worden vrijgegeven. 0 - Engine functioneren en de Q_StartOffs niet meer wordt gebruikt. Idle is vrijgegeven. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.ST_IdleRpmInAreaMap":
                    description = "Geef aan dat de omzetting van m_Request aan Ruimte verzoek moet gebruik maken van de nominale stationair toerental als aanwijzer in het gebied kaart. Dit gebeurt terwijl de \"Idle.StartAirMode\" = 1. 1 => Gebruik stationair toerental 0 => Gebruik werkelijke motor snelheid ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.I_PartLimited":
                    description = "Geef aan dat het I-deel is gestopt omdat het zijn grens heeft bereikt. 0 -> I-deel niet beperkt 1 -> I-deel op zijn max limiet -1 -> I-deel op haar min limiet ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.ST_Enable":
                    description = "Vermeld als idlespeed verordening is actief. \"ON\" - Idlespeed regelgeving actief: de motor is gestart, Vehiclespeed <3 km / h, In.X_AccPedal <IdleCal.X_AccPedalLim, motortoerental verschil niet groter is dan IdleCal.n_EngDiffLim, motortoerental delta niet hoger dan IdleCal.n_EngDeltaLim en gas niet in limphome. \"-\" - Idlespeed verordening niet actief is, wordt alleen de constante deel en adaptatie deel worden gebruikt. ";
                    //category = XDFCategories.Idle;

                    break;
                case "Idle.ST_AdapAllowed":
                    description = "Vermeld of stationair adaptatie is toegestaan. 1 - Idlespeed adaptatie toegestaan 0 - Idlespeed adaptatie niet toegestaan volgende voorwaarden moet worden voldaan om stationair adaptatie: - Motor temp boven de limiet - Niet te hoog verschil in rpm - stationair I-deel niet beperkt: Stationair lucht nog steeds groter dan minload lucht, Throttle gebied> 10 mm2 I-deel groter dan -5,00 g / s I-deel minder dan +5.00 g / n - Geen fout op automatische Gear -Box drive signaal (FaultIn.M_ExternLimitReq & 0xF0) = 0 - Geen lightoff offset, IdleProt.n_EngLOffOffset = 0 - Geen servopressure comp, LoadCo.ST_IdleAdapt = 0 - Geen schuld op vehiclespeed, FaultIn.v_Vehicle = 0 - Lightoff rpm gecompenseerd niet actief, IdleProt.n_EngLOffOffset = 0 ";
                    //category = XDFCategories.Idle;

                    break;
                case "PedalMapProt.SportMode":
                    description = "Actueel sport mode: 0 - Normale modus 1 - Ramping aan sport 2 - Sport actief ";
                    //category = XDFCategories.PedalMapProt;

                    break;
                case "AreaCal.Size":
                    description = "Aantal waarden voor de x-as. Geeft de tabel AreaCal.table ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "IdleCal.LoopStatus":
                    description = "de vraag open of gesloten gasklep regelaar lus. 0 - onbelaste deel niet actief is 1 - Idle eisen open lus 2 - Idle eisen gesloten lus ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.LoopStatusRamp":
                    description = "de vraag open of gesloten gasklep regelaar lus in het begin oprit (StartAirMode = 2). 0 - onbelaste deel niet actief is 1 - Idle eisen open lus 2 - Idle eisen gesloten lus ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "DNCompProt.RampFinished":
                    description = "vlag die aangeeft dat de oprit is voltooid. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "DNCompProt.VSpeedIn2":
                    description = "vlag die aangeeft dat er sprake is van de snelheid van het voertuig in staat 2. Dit wordt gebruikt voor het uitschakelen van de werkzame lucht speedramp in stand 2. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "AirCtrlCal.DirectionHyst":
                    description = "Hysterese te sporen open of dicht richting van m_request. Resolutie is 1 mg / c. ";


                    break;
                case "StartAir.ST_FuelCut":
                    description = "Geef aan dat de lucht begint routine eisen brandstof gesneden omdat gaspedaal wordt ingedrukt. ";
                    //category = XDFCategories.StartAir;

                    break;
                case "AirCtrlCal.t_mReqDelay":
                    description = "Vertraging tijd (aantal 10ms loops) voor m_request gebruikt in de airmass controller. Deze vertraging simuleert de vertragingen in de motor na een voorbijgaand. Resolutie is 10 ms. ";


                    break;
                case "IdleCal.ST_EnableLOffRpm":
                    description = "Vlag in-of uitschakelen van het licht uit rpm gecompenseerd functie. 0 -> Functie niet actief is 1 -> Functie actief ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.ST_ElevIdleAct":
                    description = "Activte functie met verhoogde stationair op verzoek van In.ST_ElevatedIdle ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "IdleCal.N_StartAirMode2":
                    description = "Het minimum aantal zelfontbrandingen in StartAirMode 2 alvorens StartAirMode 0 ";
                    //category = XDFCategories.IdleCal;

                    break;
                case "DNComp.ActiveIgnRamp":
                    description = "Flag blijkt dat actieve speedramp van de ontsteking actief is. ";
                    //category = XDFCategories.DNComp;

                    break;
                case "DNComp.n_GearBoxMissing":
                    description = "Geeft aan dat het toerental van de TCM ontbreekt. ";
                    //category = XDFCategories.DNComp;

                    break;
                case "DNComp.IgnRampFinished":
                    description = "vlag die aangeeft dat de oprit is voltooid. ";
                    //category = XDFCategories.DNComp;

                    break;
                case "IdleProt.X_mLOffFactor":
                    description = "High Altitude factor die wordt vermenigvuldigd met de normale lightoff lucht. Dit is alleen actief als In.p_AirAmbient <IgnLOffCal.p_AirAmbHigh, ECMStat.ST_ActiveAirDem = 12 en IdleCal.N_LOffComb zelfontbrandingen na Idle.StartAirMode = 2 ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "AreaCal.N_StableForce":
                    description = "De tijd dat de voorwaarden moeten stabiele omgeving aan te passen (N * 250ms) ";
                    //category = XDFCategories.AreaCal;

                    break;
                case "DNCompProt.State":
                    description = "Interne staat in de staat de controle van de machine Drive Neutrale lucht en ontsteking compensatie. 0: steady state als er geen versnelling is ingeschakeld. lucht is ramped naar neutraal lucht en het contactslot gecompenseerd wordt gereduceerd tot nul. 1 : De gearlever is in versnelling, maar de versnelling is nog niet echt bezig. lucht is ramped tot station lucht en na een vertraging van de ontsteking is gedaald, zodat de dynamiek van de motor wordt gehandhaafd. 2: de versnellingsbak is eigenlijk ingeschakeld. lucht is nog ramped tot station de lucht en de ontsteking wordt snel ramped tot normale ontsteking. 3: het vistuig wordt vrijgezet. lucht is nog ramped, maar de ontsteking snel ramped tot het verkrijgen van een momentum afnemen. ";
                    //category = XDFCategories.DNCompProt;

                    break;
                case "IdleProt.ST_DriveActive":
                    description = "Actueel Neutraal / Drive staat in de ruststand controle 0 -> Neutraal lucht wordt gebruikt. 1 -> Drive lucht wordt gebruikt. ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "IdleProt.ST_Do_ElevIdle":
                    description = "Lokale variabele ";
                    //category = XDFCategories.IdleProt;

                    break;
                case "LoadCoProt.ST_ACExAirDem":
                    description = "0 = Statusvariable is niet geïnitialiseerd of geen vraag voor extra lucht. 1 = extra lucht nodig is op het eerste AC starten vanwege de lage temperatuur. 2 = Extra lucht is al gebruikt. ";
                    //category = XDFCategories.LoadCoProt;

                    break;
                case "Boost.AirMasterStatus":
                    description = "De impuls kapitein controles op de status airmas kapitein met deze gegevens. 0 - Boost kapitein niet actief. 1 - Boost kapitein eisen gasklep open lus. 2 - Airmass kapitein is gratis te gebruiken gesloten lus. Elk interval is 100ms. ";
                    //category = XDFCategories.Boost;

                    break;
                case "Boost.APCError":
                    description = "Vermeld als we eventuele APC schuld. 0 = OK 1 = Fout Interval is 100 msec. ";
                    //category = XDFCategories.Boost;

                    break;
                case "LoadCoCal.ST_PowerSteer":
                    description = "inschakelen of uitschakelen stuurbekrachtiging compensatie. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "AirMinLim.ST_FCutAllowed":
                    description = "Status beetje waardoor brandstof wordt afgesneden van AirMinLim Master wanneer Tipout is klaar. \"ON\" - Brandstof Cut toegestaan \"-\" - Brandstof Snijd niet toegestaan ";
                    //category = XDFCategories.AirMinLim;

                    break;
                case "DiffPSProt.ST_LimActive":
                    description = "DPS koppel beperking vlag Interval is Iedere 100ms. ";
                    //category = XDFCategories.DiffPSProt;

                    break;
                case "BoostProt.ST_PWM2Perc":
                    description = "Vermeld of boost controler Om 2% PWM, afhankelijk van de lage snelheid van het voertuig of op een laag toerental van de motor. 1 => 2 procent 0 => normale werking ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.ST_IPartEnable":
                    description = "Vermeld of het deel I is ingeschakeld op de impuls gesloten lus. Update: elke 100 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "BoostProt.ST_PPartEnable":
                    description = "Vermeld of de P onderdeel is ingeschakeld op de impuls gesloten lus. Update: elke 100 msec. ";
                    //category = XDFCategories.BoostProt;

                    break;
                case "Switch.ST_LimActive":
                    description = "Vermelding dat de veiligheidsschakelaar beperking functie actief is als gevolg van een te groot gebied verzoek. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch;

                    break;
                case "Switch.ST_ErrorActive":
                    description = "Vermelding dat de veiligheidsschakelaar fout functie heeft een te hoog gasklep gebied. De pedal2 idle-status = 1 en de throttle2 idle-status = 0. Na een bepaald debouncing tijd zal het systeem invoeren limphome. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch;

                    break;
                case "Switch.ST_Error":
                    description = "Vermelding dat de veiligheidsschakelaar fout functie heeft een fout te wijten aan een te hoog gasklep gebied. De ST_ErrorActive is 1 voor meer dan de debouncing tijd en het systeem zal invoeren limphome. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch;

                    break;
                case "AirMinLim.ST_MinLimAct":
                    description = "Status variabele aangeeft welke MinLim is actief (hoogste) voor dit moment. 0 = Min Load hoogste 1 = Tipout hoogste 2 = LDA functie hoogste ";
                    //category = XDFCategories.AirMinLim;

                    break;
                case "SwitchCal.PedDebouncing":
                    description = "Debouncing tijd te ontdekken dat het pedaal geeft de status inactief. Resolutie is 10 ms. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "SwitchCal.A_OffsetPoti2":
                    description = "Offset te sporen gasklep poti2 in idle. Als relatieve throttlepoti2> a_switchpoint + hysterese niet stationair is aangegeven. De a_switchpoint voor poti2 wordt berekend op dezelfde manier als voor poti1.The enige uitzondering is dat een compensatie wordt toegevoegd ter compensatie van de niet lineaire fout van de twee potis. Dat betekent gasklep poti2 geeft altijd stationair op een hoger niveau dan poti1. Resolutie is 1 mm ^ 2. ";
                    //category = XDFCategories.SwitchCal;

                    break;
                case "Switch1.ST_LimActive":
                    description = "Vermelding dat de veiligheidsschakelaar logica beperking actief is. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch1;

                    break;
                case "Switch1.ST_ErrorActive":
                    description = "Vermelding dat de veiligheidsschakelaar fout functie heeft een te hoog gasklep gebied. De pedal1 idle-status = 1 en de throttle1 idle-status = 0. Na een bepaald debouncing tijd zal het systeem invoeren limphome. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch1;

                    break;
                case "Switch1.ST_Error":
                    description = "Vermelding dat de veiligheidsschakelaar fout functie heeft een fout te wijten aan een te hoog gasklep gebied. De ST_ErrorActive is 1 voor meer dan de debouncing tijd en het systeem zal invoeren limphome. Resolutie is 1 bit. ";
                    //category = XDFCategories.Switch1;

                    break;
                case "LoadCoCal.T_ACExDynAir":
                    description = "Op grond van deze motor begint watertemperatuur extra dynamische lucht zullen compenseren voor extra powerconsumption bij de eerste AC-start. Resolutie: 1 ° C. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "LoadCoCal.ST_Loop":
                    description = "Laad compensatie airmass lus controle variabele. \"0\" - Beperk zal niet worden beschouwd. \"1\" - Open-lus. \"2\" - Sluit lus. ";
                    //category = XDFCategories.LoadCoCal;

                    break;
                case "BoostCal.ST_Enable":
                    description = "Max toegestane waarde voor I deel voor diff.pressure toezichthouder. 1 = Normaal functie 0 = aanjaagdrukregeling gehandicapten, ventiel positie konden zijn gewijzigd met variabele BoostProt.PWMCalc. ";
                    //category = XDFCategories.BoostCal;

                    break;
                case "CruiseCal.TipPercentage":
                    description = "Eerste Stap gevraagd motorkoppel is actief als TIP De gevraagde engien koppel zal Cruise.M_RoadLoad1 * CruiseCal.TipPercentage. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "TransCal3.ST_Enable":
                    description = "Schakel de afterstart verrijking factor voor deze module. \"1\" -> Verrijking ingeschakeld. \"0\" -> Verrijking uitgeschakeld. ";
                    //category = XDFCategories.TransCal3;

                    break;
                case "Cruise.CruiseStatus":
                    description = "Status van cc-switch logica. Resolutie is 1 bit. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.Set":
                    description = "\"0\" => \"set\"-schakelaar niet geactiveerd \"1\" => \"set\"-schakelaar geactiveerd ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.DecLimitActiv":
                    description = "Acceletation of vertraging drempel actief is. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "TransCal2.ST_Enable":
                    description = "Schakel de afterstart verrijking factor voor deze module. \"1\" -> Verrijking ingeschakeld. \"0\" -> Verrijking uitgeschakeld. ";
                    //category = XDFCategories.TransCal2;

                    break;
                case "InjAnglCal.ST_FixedAngle":
                    description = "Enable vaste injectie hoek wanneer brandstof wordt syncroniced. \"ON\" -> Vaste hoek. \"-\" -> Hoek lezen van matrix. ";


                    break;
                case "LambdaProt.HeatStateRear":
                    description = "De voorzijde verwarmingssysteem loopt hele 4 bepaalt met een gespecificeerde PWM en tijd, zowel calibratible voor elk land (behalve vierde). De vierde stand is altijd 100% PWM. ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "Cruise2Prot.TCSActive":
                    description = "Geeft aan dat televisiecamerasystemen functie is actief voor dan 1 sec. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise2Prot;

                    break;
                case "Cruise2Prot.ms_TCSTimer":
                    description = "Timer aan debounce TCSActive. Resolutie is 20 ms. ";
                    //category = XDFCategories.Cruise2Prot;

                    break;
                case "LambdaProt.ST_DataInit":
                    description = "Status is achterzijde sond adaption geïnitialiseerd of niet. 0 -> Niet geïnitialiseerd 1 -> Gegevens geïnitialiseerd ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "Cruise.CC_Valid":
                    description = "Informatie die alle externe cruise voorwaarde signaal zijn geldig (v_min.brake-switches, enz.). Resolutie is 10 ms. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "AftStCal1.ST_Enable":
                    description = "Schakel de afterstart verrijking factor voor deze module. \"1\" -> Verrijking ingeschakeld. \"0\" -> Verrijking uitgeschakeld. ";
                    //category = XDFCategories.AftStCal1;

                    break;
                case "Cruise.CC_592Valid":
                    description = "Info 592 als de gegevens kunnen worden geldig zijn of niet. Debouncing tijd voor de interface. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.VMinStatus1":
                    description = "\"0\" => de snelheid van het voertuig via de ABS-sensor boven de 38,6 km / h \"1\" => de snelheid van het voertuig via de ABS-sensor onder de 32,2 km / h ";
                    //category = XDFCategories.Cruise;

                    break;
                case "AftStCal2.ST_Enable":
                    description = "Schakel de afterstart verrijking factor voor deze module. \"1\" -> Verrijking ingeschakeld. \"0\" -> Verrijking uitgeschakeld. ";
                    //category = XDFCategories.AftStCal2;

                    break;
                case "TCompCal.ST_Enable":
                    description = "Schakel de temperatuur compensatie factor. \"1\" -> Temp comp ingeschakeld. \"0\" -> Temp comp uitgeschakeld. ";
                    //category = XDFCategories.TCompCal;

                    break;
                case "HotStCal1.ST_Enable":
                    description = "Schakel de afterstart verrijking factor voor deze module. \"1\" -> Verrijking ingeschakeld. \"0\" -> Verrijking uitgeschakeld. ";
                    //category = XDFCategories.HotStCal1;

                    break;
                case "Cruise.CC_Allowed339":
                    description = "Het is toegestaan op 339 zijde te activeren cruise control. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.CC_Allowed592":
                    description = "Het is toegestaan op 592 zijde te activeren cruise control. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.CC_Allowed339Old":
                    description = "Info van de lus voor de IFI's niet toegestaan op 339 zijde te activeren cruise control. Resolutie is beetje. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "LambdaCal.FiltFac1":
                    description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolutie: 1. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.FiltFac2":
                    description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolutie: 1. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "CruiseComProt.RoadTimer":
                    description = "Delay timer voor roadload berekening te M_RoadLoad 1 tot standaard roadload als rem signaal actief is. Resolutie is 0.1 sec. ";
                    //category = XDFCategories.CruiseComProt;

                    break;
                case "LambdaCal.MaxConstAdap":
                    description = "Max adaptatie voor lambda constante fase. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaCal.FiltFac3":
                    description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolutie: 1. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "LambdaAdap.LeanConst":
                    description = "Aanpassing waarde toe te voegen aan mager const. \"Slow trimmen\" (beïnvloedt de lambda nauwe lus mager const met het oog op de aanpassing van de katalysator zuurstof opslag, afhankelijk van een vergiftigd zuurstofsensor). Resolutie: 1. ";
                    //category = XDFCategories.LambdaAdap;

                    break;
                case "LambdaAdap.RichConst":
                    description = "Aanpassing waarde toe te voegen aan Rich const. \"Slow trimmen\" (beïnvloedt de lambda nauwe lus rijke const met het oog op de aanpassing van de katalysator zuurstof opslag, afhankelijk van een vergiftigd zuurstofsensor). Resolutie: 1. ";
                    //category = XDFCategories.LambdaAdap;

                    break;
                case "CruiseComProt.StatusInit":
                    description = "Informatie die de init factor was geactiveerd voor dit specifieke onderdeel toestand (StatusInit == 63 => InitFac_6_3 actief was. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseComProt;

                    break;
                case "LambdaCal.ST_Enable":
                    description = "\"1\" - Inschakelen cloosed lus regelgeving. \"0\" - Disable cloosed lus regelgeving. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "Lambda.ST_AdaptInc":
                    description = "Vermeld als constante adaptatie zijn verhoogd, afhankelijk van achteren sond. 1 - True 0 - False ";
                    //category = XDFCategories.Lambda;

                    break;
                case "Lambda.ST_Enable":
                    description = "Vermeld als brandstof cloosed lus is geactiveerd. \"ON\" => Brandstof gesloten lus geactiveerd. \"OFF\" => Brandstof gesloten lus niet geactiveerd. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "LambdaProt.ST_RampOutInt":
                    description = "Geef aan dat de lambda-integrator is speedramp omlaag naar nul. Gebruikt bij het verlaten van gesloten lus om een minder abrupte stap in brandstof. Zie ook LambdaCal.RampOutFac ";
                    //category = XDFCategories.LambdaProt;

                    break;
                case "Cruise2Prot.a_Timer":
                    description = "Timer aan debounce de ACC / DEC drempel. Resolutie is 20 ms. ";
                    //category = XDFCategories.Cruise2Prot;

                    break;
                case "Lambda.ST_ProbeTime":
                    description = "Vermeld als is toegestaan voor het meten van de tijd tussen rijk en mager-schakelaar van de sonde. 1 => toegestaan om mesure. 0 => Niet toegestaan mesure. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "Lambda.ST_GasActive":
                    description = "vlag aan te geven dat de LPG-motor draait op gas. dwz de injector bestuurders hebben aangegeven snelkoppeling en de FlashSave.ST_GasHybridAct is = 1 ";
                    //category = XDFCategories.Lambda;

                    break;
                case "LambdaCal.ST_AdapEnable":
                    description = "Enable adaption door achterste sond. (mager of rijk constante) 1 => adaptatie geactiveerd. 0 => adaptatie niet geactiveerd. ";
                    //category = XDFCategories.LambdaCal;

                    break;
                case "Lambda.ST_HWDone":
                    description = "Geeft aan wanneer O2FrontSens heeft verlaten dode regio, dwz Hardware controleren. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "Lambda.Status":
                    description = "Status byte voor gesloten lus integrator. 0 = Gesloten lus geactiveerd. 1 = Load naar hoog gedurende een bepaalde tijd. 2 = Load te laag. 3 = Load te hoog, niet kloppen. 4 = Load te hoog zijn, kloppen. 5 = Koelwaterverbruik temp te laag, gesloten gasklep. 6 = Koelwaterverbruik temp te laag, open gasklep. 7 = toerental van de motor te laag. 8 = Throttle voorbijgaand aan de gang. 9 = Throttle voorbijgaand aan de gang en lage temperatuur 10 = Brandstof gesneden. 11 = Laad te hoog en de uitlaatgassen algoritme besluit is het tijd om te verrijken. 12 = Diagnostic storing die gevolgen heeft voor de lambda cntrl. 13 = Cloosed lus niet ingeschakeld. 14 = Wachten aantal verbranding voor hardware controleren, dwz U_lambda_probe <300mV EN U_lambda_probe> 600mV 15 = Wachten totdat de motor warm is sonde. 16 = Wachten totdat aantal zelfontbrandingen zijn verleden na sonde is warm. 17 = HCI verzoek open lus. 18 = Aantal verbrandingsmotor te starten gesloten lus niet heeft doorgegeven. Alleen actief wanneer HCI geactiveerd. 19 = Lambda integrator is freezed tot 0 door SAI Lean Klem. 20 = Katalysatoractie diagnosticeren V6 controles voor de brandstof. 21. Gas hybride actief, T7 lambdacontrol gestopt. 22. Lambda integrator mag niet dalen onder 0 tijdens het starten. ";
                    //category = XDFCategories.Lambda;

                    break;
                case "Cruise2Prot.t_592Debounc":
                    description = "Timer aan debounce de cc_allowed info uit de 592. Resolutie is 20 ms. ";
                    //category = XDFCategories.Cruise2Prot;

                    break;
                case "ShiftSupport.ST_LimActi":
                    description = "schakelindicatoren steun gecompenseerd statusinformatie 0 = Houd vistuig 1 = Shift down ondersteuning (oprit omhoog) 2 = Shift ondersteuning (oprit omlaag) ";
                    //category = XDFCategories.ShiftSupport;

                    break;
                case "BFuelCal.StartMapActive":
                    description = "Activeer de startmap te verminderen zwarte rook. ";
                    //category = XDFCategories.BFuelCal;

                    break;
                case "FuelConsCal.ST_WithPurge":
                    description = "Als spoellucht adaptatie moet worden gebruikt als brandstof consumptie worden berekend. 1 = Ja 0 = Geen ";
                    //category = XDFCategories.FuelConsCal;

                    break;
                case "BFuelCal.rampFac":
                    description = "Elke verbrandingsmotor het gewicht tussen de StartMap en de gewone kaart is veranderd van een aantal procent besloten door de rampFac. De weging stopt wanneer het gewicht is 100% op de gewone kaart. ";
                    //category = XDFCategories.BFuelCal;

                    break;
                case "StartProt.ST_Started":
                    description = "Geef aan dat de motor is gestart. Deze vlag wordt gebruikt om opnieuw parameters. \"ON\" - Engine zijn begonnen. \"-\" - De motor niet gestart. ";
                    //category = XDFCategories.StartProt;

                    break;
                case "CCRatioProt.RatioNew":
                    description = "Filter uitgang voor werkelijke overbrengingsverhouding zal alleen gebruikt worden voor de omrekening van M_Wheel te M_Engine ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "KnkDetProt.X_Average":
                    description = "Aantal lezingen voor de berekening van de gemiddelde U_Knock signaal. Resolutie: 1. ";
                    //category = XDFCategories.KnkDetProt;

                    break;
                case "CCRatioProt.GearRatio":
                    description = "Actueel overbrengingsverhouding van de filter en hysterese zal alleen gebruikt worden voor de omrekening van M_Wheel aan M_Engine ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "CruiseProt.LowLimActive":
                    description = "Geeft de ondergrens van de integrator actief is. Integrator <= maximale negatieve koppel ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "BFuelProt.FuelAdjFac":
                    description = "Actueel brandstof correctiecoëfficiënt lezen van \"BFuelProt.FuelMap\". Resolutie is 0,01 (1%). ";
                    //category = XDFCategories.BFuelProt;

                    break;
                case "BFuel.StartMapActive":
                    description = "Geeft als startmap voor de vermindering van zwarte rook is actief. ";
                    //category = XDFCategories.BFuel;

                    break;
                case "SAICal.Testmode":
                    description = "0: HCI functie uitgeschakeld 1: Normale HCI mode 2: Stel allow_start op \"1\", dan terug naar de modus 1. Resolutie is 1 kam. ";
                    //category = XDFCategories.SAICal;

                    break;
                case "CCProt.UnderSchedEnable":
                    description = "Activeert de functie Volgens schema Ontkoppel. Resolutie is 1 bit. ";
                    //category = XDFCategories.CCProt;

                    break;
                case "CCProt.NormalMode":
                    description = "Activeert de normale cruise-modus. Resolutie is 1 bit. ";
                    //category = XDFCategories.CCProt;

                    break;
                case "Cruise.ST_ResumeMode":
                    description = "Deze vlag is ingesteld wanneer TAP DOWN / Resume-knop wordt geactiveerd wanneer de cruise control is ingeschakeld, zijn niet actief en geheugen set (dwz Cruise.CruiseStatus == 3) en zullen tot het verschil tussen v_Actual en v_Memory is minder dan CruiseCal.v_NormalMode. 0 => geen Resume mode 1 => Hervatten Mode ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.GearRatio":
                    description = "Gekopieerd versnelling gedeeld door 10, en beperkt tot 1 of 255. Resolutie: 1. ";
                    //category = XDFCategories.Cruise;

                    break;
                case "Cruise.VMinStatus2":
                    description = "\"0\" => de snelheid van het voertuig via CAN bovenstaande 38.6 km / h \"1\" => de snelheid van het voertuig via CAN hieronder 32,2 km / h ";
                    //category = XDFCategories.Cruise;

                    break;
                case "CCProt.USDFunctionActive":
                    description = "De krachtens schema Ontkoppel functie actief is en zal het uitschakelen van de cruise. Resolutie is 1 bit. ";
                    //category = XDFCategories.CCProt;

                    break;
                case "AftStProt1.ST_Finished":
                    description = "geven aan dat de verrijking is voltooid. \"1\" -> Verrijking klaar. \"0\" -> Verrijking niet klaar. ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "AftStProt1.DecrDelay":
                    description = "werkelijke aantal zelfontbrandingen tussen elke decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "AftStProt1.ST_Start":
                    description = "geven aan dat de verrijking van start moet gaan. ";
                    //category = XDFCategories.AftStProt1;

                    break;
                case "CCRatioProt.UpDirection":
                    description = "Geeft aan dat de versnelling wil wijzigen in maximaal direction.The verandering is meer dan de hysteresis. ";
                    //category = XDFCategories.CCRatioProt;

                    break;
                case "AftStProt2.ST_Finished":
                    description = "geven aan dat de verrijking is voltooid. \"1\" -> Verrijking klaar. \"0\" -> Verrijking niet klaar. ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "AftStProt2.DecrDelay":
                    description = "werkelijke aantal zelfontbrandingen tussen elke decrement van de verrijking factor. Resolutie is 1 verbranding. ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "AftStProt2.ST_Start":
                    description = "geven aan dat de verrijking van start moet gaan. ";
                    //category = XDFCategories.AftStProt2;

                    break;
                case "IgnIdleCal.ST_Enable":
                    description = "Schakelt stationair ontsteking functie. ";
                    //category = XDFCategories.IgnIdleCal;

                    break;
                case "IgnStartCal.ST_Mode":
                    description = "Vermeld bij het begin ontbranding zouden zijn gebruikt. ";
                    //category = XDFCategories.IgnStartCal;

                    break;
                case "BlockPoti2.Timer":
                    description = "Timer voor stationair blok adaption poti2. Zal worden gestart als de vraag gasklep bit = 0. Resolutie is 10 ms / bit. Interval is 10 ms. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "BlockPoti2.Timer1":
                    description = "Debouncing timer voor stationair blok adaption poti2. Zal worden gestart als powerstage geactiveerd. Resolutie is 10 ms / bit. Interval is 10 ms. ";
                    //category = XDFCategories.BlockPoti2;

                    break;
                case "IgnNormCal.ST_Enable":
                    description = "Schakelt normale ontsteking kaart. ";


                    break;
                case "Block2.ThrottleON":
                    description = "Status voor gasklep ON / OFF-logica. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.Block2;

                    break;
                case "Block.Timer":
                    description = "Timer voor stationair blok adaption. Zal worden gestart als de vraag gasklep bit = 0. Resolutie is 10 ms / bit. Interval is 10 ms. ";
                    //category = XDFCategories.Block;

                    break;
                case "IgnLOffProt.ST_FirstTime":
                    description = "Ramp ontsteking hoek kaart waarde eerste keer na de motor start. ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "Block.Timer1":
                    description = "Debouncing timer voor stationair blok adaption. Zal worden gestart als powerstage geactiveerd. Resolutie is 10 ms / bit. Interval is 10 ms. ";
                    //category = XDFCategories.Block;

                    break;
                case "Block2.FCOActive":
                    description = "Status voor brandstof-cut-off-logica om de brandstof. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.Block2;

                    break;
                case "Block.Timer2":
                    description = "Debouncing timer voor stationair blok adaption. Zal worden gebruikt voor het openen van de gasklep opnieuw vóór het uitschakelen na aanpassing aan de macht af te voorkomen dat een steekplaats gasklep. Resolutie is 10 ms / bit. Interval is 10 ms. ";
                    //category = XDFCategories.Block;

                    break;
                case "AreaAdap.BlockStatus":
                    description = "Status voor aanpassing van de mechanische blok van de gasklep Poti. Resolutie is 1 bit. Interval is macht en macht OP UIT. ";
                    //category = XDFCategories.AreaAdap;

                    break;
                case "Ign.IdleRampFinished":
                    description = "Geef aan dat fuelcut is toegestaan. Dit gebeurt indien de oprit niet afneemt en stationair ontsteking actief is. ";
                    //category = XDFCategories.Ign;

                    break;
                case "Ign.ActiveMap":
                    description = "Geef aan welke absolute ontsteking kaart geactiveerd is: 'S' - Start ontsteking 'N' - Normaal warme kaart 'ik' - Idle kaart \"G\" - Gas kaart 0 - geen absolute IGN geactiveerd ";
                    //category = XDFCategories.Ign;

                    break;
                case "PedalProt.PedalNotInIdle":
                    description = "Geeft als pedaal is i stationair of niet. Resolutie is beetje. ";
                    //category = XDFCategories.PedalProt;

                    break;
                case "AreaAdap.Pot2BlockStatus":
                    description = "Status voor aanpassing van de mechanische blok van de gasklep poti2. Resolutie is 1 bit. Interval is macht en macht OP UIT. ";
                    //category = XDFCategories.AreaAdap;

                    break;
                case "IgnProt.LastActiveMap":
                    description = "Geef aan welke absolute ontsteking kaart is geactiveerd laatste ontsteking. Deze gegevens worden gebruikt om reactieprijs ontsteking afrijkleppen. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "IgnProt.RampDir":
                    description = "Toont oprit richting en als platform werkt. ";
                    //category = XDFCategories.IgnProt;

                    break;
                case "MAFProt.ST_Transient":
                    description = "Flag blijkt of het om een rpm voorbijgaand. Indien 3 lezingen in een rij is groter (of kleiner) dan de vorige lezing, dan is deze vlag is ingesteld. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.ST_PosFuelTrans":
                    description = "Flag blijkt of het om een positieve transiënte voor bevriezing van gewicht factor. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "IgnLOffCal.ST_Enable":
                    description = "Enable temperatuur gecompenseerd ontsteking. \"ON\" - Ingeschakeld. \"-\" - Gehandicapten. ";


                    break;
                case "IgnLOffCal.No10msDelay":
                    description = "Aantal 20ms perioden duren voordat m_request wordt gekopieerd naar m_requestLO. Resolutie is 20ms. ";


                    break;
                case "MAFProt.ST_NegFuelTrans":
                    description = "Flag blijkt of het om een negatieve transiënte voor bevriezing van gewicht factor. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "KnkDet.ST_ClearIgnOff":
                    description = "Vermeld of ontsteking compensaties moeten worden goedgekeurd met trapondersteuning vrijgelaten wegens domino verwijzing adaption. \"ON\" - Duidelijke ontsteking gecompenseerd. \"-\" - Geen actie. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDet;

                    break;
                case "MAFProt.ST_NegTrans":
                    description = "Flag blijkt of het om een negatieve voorbijgaand, inlaatspruitstuk druk afneemt. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "KnkDet.ST_Knock":
                    description = "Vermeld als motor is kloppen op een cilinder. \"ON\" - Engine is kloppen op een of meer cilinders. \"-\" - De motor is niet kloppen op elke cilinder. Interval is Every verbranding. ";
                    //category = XDFCategories.KnkDet;

                    break;
                case "KnkSoundRedCal.ST_Enable":
                    description = "Activatie van domino geluid functie. ";
                    //category = XDFCategories.KnkSoundRedCal;

                    break;
                case "MAFProt.ST_PosTrans":
                    description = "Flag blijkt of het om een positieve voorbijgaand, inlaatspruitstuk druk wordt steeds groter. Resolutie: 1. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFProt.ConstT_Engine":
                    description = "Constant veredelingsprodukten voor koelwater temp in Load berekening voor ontslagen airmass flow functie. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolutie is 0,01. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "IgnJerkProt.ST_Activated":
                    description = "Als ontsteking anti eikel Funktion zijn geactiveerd ";
                    //category = XDFCategories.IgnJerkProt;

                    break;
                case "IgnJerkProt.ST_PedalCond":
                    description = "Als ontsteking anti eikel Funktion zijn toegestaan op grond Out.X_AccPedal. 0 - Niet toegestaan 1 - Toegestaan ";
                    //category = XDFCategories.IgnJerkProt;

                    break;
                case "IgnLOffProt.no_10ms":
                    description = "Aantal 10ms tijdvakken die zijn verstreken sinds de laatste keer m_requestLO is bijgewerkt ";
                    //category = XDFCategories.IgnLOffProt;

                    break;
                case "MAFCal.X_IncrStepLim":
                    description = "Aantal toenemende aflezingen van t_tdc_tdc in een rij om een negatieve motortoerental voorbijgaand. Gebruikt voor shoosing rpm filtertype voor Q tot m conv. Resolutie: 1. ";


                    break;
                case "IgnTempCal.ST_Enable":
                    description = "Enable temperatuur gecompenseerd ontsteking. \"ON\" - Ingeschakeld. \"-\" - Gehandicapten. ";
                    //category = XDFCategories.IgnTempCal;

                    break;
                case "MAFProt.ConstT_AirInlet":
                    description = "Constant compenseren voor de inlaatlucht temp in Load berekening voor ontslagen airmass flow functie. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolutie is 0,01. ";
                    //category = XDFCategories.MAFProt;

                    break;
                case "MAFCal.X_DecrStepLim":
                    description = "Aantal afnemende aflezingen van t_tdc_tdc in een rij om een positief motortoerental voorbijgaand. Gebruikt voor shoosing rpm filtertype voor Q tot m conv. Resolutie: 1. ";


                    break;
                case "IgnKnkCal.ST_Enable":
                    description = "Enable domino ontsteking. \"ON\" - Knock contactslot is ingeschakeld. \"-\" - Knock contactslot is uitgeschakeld. ";


                    break;
                case "PurgeCal.ST_PurgeEnable":
                    description = "Purge ingeschakeld of niet. ";
                    //category = XDFCategories.PurgeCal;

                    break;
                case "PwmLimitCal.ms_Decrement":
                    description = "De timer \"PwmLimit.ms_Timer\" hierboven is verlaagd met deze waarde elke 10 ms wanneer de PWM beperking op grond van 100% PWM bij het openen of sluiten van de richting is niet besteld. Dit ijkgegevens wordt gebruikt voor simulatie van de temperatuur daling in de gasklep huis. Voorbeeld: Als ms_Decrement is 2, de koeling tijd wordt 5 keer langer dan de verwarming tijd. Resolutie is 1 ms. ";
                    //category = XDFCategories.PwmLimitCal;

                    break;
                case "KnkFuel.ST_EnableLam":
                    description = "Vermeld of stoot brandstof allowes lambda controle. worden uitgeschakeld. \"ON\" - Lambda Ingeschakeld. \"-\" - Lambda handicap. ";
                    //category = XDFCategories.KnkFuel;

                    break;
                case "FCutCal.ST_CutOnLowGear":
                    description = "Enable fuelcut op de lage versnellingen. \"1\" - Fuelcut wil honingbij actief op de lage versnellingen. \"0\" - Fuelcut zal niet honingbij geactiveerd indien de werkelijke versnelling hoger is dan de verhouding limiet (FCutCal.RatioLim), en zo een hogere versnelling wordt gedetecteerd. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "FCutProt.ST_AirmassGuard":
                    description = "Vermeld als airmass zijn bovenstaande limiet tijdens een langere periode. ";
                    //category = XDFCategories.FCutProt;

                    break;
                case "FCutCal.ST_Enable":
                    description = "Schakel de fuelcut functie. \"1\" - fuelcut functie ingeschakeld. \"0\" - fuelcut functie uitgeschakeld. ";
                    //category = XDFCategories.FCutCal;

                    break;
                case "PwmLimit.To592LimitValue":
                    description = "tranfers PWM de vereiste limiet voor de 592. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.PwmLimit;

                    break;
                case "PwmLimit.BlockAdapActive":
                    description = "Status van blockadaption overgedragen aan PWMLimit Master. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.PwmLimit;

                    break;
                case "PwmLimit.BlockAdapLimit":
                    description = "Beperking waarde voor een PWM-signaal van positie, indien blockadaption is actief. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.PwmLimit;

                    break;
                case "PwmLimit.Status":
                    description = "Geeft de status van de PWM-beperking functie. Resolutie is 1 bit. Interval is 10 ms. ";
                    //category = XDFCategories.PwmLimit;

                    break;
                case "KnkFuelCal.ST_RampCalc":
                    description = "Soort berekening voor brandstof verrijking. ST_RampFac == 1 ==> IgnKnk.fi_Offset [Cyl] + Ign.fi_OtherOff-KnkFuelProt.fi_MaxOffset Factor == KnkFuelProt.fi_MaxOff-KnkFuelProt.fi_MaxOffset ST_RampFac == 0 ==> IgnKnk.fi_Offset [Cyl] + Ign.fi_OtherOff Factor == KnkFuelProt.fi_MaxOff ";


                    break;
                case "MapChk.ST_Error":
                    description = "Status wat aangeeft dat de checksum berekend op ijkgegevens die stijging airmass vraag is defect of niet. 0 = checksum OK of niet gecontroleerd. 1 = controlesom defect (geheugen fout of hardware probleem) ";
                    //category = XDFCategories.MapChk;

                    break;
                case "MapChkCal.ST_Enable":
                    description = "Status constante opgave als controlesom wordt berekend op de kalibreringsgegevens die stijging airmass vraag. ";
                    //category = XDFCategories.MapChkCal;

                    break;
                case "Trans.ST_Active":
                    description = "Vermeld als brandstof transiënten zijn activiteiten. \"ON\" - transiënten actieve \"-\" - transiënten niet actief ";
                    //category = XDFCategories.Trans;

                    break;
                case "CruiseComProt.Status":
                    description = "Status informatie voor sub staat als een van de cruise knoppen actief is. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseComProt;

                    break;
                case "MaxVehicleSpeed.Status":
                    description = "Aangezochte status van de maximale snelheid van het voertuig beperking. Resolutie is \"0\" => niet actief is. ";
                    //category = XDFCategories.MaxVehicleSpeed;

                    break;
                case "TransCal.ST_Enable":
                    description = "inschakelen of uitschakelen brandstof transiënte behandeling. ";
                    //category = XDFCategories.TransCal;

                    break;
                case "FCut.ST_FuelCut":
                    description = "Actueel fuelcut status. \"ON\" - Fuelcut op een of meer cilinders. \"-\" - Nr. fuelcut op elke cilinder. ";
                    //category = XDFCategories.FCut;

                    break;
                case "FCut.CutStatus":
                    description = "Brandstof gesneden status, geeft aan wat de oorzaak van het fuelcut: 0 - Geen fuelcut 1 - Ontsteking sleutel uitgeschakeld 2 - Acc pedaal ingedrukt tijdens het starten 3 - Motortoerental bovenstaande limiet 4 - Throttle blok adaption actief voor de eerste keer 5 -- 6 -- Airmass bewaker (druk bewaker) 7 - immobilisatiesysteem code niet correct 8 - Huidige de H-brug naar hoog tijdens gasklep limphome 9 - Koppel de hoge tijdens gasklep limphome 10 - Niet gebruikt 11 - Ingrijpen bescherming van de gasklep 12 - Fout op alle ontsteking trigg uitgangen 13 - ECU niet correct geprogrammeerd 14 - tot hoge toeren in Throttle pechstrategie, pedaal poti schuld 15 - Koppel Master brandstof gesneden verzoek 16 - TCM verzoeken fuelcut te glad schakelindicatoren 20 - Toepassing voorwaarden voor brandstof gesneden: Zie \"HELP FUEL_CUT\" menu. ";
                    //category = XDFCategories.FCut;

                    break;
                case "TransCal.Delay2":
                    description = "Vergelijk waarde in m_request buffer (oud m_request). ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.ST_DecNoLim":
                    description = "inschakelen of uitschakelen uper limiet voor negatieve brandstof voorbijgaande behandeling. 0 == Uper limiet voor ingeschakeld 1 == Uper limiet voor gehandicapten ";
                    //category = XDFCategories.TransCal;

                    break;
                case "TransCal.Delay1":
                    description = "Start waarde in m_request buffer (werkelijke m_request). ";
                    //category = XDFCategories.TransCal;

                    break;
                case "PedalCal.ms_UpDebounce":
                    description = "Debouncing tijd voor opwaartse aanpassing. Resolutie is 20 ms. ";
                    //category = XDFCategories.PedalCal;

                    break;
                case "AdpFuelProt.ST_Window":
                    description = "Vermeld als voorwaarden voor het toevoegen of Mul venster zijn voldaan. ";
                    //category = XDFCategories.AdpFuelProt;

                    break;
                case "AdpPrgProt.State":
                    description = "Staat van adaptatie / purge meester. 1 Tot eerste Mul. aanpassing is voltooid. Purge is ingeschakeld, maar het is uitgeschakeld als Mul. voorwaarden is voldaan. Start tijd voor staat 2 wordt geïnitialiseerd voordat Staat 2 is geactiveerd. 2 Tot spoellucht tijd is voorbij. Purge is ingeschakeld, maar het zou kunnen worden uitgeschakeld als toevoegen. voorwaarden zijn fullfield en eerste toevoegen. adaptatie niet hebben gedaan. 3 Purge is ingeschakeld totdat Mul. of toevoegen. voorwaarden wordt voldaan. Start tijd voor staat 4 wordt geïnitialiseerd voordat staat 4 wordt geactiveerd. 4 Tot adaption tijd is voorbij. Purge is uitgeschakeld, maar het is mogelijk indien een van beide toevoegen. of Mul. voorwaarden niet zijn voldaan. Wanneer adaption tijd is voorbij, de staat is ingesteld op 2. ";
                    //category = XDFCategories.AdpPrgProt;

                    break;
                case "AdpPrgProt.ST_AdaptAllow":
                    description = "Vermeld uit kapitein als brandstof adaptatie is toegestaan te draaien of niet. ";
                    //category = XDFCategories.AdpPrgProt;

                    break;
                case "PedalCal.AD_Increment":
                    description = "Bedrag van de bits die worden toegevoegd aan het pedaal blokkeren indien de logica is ingeschakeld. Resolutie is beetje. ";
                    //category = XDFCategories.PedalCal;

                    break;
                case "PedalCal.AD_Decrement":
                    description = "Bedrag van de bits die worden afgetrokken van het pedaal blok als de logica is ingeschakeld. Resolutie is beetje. ";
                    //category = XDFCategories.PedalCal;

                    break;
                case "PedalCal.AD_CaptureHyst":
                    description = "aangegeven een reeks rond een vastgelegde waarde wanneer het mogelijk is om te zoeken naar een nieuwe pedaal blok. Resolutie is beetje. ";
                    //category = XDFCategories.PedalCal;

                    break;
                case "PedalCal.ms_DownDebounce":
                    description = "Debouncing tijd voor de aanpassing. Resolutie is 20 ms. ";
                    //category = XDFCategories.PedalCal;

                    break;
                case "AdpFuel.ST_DoneMul":
                    description = "Vermeld interne aanpassing van de brandstofprijzen als eerste multiplactive brandstof adaption klaar bent of niet. ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.ST_DoneAdd":
                    description = "Vermeld interne aanpassing van de brandstofprijzen als eerste additative brandstof adaption klaar bent of niet. ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.AddFAdapRampDone":
                    description = "Indien de fuelfactor is aangepast aan de adaptatie waarde. (AdpFuelAdap.AddFuelAdap = AdapFuelProt.AddFuelAdap) ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.ST_FuelAdpAct":
                    description = "Vermeld wanneer brandstof adaptatie is actief. ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.MulFAdapRampDone":
                    description = "Indien de fuelfactor is aangepast aan de adaptatie waarde. (AdpFuelAdap.MulFuelAdap = AdapFuelProt.MulFuelAdap) ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.ST_DiagDoneMul":
                    description = "Vermeld voor de lange termijn fueltrim diag als eerste multiplactive brandstof adaptatie is voltooid of niet. ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "AdpFuel.ST_DiagDoneAdd":
                    description = "Vermeld voor de lange termijn fueltrim diag als eerste additieve brandstof adaptatie is voltooid of niet. ";
                    //category = XDFCategories.AdpFuel;

                    break;
                case "CruiseProt.OnDebouncing":
                    description = "Debouncing timer voor \"Aan / Uit\"-schakelaar van de cruise control switches. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.ComFac":
                    description = "Comfort factor om de a_Request1 als je bent in staat 4,5,6,7. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CatDiagCal.Ox1DutLoLim":
                    description = "Geeft de minimale waarde van het recht cyclus. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CruiseProt.TipTimer":
                    description = "Timer voor \"tip\"-functie te beperken tip-functie aan de gekalibreerd tijd. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.ResDebouncing":
                    description = "Debouncing timer voor \"res\"-schakelaar van de cruise control switches. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseCal.v_LimRampNeg":
                    description = "Hellingbaan naar com uit normale v_limit aan de werkelijke v_Limit indien de werkelijke hoger is dan weer v_limit. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.ms_IntegrDelay":
                    description = "Timer aan debounce de switchpoint aan de v_limit pos tafel als de integrator is max negatieve koppel. Resolutie is 100 ms. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CatDiagCal.Ox1DutHiLim":
                    description = "Geeft de maximale waarde van het recht cyclus. ";
                    //category = XDFCategories.CatDiagCal;

                    break;
                case "CruiseProt.v_DeltaFactor":
                    description = "Factor dalen a_request0 te a_Request1 afhankelijk van v_Limit en v_deviation = 0. Resolutie is 1%. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseCal.v_LimRampPos":
                    description = "Hellingbaan naar com uit normale v_limit aan de werkelijke v_Limit indien de werkelijke lager is dan weer v_limit. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.v_NormalMode":
                    description = "Drempelbedrag waar normale cruise-modus wordt geactiveerd Als v_Actual is> v_memory - v_NormamMode of v_Actual is <v_memory + v_NormalMode de normale modus wordt geactiveerd. Resolutie is 0,1 km / h. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "KnockDiagCal.nrOfCombust":
                    description = "Het aantal opeenvolgende zelfontbrandingen dat de In.U_KnockDiag moeten worden hieronder limiet voor het melden van fouten. ";
                    //category = XDFCategories.KnockDiagCal;

                    break;
                case "CruiseProt.ABCCheckDone":
                    description = "ABC controle is verricht. Deze bit wordt gereset in cruisestatus = 1 en terwijl de motor cranking. Resolutie is \"0\" => Controleren is niet gebeurd. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.SwitchViaTip":
                    description = "Status informatie die de cruise control is uitgeschakeld via de tip. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.FCOAllowed":
                    description = "Info van cruise control aan allowe brandstof-cut-operatie, zelfs indien cc_airmass> 0 is, maar minder dan m_nLow. Resolutie is \"0\" => niet toegestaan. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.OnTransition":
                    description = "Overgangsperiode voor de niet debounced schakelaars \"0\" => schakelaar is uitgeschakeld voor \"1\" => switch was vóór ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.OffTransition":
                    description = "Overgangsperiode voor de niet debounced schakelaars \"0\" => schakelaar is uitgeschakeld voor \"1\" => switch was vóór ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SAIDiagCal.CheckPedal":
                    description = "Controleer of pedaal relased in de hoofd-en intrusief test ";
                    //category = XDFCategories.SAIDiagCal;

                    break;
                case "CruiseProt.GearStatus":
                    description = "Global informatie, die versnelling wordt gekozen gegenereerd voor zowel automatische en handgeschakelde auto \"0\" => geen versnelling in \"1\" => versnelling is in ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.ms_TapUpTimer":
                    description = "Zolang de timer CruiseProt.ms_TapUpTimer is dan CruiseCal.TapUpTimer v_Request = v_Actual anders v_Request = MaxVehicCal.v_MaxSpeed. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.ms_SetTimer":
                    description = "Zolang de timer CruiseProt.ms_SetTimer is dan CruiseCal.SetTimer v_Request = v_Actual anders v_Request = MaxVehicCal.v_MaxSpeed. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.SetDebouncing":
                    description = "Debouncing timer voor \"set\"-schakelaar van de cruise control switches. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.TipDebouncing":
                    description = "Debouncing timer voor \"tip\"-schakelaar van de cruise control switches. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.MaxSpeedVal2":
                    description = "Status informatie die maximumsnelheid is geldig terwijl cruise is niet actief. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.BrakBefCruise":
                    description = "Status informatie die de brakelight switch alsmede de brakeclutch schakelaar is geactiveerd. Voordat u de mogelijkheid om deze te activeren cruise control de \"Brake voordat cruise\" test moet worden doorgegeven. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.MaxSpeedValid":
                    description = "Status informatie die maximumsnelheid is geldig terwijl cruise is actief en bestuurder overschrijft de cruise airmass. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.CruiseValid":
                    description = "Status informatie die cruise status cruise is toegestaan en een geldige berekening is gedaan dat betekent dat de cc_50 en cc_100 bestand moeten worden opgeroepen ten minste een keer. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseCal.Status":
                    description = "Status voor cruise-controller \"0\" => niet actief is \"1\" => open lus \"2\" => gesloten lus. Resolutie is beetje. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "MissfProt.lastCyl":
                    description = "Cyl nr onthouden van vorig ontdekt ontstekingsfouten om gebruikt te worden in ontstekingsfouten counter kaarten. Interval is per verbranden. ";
                    //category = XDFCategories.MissfProt;

                    break;
                case "Missf.ST_Det2HighCount":
                    description = "Geeft aan diagnos dat voor SyncCal.t_DetectLimit nr van zelfontbrandingen heeft het detecteren signaal 2 is constant hoog. Resolutie: 1. ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.ST_Det1HighCount":
                    description = "Geeft aan diagnos dat voor SyncCal.t_DetectLimit nr van zelfontbrandingen heeft het detecteren signaal 1 is constant hoog. Resolutie: 1. ";
                    //category = XDFCategories.Missf;

                    break;
                case "CruiseCal.TapUpTimer":
                    description = "Timer verschillen v_Request = v_Actual of v_MaxSpeed als de set knop wordt ingedrukt en cruise was actief (TapUp). Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "CruiseCal.SetTimer":
                    description = "Timer verschillen v_Request = v_Actual of v_MaxSpeed als de set knop wordt ingedrukt en cruise was niet actief (instellen). Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "MissfCal.ACFilterON":
                    description = "Schakelaar aan / uit ontstekingsfouten AC filter ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "Missf.misfStarted":
                    description = "Deze vlag geeft aan wanneer ontstekingsfouten detectie begint. De criteria voor dit tpm boven de 650. Schaalinterval wordt Achtergrond (100ms). ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.startDelayDone":
                    description = "De vertraging in zelfontbrandingen na de start, voor het detecteren signaal wordt geëvalueerd en de transiënte filter is ingeschakeld, is voltooid. Schaalinterval wordt Achtergrond (100ms). ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.whichFilterActive":
                    description = "Geeft aan welke filter actief is. Indien meerdere filters actief zijn op hetzelfde moment de eerste actieve filter wordt weergegeven. Detecteren waarde = 1 PAirInletDiff = 2 Transiënte = 3 PurgeDiag = 4 lage belasting = 5 FuelCut = 6 Starttemp = 7 Hi hoogte = 8 Loadlim na FCut = 9 AC op = 10 Pedal remschoen op idle = 11 Inside modus start = 12 RPMDiff actieve oppervlak = 13 ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.ST_FTPActive":
                    description = "Geeft als de belasting en toerental binnen cal grenzen. Schaalinterval wordt Achtergrond. ";
                    //category = XDFCategories.Missf;

                    break;
                case "Missf.DetectionActive":
                    description = "Detectie van ontstekingsfouten actieve Interval is Achtergrond (100ms). ";
                    //category = XDFCategories.Missf;

                    break;
                case "OBDCal.LOBDEnabled":
                    description = "Dit bit activeert RIJ (RestOfWorld) toevoeging voor OBD2-tests bij de set. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "CruiseCal.ms_TCSTimer":
                    description = "Timer aan debounce tcs_active terwijl cruise is actief als TCS is actief langer dan de gespecificeerde tijd cruise zal worden uitgeschakeld. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "OBDCal.StopPlotWhenFault":
                    description = "Met deze bit set, de standaard perceel zal worden stopgezet na 200 ms vertraging wanneer een diagnose rapporten schuld. ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "MissfCal.O2AdjMFErrLim":
                    description = "Het aantal ontstekingsfouten / blok dat verhoging van de O2-sens achterste stelvoetje blok teller. Resolutie: 1. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MissfCal.TorqueLowLim":
                    description = "Als Out.M_Engine lager is dan deze lim, de ontstekingsfouten aanwijzingen zijn gefilterd. Resolutie is 1 Nm. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "OBDCal.MILEnabled":
                    description = "Met deze bit set, diagnose zal controle MIL ";
                    //category = XDFCategories.OBDCal;

                    break;
                case "CruiseCal.LoopAmount":
                    description = "Bedrag van de lus aan maatregelen die de werkelijke versnelling. Resolutie is 1 bit. ";
                    //category = XDFCategories.CruiseCal;

                    break;
                case "MissfCal.O2AdjMFOKLim":
                    description = "Het aantal ontstekingsfouten / blok dat de daling van de O2 sens achterste stelvoetje blok teller. Resolutie: 1. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "MissfCal.O2AdjBlockOKLim":
                    description = "Het aantal blok er MissfAdap.MissfTotCntCat <MissfCal.O2AdjMFOKLim en de gewone set kalibratieset voor O2 sens achterste stelvoetje restablished. Resolutie: 1. ";
                    //category = XDFCategories.MissfCal;

                    break;
                case "CruiseProt.On":
                    description = "\"0\" => \"aan\"-schakelaar niet geactiveerd \"1\" => \"aan\"-schakelaar geactiveerd ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "OBDAdap.TCS_ErrCnt":
                    description = "Totaal aantal ongefilterde devicedriver faultindications op televisiecamerasystemen knooppunt De teller verhogen elk moment na de devicedriver hebben aangegeven \"geen schuld\". ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.triggerVarNr":
                    description = "Geeft aan welke variabele in het plott, geladen in de ECU, dat moet worden gebruikt om reactieprijs op. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.triggerPosFlank":
                    description = "Geeft aan wanneer de trigger moet plaatsvinden op een positieve of negatieve flank van de gekozen variabele. ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "CruiseProt.VMaxStatus1":
                    description = "\"0\" => de snelheid van het voertuig via de ABS-sensor boven de 227 km / h \"1\" => de snelheid van het voertuig via de ABS-sensor onder de 220 km / h ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.Off":
                    description = "\"0\" => \"uit\"-schakelaar niet geactiveerd \"1\" => \"uit\"-schakelaar geactiveerd ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "OBDAdap.SAIIntrResult":
                    description = "Het laatste resultaat van het Intrusive test 1: OK 0: Niet ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "OBDAdap.BoostFault":
                    description = "Indien aanjaagdrukregeling diagnosticeren meldt een fout, wordt informatie over die conditionthat veroorzaakt fout wordt opgeslagen. Dit wordt gebruikt om te bepalen of de diagnose kunnen rapporteren ok.For voorbeeld, wanneer versterking is in een gesloten lus en fout is gemeld, bit 0 isset in deze variabele en het zal niet reseted voordat voorwaarden voor ok met boostin gesloten lus actief is. Ondertussen geen ok verslag zal worden made.0 = Nofaultbit 0 = Fout bij de versterking is in gesloten loopbit 1 = Fout bij gaspedaal wordt in een gesloten lus ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "CruiseProt.VMaxStatus2":
                    description = "\"0\" => de snelheid van het voertuig via CAN boven 227 km / h \"1\" => de snelheid van het voertuig via CAN hieronder 220 km / h ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SAIProt.ST_SAIPumpPh1":
                    description = "vlag aan te geven dat de pomp wordt gestart in de reguliere SAI controle. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.ST_SAIPumpPh2":
                    description = "Na HCI is voltooid de pomp houden voor SAICal.N_SAIPumpDelay kam. Deze vlag aangeeft wanneer de pomp wordt in deze toestand. Deze vertraging werd ingevoerd om te voorkomen dat rijke spikes na HCI brandstof is uitgeschakeld. ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.buff_init":
                    description = "Plaatselijke Variabel om gebruikt te worden in de gemiddelde calc van SAIProt.m_loadave ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.BuffPoint":
                    description = "Plaatselijke Variabel om gebruikt te worden in de gemiddelde calc van SAIProt.m_loadave ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "SAIProt.SAI_ActThisCycl":
                    description = "Vermeld of HCI actief is geweest deze rijcyclus ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "CruiseProt.CCLampDelay":
                    description = "Counter voor vertraging als cruise lamp wordt uitgeschakeld terwijl TIP knop werd gebruikt. Resolutie is 20 ms. ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "SAIProt.ST_ReCalcBefSt":
                    description = "vlag aan te geven aan recalc HCI wanneer de mchakelaar is uitgeschakeld voor \"1\" => switch was vóór ";
                    //category = XDFCategories.SAIProt;

                    break;
                case "OBDAdap.MIU_ErrCnt":
                    description = "Totaal aantal ongefilterde devicedriver faultindications op MIU knooppunt De teller verhogen elk moment na de devicedriver hebben aangegeven \"geen schuld\". ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "CruiseProt.TipTransition":
                    description = "\"0\" => schakelaar is uitgeschakeld voor \"1\" => switch was vóór ";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "CruiseProt.ResTransition":
                    description = "\"0\" => schakelaar is uitgeschakeld voor \"1\" => switch was ingeschakeld voor";
                    //category = XDFCategories.CruiseProt;

                    break;
                case "OBDAdap.TCM_ErrCnt":
                    description = "Totaal aantal ongefilterde devicedriver faultindications op TCM knooppunt De teller verhogen elk moment na de devicedriver hebben aangegeven \"geen schuld\". ";
                    //category = XDFCategories.OBDAdap;

                    break;
                case "KnkSoundRedCal.fi_OffsMap":
                    description = " Knocksound reduction ignition offset map. Used to reduce knock sound with adjustment from Tech2. By adjusting the FlashSave.KnkSoundRedFac is the ignition offset from this map used. This offset is treated like a temperature offset and will affect the fuel and maximum air limitation. ]. Resolutie is 0.1 °";
                    //

                    break;
                case "MissfCal.CatOverheatFactor":
                    description = " Weight factors for increasing CatOverheatCnt. The map position depend on enginespeed and inlet manifold pressure. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkFuelCal.fi_MapMaxOffset":
                    description = " Max ignition retard for no fuel enrichment. RANGE : -55.0 - 0 RESOLUTION : 0.1? ] ";
                    //

                    break;
                case "MAFCal.corr_AirFromp":
                    description = " Correction factor in calculation of airmass from p_AirInlet. Used in formula: m = p * T_komp * Constant * Correction ] ";
                    //

                    break;
                case "AmosCal":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "TEngDiagCal.m_AirperDegA":
                    description = " Correction of m_air to build limphome curve for watertemp on automatic cars. Is built from y-axel combustion and x-axel T_AirInlet. RANGE : 0 - 65000 UNIT : C RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "TEngDiagCal.m_AirperDegM":
                    description = " Correction of m_air to build limphome curve for watertemp on manual cars. Is built from y-axel combustion and x-axel T_AirInlet. RANGE : 0 - 65000 UNIT : C RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "MAFCal.WeightConstFuelMap":
                    description = " Matrix including weighting constant for weighting airflow read from HFM (filtrated) and airflow calculated from inlet manifold pressure to calculate MAF.m_AirInletFuel. Formula: 100 * ( HFM_value - Press_value ) +/- Const Filt_value = Press_value + ------------------------------------------- Const if Press_value > HFM_value -> - Const if Press_value <= HFM_value -> + Const Filt_value -> MAF.m_AirInletFuel HFM_value -> Filtrated local m_AirInlet Press_value -> MAFProt.m_LoadpAirInlet Const -> MAFProt.HFMWeightCoef ";
                    //

                    break;
                case "CatDiagCal.HiMapOx1CycleTime":
                    description = " Map for retrieving hi limit of cycle time depending on load and rpm. RANGE : 0 - 5000 ] ";
                    //

                    break;
                case "CatDiagLevCal.ErrorLim":
                    description = " If the evalvalue is above this limit fetched from this matrix, error is reported. The limit depend on the average load during the second phase of the diagnose and the catalyst temp. ] ";
                    //

                    break;
                case "CatModCal.T_SteadyState":
                    description = " The catalyst temperature when closed loop fuelling. Dependant on engine speed and load. RANGE : 200 - 1200 ] ";
                    //

                    break;
                case "CatDiagCal.LoMapOx1CycleTime":
                    description = " Map for retrieving lo limit of cycle time depending on load and rpm. RANGE : 0 - 5000 ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut1OMa":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut2OMa":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut3OMa":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut1BMa":
                case "EngTipCal.m_TipInAut1BMap":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on engine break. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut4OMa":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut5OMa":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutMan1Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutMan4Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fourth gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutMan5Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fifth gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutMan2Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutMan3Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut5OM":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "AirMinLimCal.Q_DashPotMap":
                    description = " This dummy variable is needed when linking executable programs with link332.bat batch file. Switchpoint calculations is using this data. ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut3Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut4Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipInAut2BMa":
                case "EngTipCal.m_TipInAut2BMap":
                    description = " Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on engine break. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut5Ma":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut4OM":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut3OM":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut2OM":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "EngTipCal.m_TipOutAut1OM":
                    description = " Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                    //

                    break;
                case "ExecCntrlOption.EvapColdStart":
                    description = " This flag indicates for the evap diagnose to do a coldtest and ignore the normal conditions for doing a coldtest. ] ";
                    //

                    break;
                case "EvapDiagCal.LeakFacTest1":
                    description = " Leakage matrix that contains a ramp2 value with a certain volume of fuel that gives a leakage factor to put into the stack RANGE : -3 - 3 * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "EvapDiagCal.LeakFacTest2":
                    description = " Leakage matrix that contains a ramp2 value with a certain volume of fuel that gives a leakage factor to put into the stack RANGE : * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "ECUID.ScaleTable":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "Immobilizer_Enable":
                    description = " This flag must be set to allowe the immobilizer to cut the fuel. ] ";
                    //

                    break;
                case "IgnKnkCal.fi_Map1MaxOffset":
                    description = " Max allowed knock offset angle (without knockindex). RANGE : -20.0 - 0 RESOLUTION : 0.1? ] ";
                    //

                    break;
                case "TorqueCal.M_EngTempTab":
                    description = " CR-1562 Maximum torque table when engine temperature is below temperature TorqueCal.T_LimEngTemp. Support points is engine speed. RANGE: 0 - 500 Nm ] ";
                    break;
                case "TorqueCal.M_EngTempE85Ta":
                    description = " CR-1562 Maximum torque table for E85 when engine temperature is below temperature TorqueCal.T_LimEngTemp. Support points is engine speed. RANGE: 0 - 500 Nm ] ";
                    break;
                case "MissfCal.outOfLimDelayMAT":
                    description = " Contains the delay in combustions for activating the misfire detection. Only used MY98-04. RANGE : 0 - 5000 ] ";
                    //

                    break;
                case "AirMinLimCal.Q_MinLoadTab":
                    description = " Minimum airmass flow for the engine. Below this limit the HC-emission will increase rapidly, due to bad combustion. RESOLUTION : 0.01 g/s RANGE: 0.00 - 99.99 g/s (0 - 9999) ] ";
                    //

                    break;
                case "MissfCal.nrOfTransientFilterCombust":
                    description = " Nr of combustion to filter after transient. RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "ECUID.EngineType":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "FuelCalcDelay":
                    description = " Number of combustions between every call to a specific function. Pos Function 0 TransientFuelAdjustment 1 KnockFuelAdjustment 2 CalcBFuelFactor 3 AfterStartEnrichment1Master 4 AfterStartEnrichment2Master 5 FuelAdaptFunction 6 TempCompensationMaster 7 CatDiagFuelFactor 8 LambdaControler 9 FuelCutMaster 10 HotStartEnrichmentMaster 11 CalcMaxInjTime 12 CalculateBattConst ";
                    //

                    break;
                case "PurgeCal.PdiffMaxRefFlow":
                    description = " Maximum available air flow in respect to the pressure difference. RANGE : 0 - 3000 mg/s RESOLUTION : 1 mg/s ] ";
                    //

                    break;
                case "DICRun.ST_FrAllFaultLim":
                    description = " A list which shows status of all tests Position: 0 - DICRun.N_1Cyl comparerd to DICRunCal.N_Cmb1Lim 1 - DICRun.N_2Cyl comparerd to DICRunCal.N_Cmb2Lim 2 - DICRun.N_3Cyl comparerd to DICRunCal.N_Cmb3Lim 3 - DICRun.N_4Cyl comparerd to DICRunCal.N_Cmb4Lim 4 - DICRun.N_FCutTot comparerd to DICRunCal.N_FCutLimTot ] ";
                    //

                    break;
                case "CruiseComCal.M_RoadTorque":
                    description = " Output of the default roadload map scaled to wheel torque RESOLUTION : Nm(wheel) RANGE : 0 - 2000 ] ";
                    //

                    break;
                case "obdTEngQCStack":
                    description = " obdTEngQCtempDiff is put into this vector. If mean value (obdTEngQCMeanValueStack) is bigger than cal. value then report quick change fault. RANGE : 0 - 65000 UNIT : C RESOLUTION : 0.1 UPDATE : background ] ";
                    //

                    break;
                case "DICass.ST_FrAllFaultLim":
                    description = " A list which shows status of all tests Position: 0 - DICass.U_AvCyl compared to DICassCal.U_LimAvCyl or DICass.U_AvTot compared to DICassCal.U_LimAvTot 1 - DICass.dU_SumCyl compared to DICassCal.dU_LimSumCyl or DICass.dU_SumTot compared to DICassCal.dU_LimSumTot 2 - DICass.dU_AbsSumCyl compared to DICassCal.dU_LimAbsCyl or DICass.dU_AbsSumTot compared to DICassCal.dU_LimAbsTot 3 - DICass.N_CmbULowCyl compared to DICassCal.N_ULowLimCyl or DICass.N_CmbULowTot compared to DICassCal.N_ULowLimTot 4 - DICass.t_AvCyl compared to DICassCal.t_LimAvCyl or DICass.t_AvTot compared to DICassCal.t_LimAvTot 5 - DICass.dt_SumCyl compared to DICassCal.dt_LimSumCyl or DICass.dt_SumTot compared to DICassCal.dt_LimSumTot 6 - DICass.dt_AbsSumCyl compared to DICassCal.dt_LimAbsCyl or DICass.dt_AbsSumTot compared to DICassCal.dt_LimAbsTot 7 - DICass.N_CmbtLowCyl compared to DICassCal.N_tLowLimCyl or ";
                    //

                    break;
                case "ECUID.VehicleIdNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "ECUID.ECUSoftwNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "MAFCal.t_NegTransFreezTab":
                    description = " Time to keep negative fuel transient flag set while the HFM-signal makes big under shot. If a reading from this table is 0, then no negative fuel transient will be trigged. RESOLUTION : 1 ms RANGE : 0 - 6000 ms ] ";
                    //

                    break;
                case "MisfDiagProt.dt_SumCyl":
                    description = " The sum for a number DICassCal.N_CmbLimdt_Sum of Missf.DetectLevel values. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "MAFCal.t_PosTransFreezTab":
                    description = " Time to keep positive fuel transient flag set while the HFM-signal makes big over shot. If a reading from this table is 0, then no positive fuel transient will be trigged. RESOLUTION : 1 ms RANGE : 0 - 6000 ms ] ";
                    //

                    break;
                case "KnkDiagProt.dU_AbsSumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkDiagProt.dU_SumCyl":
                    description = " The sum for a number (DiCassCal.N_CmbLimdUSum) of In.U_KnockDiag values. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkDiagProt.U_SumCyl":
                    description = " The sum for a number (KnockDiagCal.N_KnkAve) of In.U_KnockDiag values. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "CatDiagLevCal.m_SP":
                    description = " Support points for the average load during the second phase of the diagnose. ] ";
                    //

                    break;
                case "MisfDiagProt.dt_AbsSumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "MisfDiagProt.t_SumCyl":
                    description = " The sum for a number DICassCal.N_CmbLimdt_Sum of Missf.DetectLevel values. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "CatDiagLevCal.T_CatSP":
                    description = " Support points for the catalyst temp. ] ";
                    //

                    break;
                case "SyncProt.N_Det1Cnt":
                    description = " Number of Detection1 on ActualCyl RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "TEngDiagCal.n_CombFactTA":
                    description = " Correction for warm start, increase local combustion counter for y-axel (TEngDiagCal.n_CombSP) depending of start temp to get result from this table. RANGE : 0 - 65000 UNIT : comb RESOLUTION : 50% UPDATE : background ] ";
                    //

                    break;
                case "SyncProt.N_Det2Cnt":
                    description = " Number of Detection2 on ActualCyl RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "CatModCal.m_SP":
                    description = " Load support points for the catalyst temperature matrix. RANGE : 0 - 1200 mg/c ] ";
                    //

                    break;
                case "CatModCal.n_SP":
                    description = " Engine speed support points for the catalyst temperature matrix. RANGE : 0 - 7000 rpm ] ";
                    //

                    break;
                case "CatModCal.T_LambdaOffset":
                    description = " Temperature offset to be added to the steady state catalyst temp fetched from the matrix. RANGE : 0 - 1000 C * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "CatModCal.LambdaSP":
                    description = " Lambda value support points for the offset catalyst temperature table. RANGE : 70 - 130 (lambda 0.70 - 1.30) * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "CatModCal.n_CombStart":
                    description = " Do not start the cat temp model until a number of cobustion have passed. The number of combustions depend on the engine coolant temp. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "DICass.dU_SumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the difference between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dU_LimSumCyl. ] ";
                    //

                    break;
                case "CatModCal.T_SPCombStart":
                    description = " Support points for engine coolant temp. Used to determine how many combustion to wait for before the cat temp model is started. RANGE : -100 - 200 ] ";
                    //

                    break;
                case "DICass.dt_AbsSumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dt_LimAbsCyl. ] ";
                    //

                    break;
                case "DICass.dt_SumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dt_LimSumCyl. ] ";
                    //

                    break;
                case "DICass.dU_AbsSumCyl":
                    description = " When is diagnos is done this symbol contains the sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dU_LimAbsCyl. ] ";
                    //

                    break;
                case "EngTipCal.X_TipInRFA2OTa":
                    description = " Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 2nd gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                    //

                    break;
                case "EngTipCal.X_TipInRFA1OTa":
                    description = " Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 1st gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                    //

                    break;
                case "EngTipCal.X_TipInRFA5OTa":
                    description = " Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 5th gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                    //

                    break;
                case "EngTipCal.X_TipInRFA4OTa":
                    description = " Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 4th gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                    //

                    break;
                case "EngTipCal.X_TipInRFA3OTa":
                    description = " Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 3rd gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                    //

                    break;
                case "n_LostFuelMasterCalls":
                    description = " When the system is heawy loaded might the fuelmaster not be called on every combustion, this variable calculates the total amount of lost calls. ] ";
                    //

                    break;
                case "ECUID.ECUHardwNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "PLT_pointer":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "EvapDiagCal.V_Test2FuelS":
                    description = " Y-axel in matris for leakagefactor for ramp2 evaluation. Only for test 2 * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "EvapDiagCal.V_Test1FuelS":
                    description = " Y-axel in matris for leakagefactor for ramp2 evaluation. Only for test 1 * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "EvapDiagCal.Test2Ramp2Re":
                    description = " X-axel in matris for leakagefactor for ramp2 evaluation. Only for test 2 * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "EvapDiagCal.Test1Ramp2Re":
                    description = " X-axel in matris for leakagefactor for ramp2 evaluation. Only for test 1 * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "Data_name":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "ECUID.TesterSerialNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "X_AccPedalManTAB":
                    description = " Tab for interpolation of In.X_AccPedal. : (manual gearbox). RANGE : 0 - 1300 Resolution is 0.1 %";
                    //

                    break;
                case "X_AccPedalAutSP":
                    description = " AD supportpoints for recalculating of Pedal position in % : (automatic gearbox). RANGE : 0 - 1024";
                    //

                    break;
                case "X_AccPedalAutTAB":
                    description = " Tab for interpolation of In.X_AccPedal : (automatic gearbox). RANGE : 0 - 1300 Resolution is 0.1 %";
                    //

                    break;
                case "TimerCheck":
                    description = " This timers measures the actual time elapsed during the timer routines. The ECMStat.msCounter is read between every start of timer routines: 1 - 20 ms 2 - 50 ms 3 - 100 ms 4 - 250 ms 5 - 1000 ms 6 - Background 7 - 5 ms 8 - Time for ROM cheksum calculation RESOLUTION : 1 ms ] ";
                    //

                    break;
                case "ECUID.ECUSoftwVersNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "IdleCal.NeutralAirPartTA":
                    description = " The percent of the idle neutral air calibration data to use to get the total idle air, when neutral control is active. The rest is fetched from the idle drive air calibration. RANGE : 0 - 100 % RESOLUTION : 1 ] ";
                    //

                    break;
                case "CalibrationData592":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "CruiseCal.v_RequestNormal":
                    description = " support points for requested vehicle speed this table is used if the cruise is in state 4,5,6 or resume mode RESOLUTION : 0.1 km/h ] ";
                    //

                    break;
                case "OBDAdapRes.U_DeadSensPost":
                    description = " The rear sensor signal when fuelcut has been active. Measured once per trip. ] ";
                    //

                    break;
                case "OBDAdapRes.lambdaAtMaxTime":
                    description = " Longest time when the lambda integrator is in max/min position during this trip. This value is set when the shortterm diag reports ok or error. ] ";
                    //

                    break;
                case "OBDAdapRes.t_StartTempState":
                    description = " Indicates start temperature. 1 = temp. less than -7 degrees. 2 = temp. greater than -7 and less than 10 degrees. 3 = temp. greater than 10 degrees. ] ";
                    //

                    break;
                case "IgnOffsCal.NCMaxNegRampT":
                    description = " This is the most negative ignition offset allowed from the neutral control ignition ramping. It s a table as function of m_request. This is part of the D/N compensation. RANGE : -500 - 0 RESOLUTION : 0.1 degree ] ";
                    //

                    break;
                case "IgnOffsCal.NCMaxNegRampS":
                    description = " Support points in m_Request for the NCMaxNegRampTAB. This is part of the D/N compensation. RANGE : 0 - 1000 RESOLUTION : mg/c ] ";
                    //

                    break;
                case "SyncCal.n_CombMultiIgnTab":
                    description = " Number of combustions after ECMStat.ST_EngineStarted is set until the multiignition is disabled as a function of engine temperature. RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "ECUID.PartNrAlphaCode":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "DICRun.N_OKCyl":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL or NON misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.N_CmbtLowCyl":
                    description = " Number of counts when Missf.DetectLevel signal is lower or equal to the limit DetSigDiagCal.t_DetectLimit. The counter is decreased when the signal is greater. RANGE : -32768 to 32767 ] ";
                    //

                    break;
                case "MisfDiag.dt_AvCyl":
                    description = " The average derivate of Missf.DetectLevel for DiCassCal.N_CmbLimit combustions. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                    //

                    break;
                case "DICass.t_AvCyl":
                    description = " When is diagnos is done this symbol contains the average value of In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.t_LimAvCyl. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRun.N_2Cyl":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.U_AvCyl":
                    description = " When is diagnos is done this symbol contains the average value of In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.U_LimAvCyl. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRun.N_4Cyl":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is NON misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.N_CmbULowCyl":
                    description = " Number of counts when In.U_KnockDiag signal is lower or equal to the limit KnockDiagCal.errorLevel. The counter is decreased when the signal is greater. RANGE : -32768 to 32767 ] ";
                    //

                    break;
                case "DICRun.N_3Cyl":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkDiagProt.U_KnockDiagPrevious":
                    description = " In.U_KnockDiag value for previous combustion for each cylinder. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "IdleCal.X_mLOffHighAltTab":
                    description = " Decreased light off idle RPM air on high altitude depending on IdleProt.n_EngineDiff. ] ";
                    //

                    break;
                case "BlockHeatCal.Q_StartFacTab":
                    description = " CR-315 If a blockheater start is detected, increase Idle.Q_StartOffs with this factor ] ";
                    //

                    break;
                case "KnkDiag.dU_AvCyl":
                    description = " The average derivate of In.U_KnockDiag for DiCassCal.N_CmbLimit combustions. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                    //

                    break;
                case "KnkDiag.U_KnkDiagCyl":
                    description = " In.U_KnockDiag separate for each cylinder. This is only a variable for development aid. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkDiag.dU_Cyl":
                    description = " The derivate of previous and actual In.U_KnockDiag. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                    //

                    break;
                case "BlockHeatCal.C_PartNFacTab":
                    description = " CR-315 If a blockheater start is detected, increase Idle.C_PartNeutral with this factor ] ";
                    //

                    break;
                case "MisfDiagProt.t_DetLevelPrevious":
                    description = " Missf.DetectLevel value for previous combustion for each cylinder. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "AftSt1ExtraCal.p_AirAmbSP":
                    description = " CR-178 Ambient pressure support points for high alt comp. ] ";
                    //

                    break;
                case "MissfCal.p_AirAmbOutOfLimSP":
                    description = " Ambient pressure support point table for delay misfire when out of environmental conditions. Only used MY98-04. RANGE : 0 - 200.0 kPa ] ";
                    //

                    break;
                case "DICRun.N_1Cyl":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "AftSt2ExtraCal.p_AirAmbSP":
                    description = " CR-178 Ambient pressure support points for high alt comp. ] ";
                    //

                    break;
                case "BlockHeatCal.AftSt2FacTab":
                    description = " CR-315 If a blockheater start is detected, encrich afterstart 2 with this factor ] ";
                    //

                    break;
                case "SyncProt.ST_CylFault":
                    description = " Detect fault on cylinder 2: Detect fault: High 1: Detect fault: Low 0: No detect fault RESOLUTION : High / Low / No fault ] ";
                    //

                    break;
                case "BlockHeatCal.T_AirInletSP":
                    description = " CR-315 Support pointer for blockheat start function ] ";
                    //

                    break;
                case "PLT_TriggVar":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "MisfDiag.dt_Cyl":
                    description = " The derivate of previous and actual Missf.DetectLevel. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                    //

                    break;
                case "ECUID.ECUHardwVersNr":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "LambdaCal.PWM_HeatO2RearSens":
                    description = " PWM level for a specified time. ] ";
                    //

                    break;
                case "Fault.fi_Ignition":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "LambdaCal.PWM_HeatO2FrontSens":
                    description = " PWM level for a specified times. ] ";
                    //

                    break;
                case "ECUID.SoftwareDate":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "Fault.ImmoCode":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "Fault.t_Injection":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "ImmoCode":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "throtDiaAdapErrorBuf":
                    description = " This buffer contains the throttle error number reported throttle diagnose in thrlimp.jsp. * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "DICassCal.dU_LimSumCyl":
                    description = " Limit where the sum ( DICass.dU_SumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "BFuelProt.combCounter":
                    description = " Comb after EngineStarted to continue with crank fuel ] ";
                    //

                    break;
                case "hfmOffsetSimFac":
                    description = " this factor is used to create an offset on the hfm signal to simulate a faulty hfm ] ";
                    //

                    break;
                case "ECUID.ECUDiagDataID":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "AdapStableTimer":
                    description = " Stable timer for when to allow adaption from rear o2 sensor. ] ";
                    //

                    break;
                case "DICassCal.dt_LimSumCyl":
                    description = " Limit where the sum ( DICass.dt_SumCyl) is to low. Test is done after DICassCal.N_CmbLimit RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.dU_SumTot":
                    description = " When is diagnos is done this symbol contains the sum of the difference between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dU_LimSumTot. ] ";
                    //

                    break;
                case "DICass.dU_AbsSumTot":
                    description = " When is diagnos is done this symbol contains the total sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal. for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dU_LimAbsTot. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.dt_LimSumTot":
                    description = " Limit where the sum ( DICass.dt_SumTot ) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.dU_LimSumTot":
                    description = " Limit where the sum (DICass.dU_SumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.dU_LimAbsTot":
                    description = " Limit where the sum of absolute values ( DICass.dU_AbsSumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.dU_LimAbsCyl":
                    description = " Limit where the sum of absolute values ( DICass.dU_AbsSumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "KnkAdaptCal.AdaptStartDelay":
                    description = " Minimum time before first adaption. Added by MEA-TLn. RESOLUTION : 1 msec ] ";
                    //

                    break;
                case "FlashSave.l_Elapsed":
                    description = " CR-1006. Save elapsed distance, distance in meters. If the battery voltage drops the elapsed distance from the last Power up is lost . RANGE: 0 - 4 294 967 290 m RESOLUTION: 10m ] ";
                    //

                    break;
                case "KnkAdaptAdap.RefValueWind":
                    description = " RefValueWind are a filtered median value of U_Knock for low and high knock adaption window. Knock adaption that is not finished is always reseted when the engine is restarted. The knock adaption is not active for a number of seconds (KnkAdaptCal.AdaptStartDelay) after start. If KnkAdapCal.ST_SmartGuess is set is the smart guess function active. Filtering is done to reduce variations in knock adaption. For more help read help KnockAdaption. ] ";
                    //

                    break;
                case "CatOx2ProcessInvalidTime":
                    description = " Accumulated time when data is processed but when ox2 signal is below lim ] ";
                    //

                    break;
                case "CatOx2ProcessTime":
                    description = " Accumulated time when data is processed ] ";
                    //

                    break;
                case "KnkAdaptAdap.RefValueWRaw":
                    description = " Referense value before filtering and range check. Added by MEA-TLn 2001-02-27. * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "MisfDiagProt.t_TmpdSum1":
                    description = " The delta sum for all 4 or 6 cylinders. (Missf.DetectLevel - MisfDiagProt.t_DetLevelPrevious) Updated every combustion. RANGE : 0 - ] ";
                    //

                    break;
                case "CatDiagLevProt.closedThrotTimer":
                    description = " How long has the pedal been released after the other preconditions are fulfilled. ] ";
                    //

                    break;
                case "DICassCal.dt_LimAbsTot":
                    description = " Limit where the sum of absolute values ( DICass.dt_AbsSumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "LocalID":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "FuelLevelCal.VolFuelTankFiltCoef":
                    description = " FilterCoef for lp filter of vol_fueltank RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "obdAirmCompLastMeanVal":
                    description = " This is the meanvalue calculated from the last defined number of samples for the low load window. ] ";
                    //

                    break;
                case "obdLatestHiMeanAirmCompEval":
                    description = " This is the actual mean value of the difference in airmass compare taken before the last sample interval has begun. For the hi load window. ] ";
                    //

                    break;
                case "obdAirmCompLastHiMeanVal":
                    description = " This is the meanvalue calculated from the last defined number of samples for the hi load window. ] ";
                    //

                    break;
                case "BFuelProt.lastStartCombustion":
                    description = " The combustion count when the startmap no longer should be used. The ramping to the normal BFuel map starts after this combustion. ] ";
                    //

                    break;
                case "DICassCal.dt_LimAbsCyl":
                    description = " Limit where the sum of absolute values ( DICass.dt_AbsSumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.dt_AbsSumTot":
                    description = " When is diagnos is done this symbol contains the total sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dt_LimAbsTot. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.dt_SumTot":
                    description = " When is diagnos is done this symbol contains the sum of the difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dt_LimSumTot. ] ";
                    //

                    break;
                case "obdLatestMeanAirmCompEval":
                    description = " This is the actual mean value of the difference in airmass compare taken before the last sample interval has begun. For the low load window. ] ";
                    //

                    break;
                case "offset":
                    description = " Description : Hysteresis for gear shift support function The ShiftSupCal.M_Hysteresis is converted to wheel torque and add to the wheel integrator. The addition of aboth must be lower than the max possible engine torque to release the function and ramp down the airmass offset Resolution : 1 Nm (Wheel torque) Range : -32535 - 32535 Nm ] ";
                    //

                    break;
                case "CatDiagCal.Ox2ProcessTimerLim":
                    description = " Indicates the accumulated time, needed to process data, before the evaluation can be performed. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "LambdaProt.N_HwCheckStamp":
                    description = " Combustion stamp when hardware check has finished. ] ";
                    //

                    break;
                case "SyncCal.n_DiagCombLimit":
                    description = " Number of combustions before the sync diagnose will be run if the engine doesn t sync RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "obdTEngineAccumAir":
                    description = " RANGE : 0 - 4294967296 UNIT : mg/c RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "LongTermDiagCal.LongTermAddAdapLim":
                    description = " Long term fuel trim test. Set error if the variable AdpFuelAdap.AddFuelAdapt reaches +- this value. ] ";
                    //

                    break;
                case "obdFuelLevel.DistanceFro":
                    description = " When a fault is set on Fuel Level diagnose, this distance counter starts because if there is a fault, limphome value is set to 50L and then the Evap leakage test starts. If the real volume is full, fuel covers the purge tubes and it s impossible to suck the system down with purge and BIG_LEAK will be reported. Therefor a distance of 25 kilometers is required before Evap diagnose can report BIG_LEAK. RANGE : 0 - 100000 UNIT : m (meters) RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "TorqueProt.t_NoiseRedTrig":
                    description = " When msCounter reaches this time, the noise reduction limitation will be trigged if the driver pushes the accpedal above the calibrated level. RESOLUTION: 1 ms ] ";
                    //

                    break;
                case "TorqueProt.t_NoiseRedConst":
                    description = " When msCounter reaches this time, the noise reduction limitation has been trigged and reduced the torque at the calibrated limit for the calibrated time. The ramp will now start. RESOLUTION: 1 ms ] ";
                    //

                    break;
                case "TorqueProt.t_NoiseRedRamp":
                    description = " When msCounter reaches this time, the noise reduction limitation has been trigged and reduced the torque at the calibrated limit for the calibrated time and the ramp is also finished. RESOLUTION: 1 ms ] ";
                    //

                    break;
                case "ROMChecksum.BottomOffFlash":
                    description = " Address for the bottom of Flash memory. This data is copyed from the PIArea and is used for the Flash checksum test. ] ";
                    //

                    break;
                case "ROMChecksum.TopOffProgram":
                    description = " Address for the top of Program code. This data is copyed from the PIArea and is used during the Flash checksum test. ] ";
                    //

                    break;
                case "O2SensFreqCal.TimeToStartTest":
                    description = " Engine must have run this time before doing the test. RANGE : 0 - 600000 ] ";
                    //

                    break;
                case "LambdaProt.MinCombCounter":
                    description = " Counter for number of combustions before it s allowed with switch of integrator. UPPDATE : every combustion. RESOLUTION : 1. ] ";
                    //

                    break;
                case "ROMChecksum.ActualChecksum":
                    description = " Actual 339 calculated checksum. The checksum is calculated from address BottomOffFlash to adddress TopOffProgram . ] ";
                    //

                    break;
                case "O2SensFreqCal.t_CondTrueTimer":
                    description = " Condition must be true for this calibrated time before diagnose starts RANGE : 0 - 600000 RESOLUTION : 1 ms ] ";
                    //

                    break;
                case "obdTEngDeadCombustion":
                    description = " Dead signal test shall only be preformed with vehicle speed therfore a combustion counter is made that increase only when vehicle speed > 25. RANGE : 0 - 4 byte UNIT : comb RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "O2SensPostCal.t_LowToHea":
                    description = " If the rear sensor signal is shorted to heater ground for more than this time ms error low signal is reported. RANGE : 0 - 1000000 ms ] ";
                    //

                    break;
                case "O2SensPostCal.t_LowErrorLim":
                    description = " If the rear sensor signal is below a cal value (O2SensPostCal.U_LowLim) more than this time error low signal is reported. RANGE : 0 - 60000 s ] ";
                    //

                    break;
                case "PLT_TriggValue":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "O2SPreCal.t_LowToHeatErr":
                    description = " If the front sensor signal is shorted to heater ground for more than this time ms error low signal is reported. RANGE : 0 - 1000000 ms ] ";
                    //

                    break;
                case "PLT_variablesize":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "SwitchProt1.t_EngStartOff":
                    description = " Debouncing timer for area offset due to Start air. RESOLUTION : 1 ms RANGE : 0 - ms ] ";
                    //

                    break;
                case "SyncProt.ST_Det2Cnt":
                    description = " Detect2 status on cylinder 2: Detect High 1: Detect Low 0: Detect Undefined (Neither High or Low) RESOLUTION : High / Low / Undefined ] ";
                    //

                    break;
                case "KnkDiagProt.U_TmpdSum1":
                    description = " The delta sum for all 4 or 6 cylinders. (ActualIn.U_KnockDiag - KnkDiagProt.U_KnockDiagPrevious) Updated every combustion. RANGE : 0 - ] ";
                    //

                    break;
                case "SyncProt.ST_Det1Cnt":
                    description = " Detect1 status on cylinder 2: Detect High 1: Detect Low 0: Detect Undefined (Neither High or Low) RESOLUTION : High / Low / Undefined ] ";
                    //

                    break;
                case "WriteProtectedECU":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "LoadCoCal.t_ElLoadRampTab":
                    description = " ElLoad compensation ramping time table. The load from the alternator is ramped. The ramping time is engine speed dependent. RESOLUTION : 1 ms RANGE: 0 - 65000 ms ] ";
                    //

                    break;
                case "X_AccPedalManSP":
                    description = " AD supportpoints for recalculating of Pedal position in %. : (manual gearbox). RANGE : 0 - 1024";
                    //

                    break;
                case "AdaptionData592":
                    description = " Adaptive data from the 592 cpu. Byte 0 => Pedal1 adaption Byte 1 => Friction compensation Byte 2 => Pedal2 adaption * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "DICassCal.N_CmbLimit":
                    description = " The number of consecutive combustions per cylinder that the In.U_KnockDiag and Missf.DetectLevel should be read before calculating and evaluating the limits. The counter DICass.N_Combustion is compared to this limit. ] ";
                    //

                    break;
                case "BlockHeatCal.T_AirInletM":
                    description = " CR-375 Minimum In.T_AirInlet to enable start factor ] ";
                    //

                    break;
                case "BFuelCal.T_EngStartLowLim":
                    description = " Engine start temp above this limit will activate the StartMap to reduce black smoke. RANGE : -40 to 200 ] ";
                    //

                    break;
                case "BFuelCal.T_EngStartHighLim":
                    description = " Engine start temp below this limit will activate the StartMap to reduce black smoke. RANGE : -40 to 200 ] ";
                    //

                    break;
                case "BlockHeatCal.T_EngAirDiff":
                    description = " CR-315 The differance between In.T_Engine and In.T_AirInlet must be greater than this parameter to enable blockheater start enrichment ] ";
                    //

                    break;
                case "ActualIn.M_TCSLdaTorqueReq":
                    description = " Maximum torque request from TCS system via CAN RANGE : -50 to 25 Nm RESOLUTION : 1 Nm ACCURACY : UPDATED : Every 20 ms ] ";
                    //

                    break;
                case "obdTEngineStatus":
                    description = " Status on Temp engine sensor diagnose. 0 = perhaps not running or running but not finished 1 = Ok report 0x0115 ENGINE_TEMPERATURE_DEAD reported 0x0117 ENGINE_TEMPERATURE_CIRCUIT_LOW reported 0x0118 ENGINE_TEMPERATURE_CIRCUIT_HIGH reported 0x0119 ENGINE_TEMPERATURE_QUICK_CHANGE reported RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdTCoolingSystemPreCond":
                    description = " Show cooling system diagnose pre condition 0 = running 1 = Out Of Limits 2 = Tengine diagnose reported fault 3 = Warm start RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdTEngQCMeanValueStack":
                    description = " Mean value from the stack (obdTEngQCStack). If mean value is bigger than cal. value then report quick change fault. RANGE : 0 - 65000 UNIT : RESOLUTION : 0.1 UPDATE : background ] ";
                    //

                    break;
                case "obdTEngQCtempDiff":
                    description = " The difference between In.T_Engine this loop and last. This value is put into quick change stack (obdTEngQCStack). RANGE : 0 - 65000 UNIT : C RESOLUTION : 0.1 UPDATE : background ] ";
                    //

                    break;
                case "obdTCoolingSystemStatus":
                    description = " Status on Cooling system diagnose. 0 = perhaps not running or running but not finished 1 = Ok report 0x0116 COOLING_SYSTEM_RANGE reported RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "ActualIn.I_LoadAlternator":
                    description = " Alternator load UNIT : Amp MAX : 255 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : 20 ms ] ";
                    //

                    break;
                case "obdFuelLevel.V_FuelTankR":
                    description = " Reference for low pass filter of ActualIn.V_FuelTank RANGE : 0 - 700 UNIT : Litre RESOLUTION : 0,1 UPDATE : background ] ";
                    //

                    break;
                case "obdFuelLevel.V_FuelTankF":
                    description = " Low pass filtered ActualIn.V_FuelTank. Active when vehicle speed is above 40.0 km/h RANGE : 0 - 700 UNIT : Litre RESOLUTION : 0,1 UPDATE : background ] ";
                    //

                    break;
                case "ActualIn.t_TCMTrqLimDuration":
                    description = " Maximum engine torque duration UNIT : ms MAX : 2500 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : 10 ms ] ";
                    //

                    break;
                case "DICRunCal.N_CmbDiagLim":
                    description = " The number of consecutive combustions before the counters DICRun.N_1Cyl to DICRun.N_4Cyl is compared to DICRunCal.N_Cmb1Lim to DICRunCal.N_Cmb4Lim limit. Test is done after DICRunCal.N_CmbDiagLim combustions. ] ";
                    //

                    break;
                case "DICRunCal.N_FCutLimTot":
                    description = " Number of combustions detected during engine running Then counter for fuel cut FCUT.CutStatus = 12. is compared to this limit. DICRun.N_FCutTot > DICRunCal.N_FCutLimTot This is done after DICRunCal.N_CmbDiagLim combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRunCal.N_Cmb2Lim":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel. The counter DICRun..N_2Cyl is compared to limit DICRunCal.N_Cmb2Lim. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRunCal.N_Cmb1Lim":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_1Cyl is compared to limit DICRunCal.N_Cmb1Lim. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRunCal.N_Cmb4Lim":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is NON misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_4Cyl is compared to limit DICRunCal.N_Cmb4Lim. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICRunCal.N_Cmb3Lim":
                    description = " Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_3Cyl is compared to limit DICRunCal.N_CmbLim. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "ThrErr2Cal.PedalDeltaLimit":
                    description = " Pedal derivata limit for choise time before 339 indicate error. RANGE : 0.0 - 100.0 % RESOLUTION : 0.1 ACCURACY : 0.1 ] ";
                    //

                    break;
                case "ActualIn.p_AirBefThrottle":
                    description = " Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10 RESOLUTION : 0.1 UPDATE : Every combustion ] ";
                    //

                    break;
                case "ThrErrProt.AD_ThrP1MinDelta":
                    description = " CR-798. Minimum throttle position 1 delta during evaluation time. RANGE : 0 - 1024 bit RESOLUTION : 1 ] ";
                    //

                    break;
                case "ActualIn.I_HeatO2SensRear":
                    description = " Rear oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : 250 ms ] ";
                    //

                    break;
                case "ThrErrProt.AD_ThrP1MaxDelta":
                    description = " CR-798. Maximum throttle position 1 delta during evaluation time. RANGE : 0 - 1024 bit RESOLUTION : 1 ] ";
                    //

                    break;
                case "ThrErrProt.SwMonOf339Fail":
                    description = " Software monitoring of 339 failed. Error 17. RANGE : ON = Error OFF = No error ] ";
                    //

                    break;
                case "ThrErrCal.I_Lim100PerOpen":
                    description = " If current are belove this value when error 100 % PWM in opening direction are detected are throttle going in limphome. ] ";
                    //

                    break;
                case "ThrErrCal.AD_ThrP1MaxLimit":
                    description = " CR-798. Maximum throttle position 1 delta limit for fault. RANGE : 0 - 1024 RESOLUTION : 1 ] ";
                    //

                    break;
                case "ActualIn.AD_SlavePedalPot1":
                    description = " Pedal position AD value from Slave CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : 20 ms ] ";
                    //

                    break;
                case "EnableThrError":
                    description = " Storage of throttle enable status: 1 - Wait for 592 to indicate limphome 2 - Wait for block adaption 3 - Wait for 592 to indicate no limphome 9999 - serial communication error ] ";
                    //

                    break;
                case "ActualIn.I_HeatO2SensFront":
                    description = " Front oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : 250 ms ] ";
                    //

                    break;
                case "ThrErrCal.PedalDeltaLimit":
                    description = " Pedal derivata limit for choise time before 339 indicate error. RANGE : 0.0 - 100.0 % RESOLUTION : 0.1 ACCURACY : 0.1 ] ";
                    //

                    break;
                case "ThrLimpAdap.n_ThrPot1Fault":
                    description = " This variable is counting the number of times that the throttle potentiometer 1 control routine detects fault on ActualIn.AD_ThrottlePot1. . ] ";
                    //

                    break;
                case "ThrLimpAdap.n_ThrPotClean":
                    description = " This variable is counting the number of times that the throttle potentiometer Wiper Cleaner function has been activated. ] ";
                    //

                    break;
                case "SyncCal.Pc_DetHighLimCyl":
                    description = " Percent of possible detects that need to be registered to count the detect as high. RESOLUTION : 100/1024 percent ] ";
                    //

                    break;
                case "SyncCal.Pc_DetLowLimCyl":
                    description = " Percent of possible detects that registered detects must be lower than to count the detect as low. RESOLUTION : 100/1024 percent ] ";
                    //

                    break;
                case "SyncCal.N_SyncMode1":
                    description = " Number of engine cycles to try to sync with n_CombLimit number of combustions. RESOLUTION : 1 engine cycle ] ";
                    //

                    break;
                case "F_KnkDetCal.t_IgnDetectLim":
                    description = " Calibration value for detection of doubledetect. ] ";
                    //

                    break;
                case "F_KnkDetCal.fi_KnkOffsLim":
                    description = " Calibration value for the ignition offset. ] ";
                    //

                    break;
                case "F_KnkDetCal.m_AirDDMinLim":
                    description = " Min airmass value for detection of doubledetect. ] ";
                    //

                    break;
                case "ROMChecksum.UsedStackSize":
                    description = " Number of bytes used as stack in 339. The allowed stack size is 4k byte. ] ";
                    //

                    break;
                case "TiCalcuProt.p_DeltaIn50ms":
                    description = " delta inlet pressure update every certain time.can be calibrated RANGE : -300 - 300 RESOLUTION : 0.1 kPa ] ";
                    //

                    break;
                case "PurgeCal.HC100FastFiltFa":
                    description = " Filter factor for fast HC adaption at 100% HC. RANGE : 0 - 32000 RESOLUTION : 1 ] ";
                    //

                    break;
                case "PurgeCal.HC100NormFiltFa":
                    description = " Filter factor for normal HC adaption at 100% HC. RANGE : 0 - 32000 RESOLUTION : 1 ] ";
                    //

                    break;
                case "PurgeCal.AdpFreezeTimeNe":
                    description = " Freeze time at negative load transient. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                    //

                    break;
                case "PurgeCal.AdpFreezeTimeBr":
                    description = " Freeze time at brake if n_Engine < 1200 rpm. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                    //

                    break;
                case "PurgeCal.AdpFreezeTimePo":
                    description = " Freeze time at positive load transient. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                    //

                    break;
                case "AreaCal.m_ReqFacForceAda":
                    description = " CR-305 Percent of m_Request to start throttle area adaption. ] ";
                    //

                    break;
                case "KnkDetProt.U_RefLevelActual":
                    description = " Actual reference voltage to detect knocking. KnkDetProt.U_RefLevelActual = knock reference adaption level * KnkDetProt.Constant ---------------------------------- KnkDetProt.RefFactor The knock reference adaption level = QAdapt.RefValue in conditions: KnkAdapCal.ST_QAdapt == 1 and KnkDetProt.NrOfRefAdapt1 == 0 and KnkDetProt.NrOfRefAdapt2 == 0 and QAdapt.RefValue > KnkDet.RefValueActual else is knock reference adaption level = KnkDet.RefValueActual. ";
                    //

                    break;
                case "IgnLOffCal.NegDeltaLim":
                    description = " Maximal decrement of Light Off ignition offset when the start phase is over. RANGE : RESOLUTION : 0.1?/7.5 ms ] ";
                    //

                    break;
                case "KnkAdaptCal.X_RefValueFilt":
                    description = " Filter factor used for refvalue filtering. Added by MEA-TLn. RESOLUTION: ] ";
                    //

                    break;
                case "KnkAdapt2Prot.IgnReduceCounter":
                    description = " Counter to count when ignoffset is set while knock adaption sampels are taken. This counter goes from 0 to 3. 0 - Waiting to set IgnOffset[Cyl] for last cyl (Cyl-1). 1 - Indicate that IgnOffset[Cyl] is set for last cyl and no other. 2 - One reduced ignition confirmed. 3 - Two reduced ignition confirmed. Take U_Knock sample and go for next cyl. RANGE : 0-3 RESOLUTION : 1 ] ";
                    //

                    break;
                case "KnkAdapt2Prot.ActualWindow":
                    description = " What adaption window is active now RANGE : 0-2 RESOLUTION : 1 ] ";
                    //

                    break;
                case "KnkDetProt.T_EngKnkCntrlLim":
                    description = " Airinlet temp dependent engagement limit for knock control. Added by Mea-TLn 2001-03-01 ] ";
                    //

                    break;
                case "KnkAdaptAdap.RefValueLowWind":
                    description = " RefValueLowWind are a copy of KnkAdaptAdap.RefValueWind[0]. This it s done because the local_id.exe can t get the information of adress from symboltable. ] ";
                    //

                    break;
                case "KnkAdaptAdap.RefValueHighWind":
                    description = " RefValueHighWind are a copy of KnkAdaptAdap.RefValueWind[1]. This it s done because the local_id.exe can t get the information of adress from symboltable. ] ";
                    //

                    break;
                case "IgnKnkCal.X_FalseDetReduce":
                    description = " Changes time delay before ramp back sets in. Less delay <- 16 -> More delay ] ";
                    //

                    break;
                case "IgnTemp.fi_Offset":
                    description = " Both air and engine temp offset value. RANGE : -10.0? to 45.0? RESOLUTION : 0.1? ] ";
                    //

                    break;
                case "IgnOffsCal.NCIgnPosRampS":
                    description = " This is the step with which the DNComp.fi_NCOffset is increased when the neutral control is disengaged and the In.n_GearBoxIn increases or becomes 0. This is part of the D/N compensation. RANGE : 0 - 200 RESOLUTION : 0.1 degree ] ";
                    //

                    break;
                case "IgnOffsCal.NCIgnNegRampS":
                    description = " This is the step with which the DNComp.fi_NCOffset is decreased when the neutral control is disengaged and the In.n_GearBoxIn drops under IgnOffsCal.n_NCIgnNegRamp rpm limit. This is part of the D/N compensation. RANGE : 0 - 200 RESOLUTION : 0.1 degree ] ";
                    //

                    break;
                case "IgnOffsCal.n_NCIgnNegRam":
                    description = " The In.n_GearBoxIn must be lower than this limit to activate the the negative ramping of the ignition when neutral control is disengaged. This is part of the D/N compensation. RANGE : -500 - 0 RESOLUTION : 0.1 degree ] ";
                    //

                    break;
                case "KnkSoundRedProt.fi_Offset":
                    description = " Knock sound reduction ignition offset. This ignition offset is active when the normal ignition map is active and when the engine temperature is between or above the two temperature limits: KnkSoundRedCal.T_HighLim and KnkSoundRedCal.T_LowLim . When the engine temperature is between the limits abowe is the offset calculated as follows: KnkSoundRedProt.fi_Offset = (In.T_AirInlet - KnkSoundRedCal.T_LowLim) * (s32)(map_offset)) / (KnkSoundRedCal.T_HighLim - KnkSoundRedCal.T_LowLim) UPDATE : Every combustion ] ";
                    //

                    break;
                case "PurgeCal.AdpFuelFacLimLo":
                    description = " Minimum fuel factor to disable fast adaption and start ramp. RANGE : -50.0 - 0.0 % RESOLUTION : 0.1 % ] ";
                    //

                    break;
                case "BFuelProt.CurrentFuelCon":
                    description = " Current fuel consumption, calculated every 2000ms RANGE : 0 to 3276l / 100km RESOLUTION : 0.1l / 100km ] ";
                    //

                    break;
                case "m_Driver":
                    description = " Airmass request from pedal map. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_CC":
                    description = " Airmass request from cruise control. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "FlashSave.Tech2IdleOffset":
                    description = " CR 331. Nominal idle rpm offset controlled by Tech2 to adjust idle rpm in Automatic Drive. This offset are added on the nominal idle rpm for drive when the engine temperature is abowe the last support point in the table for drive nominal Idle rpm (Last value in IdleCal.T_EngineSP) The Q_air constant is adjusted depending on the size of this offset to minimize the need for adaption to reduce fault in airflow request. The Q_air constant for drive is adjusted with an offset based on following formula: Q_offs = Air offset to adjust drive consant with n_nominalidle = Normal drive idle on warm engine Q_nominalidle = Normal drive air constant on warm engine n_offset = FlashSave.Tech2IdleOffset (n_nominalidle + n_offset) ";
                    //

                    break;
                case "m_DriveMaster":
                    description = " Airmass request from thre drive master select high between pedal and cruise control RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_nHigh":
                    description = " Airmass request from the max limit function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_Master":
                    description = " Airmass request from the output of the airmass master It s input for the emision limitation function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_Request":
                    description = " Airmass request from the output of the emision limitation.It s the global airmass request for the whole system and the input for the airmass controller RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_nLow":
                    description = " Airmass request from the min limit function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_LoadComp":
                    description = " Airmass request from Load compensation RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_Idle":
                    description = " Airmass request from idle speed RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "m_Wheel":
                    description = " Airmass request from the limit wheel function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "PurgeProt.SetPurgePercen":
                    description = " Set purge percent at start ramp. Under this level the flow is ramped fast. RANGE : 0.00 - 10.00 % RESOLUTION : 0.01 % ] ";
                    //

                    break;
                case "VIOSCal.X_nEngMaxInc":
                    description = " A factor how much engine speed could increase from combustion to combustion in engine start. This is used to calculate the max number of ignition pulses during multi ignition mode. RANGE : 0 - 64 ] ";
                    //

                    break;
                case "VIOSCal.t_DetWinMulti":
                    description = " The detect window length before sync and during multiign. The actual detect window length is this value - VIOSCal.t_DetBefWin - 1. WARNING!!! The length of the detect window must not be too long on hi rpm. RESOLUTION: 0.1 ms ] ";
                    //

                    break;
                case "LambdaProt.ST_SwitchAllowed":
                    description = " Indicate if new switch of integrator is allowed. UPPDATE : every combustion. RESOLUTION : ON / OFF. ] ";
                    //

                    break;
                case "CatDeltaLoad":
                    description = " Result of delta load calculation ] ";
                    //

                    break;
                case "CatOx2Filt":
                    description = " Filtrated value from ox2 sensor ] ";
                    //

                    break;
                case "AdapDeltaLoad":
                    description = " LP filtered load signal, start with a normal value. ] ";
                    //

                    break;
                case "BoostCal.loadDiff_NoiseRedDeact":
                    description = " Below this value, the noise reduction function will be disabled and the boostcontroller active as normal. The loadDiff is negative if m_Airinlet is greater than m_request. ] ";
                    //

                    break;
                case "BoostCal.v_NoiseReduction":
                    description = " Below this value, the noise reduction function will open the boost controller valve completely to eliminate noise ] ";
                    //

                    break;
                case "BoostCal.t_WaitAfterShift":
                    description = " CR-81 During shifting and t_WaitAfterShift ms after, do not allow high boost adaption. The conditions for shifting is that In.t_TCMTrqDuration != 0 ] ";
                    //

                    break;
                case "ECMStat.n_EngineDelta2Ma":
                    description = " DESCRIPITON: Maximum n_EngineDelta2 during 100ms ] ";
                    //

                    break;
                case "TorqueCal.M_AutNoiseRedLim":
                    description = " Same as TorqueCal.M_NoiseRedLim but for cars with automaticgearbox. RESOLUTION : 1 Nm RANGE: 0 - 400 Nm (0 - 400) ] ";
                    //

                    break;
                case "TorqueCal.t_NoiseRedConst":
                    description = " A torque reduction at the calibrated level will durate this long before the ramp starts, to reduce noise. RESOLUTION : 1 ms RANGE: 0 - 65000 ms ] ";
                    //

                    break;
                case "PLT_buffer":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "BoostProt.ReqDerivata100ms":
                    description = " m_Request derivata used in to high adaption conditions. RANGE : 10 to 2000 mg/c RESOLUTION : 1 mg/c UPDATE : 100 ms ] ";
                    //

                    break;
                case "TorqueCal.T_LimEngTemp":
                    description = " CR-1562 Maximum engine temperature where engine temperature torque reduction is active. RANGE: -40 to +200 C ] ";
                    //

                    break;
                case "TorqueCal.M_OverBoostOffset":
                    description = " Offset that is subtracted from max engine torque when to enable overboost RESOLUTION: 1 Nm RANGE: 0 - 100 Nm ] ";
                    //

                    break;
                case "TorqueCal.m_OverBoostLevel":
                    description = " At what m_Request that overboost is allowed to be activated again RESOLUTION: 1 mg/c RANGE: 0 - 1000 mg/c ] ";
                    //

                    break;
                case "TorqueCal.M_OverBoostRamp":
                    description = " Ramp decrease factor per second at overboost RESOLUTION: 1 Nm RANGE: 0 - 30 Nm ] ";
                    //

                    break;
                case "TorqueCal.M_IncEngTemp":
                    description = " CR-1562 Maximum torque increase when engine temperature torque reduction is deactivated and torque ramping up. When engine temperature >= TorqueCal.T_LimEngTemp this ramping is started. RANGE: 0 - 500 Nm ] ";
                    //

                    break;
                case "CruiseCal.VehicleConstant":
                    description = " Vehicle constant RESOLUTION : bit ] ";
                    //

                    break;
                case "CatDevDiffFiltMax":
                    description = " Maximum value during one trip of the CatDevDiff ] ";
                    //

                    break;
                case "MisfDiag.dt_Tot":
                    description = " The derivate of previous and actual Missf.DetectLevel. It s a average value of MisfDiag.dt_Cyl for all cylinders. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                    //

                    break;
                case "KnkDiag.dU_AvTot":
                    description = " The average derivate (all cylinders) of In.U_KnockDiag for DiCassCal.N_CmbLimit combustions. It s calc from DICass.dU_SumTot / (nr of cylinders) This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                    //

                    break;
                case "MisfDiag.dt_AvTot":
                    description = " The average derivate (all cylinders) of Missf.DetectLevel for DiCassCal.N_CmbLimit combustions. It s calc from DICass.dt_SumTot / (nr of cylinders) This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                    //

                    break;
                case "DICassAdap.ST_Diagnose":
                    description = " Status of diagnose. Updates the first time after ignition on when a fault is found. RANGE : 0 : No faults detected 131 - 255 : Status falt code ] ";
                    //

                    break;
                case "DICassAdap.N_DownFrom40":
                    description = " Every time a fault is detected this counter is set to 40. In every ignition off is this counter decreased with 1 if a warmup cycle is done and the last engine running dignose reported an OK. RANGE : 0 : No faults 1 - 40 : Faults detected ] ";
                    //

                    break;
                case "KnkDiag.dU_Tot":
                    description = " The derivate of previous and actual In.U_KnockDiag. It s a average value of KnkDiag.dU_Cyl for all cylinders. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                    //

                    break;
                case "KnkDiagProt.N_CmbLimitCalc":
                    description = " The number of consecutive combustions that the In.U_KnockDiag and Missf.DetectLevel should be read before calculating and evaluating the limits. This variable is set from DICassCal.N_CmbLimit and minimum value is 1; ] ";
                    //

                    break;
                case "DICass.t_AvTot":
                    description = " When is diagnos is done this symbol contains the total average value of Missf.DetectLevel signal DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.t_LimAvTot. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.N_CmbULowTot":
                    description = " Number of counts when In.U_KnockDiag signal is lower or equal to the limit KnockDiagCal.errorLevel. The counter is decreased when the signal is greater. Sum of all cylinders in DICass.N_CmbULowCyl. RANGE : -32768 to 32767 ] ";
                    //

                    break;
                case "DICass.N_CmbtLowTot":
                    description = " Number of counts when Missf.DetectLevel signal is lower or equal to the limit DetSigDiagCal.t_DetectLimit. The counter is decreased when the signal is greater. Sum of all cylinders in DICass.N_CmbULowCyl. RANGE : -32768 to 32767 ] ";
                    //

                    break;
                case "DICass.ST_Diagnose":
                    description = " Status of diagnose. Same as DICass.ST_ExecuteDiag but after first complete engine running diagnose this shows the last condition, diagnose OK condition or diagnose fault condition. If a fault condition is detected then this fault is hold to ignition off. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICass.ST_ExecuteDiag":
                    description = " Status of diagnose. Shows which diagnose is executing. Status of pre or break condition, state, faultcode. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICass.N_Combustion":
                    description = " Number of combustions engine cranking diagnosis have collected data. When DICass.N_Combustion >= DICassCal.N_CmbLimit the diagnose is done. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.U_AvTot":
                    description = " When is diagnos is done this symbol contains the total average value of In.U_KnockDiag signal DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.U_LimAvTot. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "SondDeltaLoad":
                    description = " Result of delta load calculation ] ";
                    //

                    break;
                case "obdPurge.ST_NeedForSpeed":
                    description = " Run Purgediagnose only one standing still sequence, when require vehicle speed > 0 RANGE : 0 - 1 UNIT : BOOL RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "DICRun.N_Combustion":
                    description = " Number of combustions engine running diagnosis have collected data. When DICRun.N_Combustion >= DICRunCal.N_CmbDiagLim the diagnose on DICRun.Cnt1_Cyl, DICRun.Cnt2_Cyl, DICRun.Cnt3_Cyl and DICRun.Cnt4_Cyl is done. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICass.ST_DiagCont":
                    description = " Status of diagnose. Same as DICass.ST_Diagnose but shows always the last fault conditions. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICRun.N_FCutTot":
                    description = " Number of combustions detected during engine running when fuel cut FCUT.CutStatus = 12. DICRun.N_FCutTot is compared in diagnose to DICRunCal.N_FCutLimTot. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "t_O2SPreHeatBefTest":
                    description = " O2 Sensor front Cat. Support points for start temp. Used for time to wait before test of dead sensor. RANGE : -255 - 255 ] ";
                    //

                    break;
                case "CatModProt.m_AirInletFilt":
                    description = " Filtered MAF.m_AirInlet. ] ";
                    //

                    break;
                case "CatModProt.T_LambdaOffset":
                    description = " CatModProt.T_LambdaOffset that is LP filtered ] ";
                    //

                    break;
                case "CatModProt.T_CatalystFilt":
                    description = " Catalyst temperature after the first LP filter ] ";
                    //

                    break;
                case "obdStartTemp":
                    description = " This timer is running until lambda closed loop is entered. ] ";
                    //

                    break;
                case "CatHlTimer":
                    description = " timer incremented during high load ] ";
                    //

                    break;
                case "CatLowLoadTimer":
                    description = " If rpm and load is to low this timer is incremented. If above lim HlTimer is decremented! ] ";
                    //

                    break;
                case "CatIdleTimer":
                    description = " Time out timer when vehi.speed = 0 ] ";
                    //

                    break;
                case "CatOx1CycleTimeHiLim":
                    description = " Hi lim for the cycle time on the front ox sensor signal ] ";
                    //

                    break;
                case "CatFcTimer":
                    description = " Time out timer when fuelcut is enabled ] ";
                    //

                    break;
                case "CatStartTimer":
                    description = " Timer increments every second, used to enable CATMON ] ";
                    //

                    break;
                case "CatDevDiff":
                    description = " The CatSignalQuote multiplied with CatDevLim. ] ";
                    //

                    break;
                case "CatOx2Dev":
                    description = " Difference between CatOx2Filt and in.U_O2SensRear ] ";
                    //

                    break;
                case "CatOx2DevLim":
                    description = " Result from deviation calibration map ] ";
                    //

                    break;
                case "CatReadyTimer":
                    description = " Timer value for cat warm up delay, used for Catalyst evaluation ] ";
                    //

                    break;
                case "CatStableTimer":
                    description = " Timer value for cat warm up delay, used for Adaption_Allowed flag ] ";
                    //

                    break;
                case "CatDiagLevProt.actualFirstTime":
                    description = " Indicates the time that the first fuel factor has been active. ] ";
                    //

                    break;
                case "CatDiagLevProt.actualFuelFac":
                    description = " Indicates the fuelfactor from the cat diagnose. ] ";
                    //

                    break;
                case "CatDiagLevProt.actualSecondTime":
                    description = " Indicates the time that the second fuel factor has been active. ] ";
                    //

                    break;
                case "obdCatDiagLevLambdaIntMeanValue":
                    description = " The meanvalue of the lambda integrator during a cal time before the fuel is controlled by the Cat diag. ] ";
                    //

                    break;
                case "CatOx1CycleTime":
                    description = " Hi lim for the cycle time on the front ox sensor signal ] ";
                    //

                    break;
                case "CatOx1CycleTimeLoLim":
                    description = " Lo lim for the cycle time on the front ox sensor signal ] ";
                    //

                    break;
                case "CatOx1DutyCycle":
                    description = " Calculated duty cycle of the front ox sensor ] ";
                    //

                    break;
                case "IdleCal.ActiveAirRampTime":
                    description = " The delay before the air ramp is reactivated after state1-state2 and state3-state0 transition. RANGE : 0 - 2000 ms RESOLUTION : 1 ms ] ";
                    //

                    break;
                case "IdleCal.n_LOffSmallStep":
                    description = " RESOLUTION : ] ";
                    //

                    break;
                case "IdleCal.v_VehicleLOffRamp":
                    description = " Above this vehicle speed limit will the light off rpm offset be decreased faster, with 1rpm every 50ms. RESOLUTION : 0.1 km/h ] ";
                    //

                    break;
                case "IdleCal.n_LOffStep":
                    description = " RESOLUTION : ] ";
                    //

                    break;
                case "IdleCal.n_IdleMovAutOffs":
                    description = " Extra offset added to the nominal engine speed when idle regulator is active and the car is moving. Used on automatic cars only. ] ";
                    //

                    break;
                case "AreaData.A_ThrottleDeman":
                    description = " Area output from the area master UPDATE : 10 ms RESOLUTION : 1 RANGE : 10 - 1826 ] ";
                    //

                    break;
                case "IdleCal.Q_FirstDrvCompRmp":
                    description = " Decrement air / 50ms until the extra first drive air is ramped to zero. RESOLUTION : 0.01 g/s ] ";
                    //

                    break;
                case "IgnDef.ActualKnockCyl":
                    description = " Actual cylinder number used during the complete knockwindow phases. The normal cylinder counter Crank.Cylinder can be updated to the next cylinder before knock and detectwindow is finished because of owerlap on the 6Cyl variant. RANGE : 0 - 5 => (Cyl 1 to Cyl 6) ] ";
                    //

                    break;
                case "LimEngProt.m_TurboSpeedMaxReq":
                    description = " Max allowed m_request depending on max turbo speed. RANGE : 10 to 2000 mg/c RESOLUTION : 1 mg/c ] ";
                    //

                    break;
                case "EngTipProt.n_EngTrnDiff":
                    description = " Differance between engine speed and turbine speed. RESOLUTION : 1 rpm RANGE : 0 - 7000 rpm ] ";
                    //

                    break;
                case "EngTipProt.X_TipInRampFa":
                    description = " Factor to increase speed of airmass ramp at high airmass requests. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "EngTipProt.m_TipOutVal":
                    description = " Pointer to tip-out matrix. The pointer is calculated as: m_TipInLimit - m_Backlash RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "CanIn.v_VehicleRightFron":
                    description = " Left front wheel speed on TCS/ESP cars RANGE : 0 - 300 km/h RESOLUTION : 1/16 km/h ] ";
                    //

                    break;
                case "EngTipProt.m_TipInVal":
                    description = " Pointer to tip-in matrix. The pointer is calculated as: ( m_TipInLimit - m_Backlash) * X_TipInRampFac RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                    //

                    break;
                case "EmLimCal.t_ClutchDelay":
                    description = " Delay time for detecting a gearshift. See info: EmLimCal.ClutchMode. ] ";
                    //

                    break;
                case "AngleLimProt.OpenDirection":
                    description = " Indicates if tendence of demand value is in open direction RESOLUTION : 0 => close direction 1 => open direction ] ";
                    //

                    break;
                case "AngleLimProt.AD_Difference":
                    description = " Difference between ad_throttleDemand actual and one loop before RESOLUTION : bit ] ";
                    //

                    break;
                case "IEgas.ST_ZeroAdaptionDone":
                    description = " Result of zero adaption of the EGAS current. 0 - No or faulty adaption done 1 - Correct adaption done ] ";
                    //

                    break;
                case "SwitchProt1.A_EngTempSpeed":
                    description = " Area read from a table. Throttle switch point = f(T_Engine,n_Engine) RESOLUTION : 1 mm2 RANGE : 0 - 1800 mm2 ] ";
                    //

                    break;
                case "SwitchProt1.A_SwitchPoint":
                    description = " Limit to detece idle position or not. If throttle poti 1 is below A_SwitchPoint, idle is indicated. RESOLUTION : 1 mm2 RANGE : 0 - 1800 mm2 ] ";
                    //

                    break;
                case "SwitchCal.A_SwitchErrHyst":
                    description = " Hysteresis used to detect if throttle is in idle position. If throttle_area > switchpoint_area + hysteresis_area, not in idle position is indicated. RESOLUTION : 1 mm^2 RANGE : 0 - 1800 mm^2 ] ";
                    //

                    break;
                case "StartAirCal.A_EngineStill":
                    description = " When following conditions is true will this area request be used for the trhottle to maintain a diff pressure ower the throttle for crank sensor diagnostics: OBDCal.OBD2Enabled = 1 and obdOutOfLimits = 0 and ECMStat.ST_EngNotMoving = 1 and more than 1sec since ignkey on When the above coditions is true will following select low be done: if( AreaData.A_Controller < StartAirCal.A_EngineStill ) Out.A_ThrottleDemand = AreaData.A_Controller; else Out.A_ThrottleDemand = StartAirCal.A_EngineStill; RESOLUTION : ] ";
                    //

                    break;
                case "SwitchProt.A_EngTempSpeed":
                    description = " Switch point map area value due to: engine speed and temperature. RESOLUTION : 1 mm^2 RANGE : 0 - 1800 mm^2 ] ";
                    //

                    break;
                case "TorqueProt.M_LimForIgnRed":
                    description = " Torque limit request for ignition reduction. ] ";
                    //

                    break;
                case "TorqueProt.t_CoolingTimer":
                    description = " Shows how long the m_Request has been below the calibration value. ] ";
                    //

                    break;
                case "TorqueProt.M_LimEngTemp":
                    description = " CR-1562 Maximum torque when engine temperature is below temperature TorqueCal.T_LimEngTemp. This value is copied from table TorqueCal.M_EngTempTab, where In.n_Engine is the support variable. This limit is ramped up when engine temperature is above temperature TorqueCal.T_LimEngTemp. RANGE: 0 - 500 Nm ] ";
                    //

                    break;
                case "TorqueProt.t_OverBoostTimer":
                    description = " Shows how long the overboostfunction has been enabled ] ";
                    //

                    break;
                case "TiCalcuCal.p_DiffHysteresis":
                    description = " Determind the hysteresis of pressure over throttle where a manipulation of the ti parameter is allowed if pressure > p_DiffMin the i-part will be frozen if pressure < p_DiffMin - Hysteresis then ti is taken out of ti map RANGE : -300 - 300 kPa RESOLUTION : 0.1 kPa ] ";
                    //

                    break;
                case "IgnDef.t_DetectWindow":
                    description = " Actual time in msec for misfire detect window. RANGE : 0 - 500msec. ] ";
                    //

                    break;
                case "IgnDef.t_TriggerHigh":
                    description = " Actual high time for ignition trigger pin. The ignition cassette is charging the 400V capacitor during this time. The charge time is depending on battery voltage. This symbol is only updating during multi igition mode. RANGE : 2.8 - 10msec. ] ";
                    //

                    break;
                case "PedalMapCal.AD_KDLimitHigh":
                    description = " Limit for kick-down signal if PedalMapProt.AD_AccPedal > limithigh => CMD_kickDown = 1 RANGE: 0 - 1024 ] ";
                    //

                    break;
                case "App7Cal.ST_DubbelInjection":
                    description = " Set this flag to continously enable dubbel injection. The engine must first syncronice after start to enable this function in a correct way. Wery long injection times can be a problem in this mode. The ignition pulses will not be dubbel. ] ";
                    //

                    break;
                case "PedalProt.ms_DebounceTimer":
                    description = " timer to debounce the actual pedal position RESOLUTION : 20 ms (loops) RANGE : 0 - 1280 ms ] ";
                    //

                    break;
                case "PedalMapCal.SentronicFac":
                    description = " CR-934, When Sentronic mode is selected will the pedal position pointer in the pedal map be multiplied with this factor before the interpolation is done to calculate m_Driver. RESOLUTION : 0.001 ] ";
                    //

                    break;
                case "PedalMapCal.AD_KDLimitLow":
                    description = " Limit for kick-down signal if PedalMapProt.AD_AccPedal < limitlow => CMD_kickDown = 0 RANGE: 0 - 1024 ] ";
                    //

                    break;
                case "MaxSpdCal.n_FuelCutOffset":
                    description = " The offset between fuelcut and reducing air only RESOLUTION : 1 rpm ] ";
                    //

                    break;
                case "PAirBefThrotDiagCal.BefThrot_AmbientPDevLim":
                    description = " Maximum allowed pressure deviation between the before throttle pressure sensor and the ambient air pressure sensor. RANGE : 1 - 100 kPa ] ";
                    //

                    break;
                case "PAirAmbientDiagCal.noOfPressureReadings":
                    description = " How many times the pressure comparison must be done to be able to state the ambient pressure sensor to be OK or notOK. RANGE : 1 - 100 ] ";
                    //

                    break;
                case "PAirBefThrotDiagCal.Ambient_InletPDevLim":
                    description = " Maximum allowed pressure deviation between the ambient pressure sensor and the inlet air pressure sensor. RANGE : 1 - 100 kPa ] ";
                    //

                    break;
                case "PAirBefThrotDiagCal.noOfPressureReadings":
                    description = " How many times the pressure comparison must be done to be able to state the ambient pressure sensor to be OK or notOK. RANGE : 1 - 100 ] ";
                    //

                    break;
                case "PAirInletDiagCal.noOfFuelCutPressureReadings":
                    description = " The number of times the PAirInlet sensor is read during fuel cut, before it is considered OK or not OK. RANGE : 1 - 100 ] ";
                    //

                    break;
                case "PAirInletDiagCal.noOfPressureReadings":
                    description = " The number of times the PAirInlet sensor is read before it is considered OK or not OK. RANGE : 1 - 100 ] ";
                    //

                    break;
                case "PAirAmbientDiagCal.Inlet_BefThrotPDevLim":
                    description = " Maximum allowed pressure deviation between the inlet pressure sensor and the before throttle pressure sensor. RANGE : 1 - 100 kPa ] ";
                    //

                    break;
                case "PAirAmbientDiagCal.AmbientPDevLim":
                    description = " Maximum allowed pressure deviation between the ambient pressure sensor and the other two air pressure sensors. RANGE : 1 - 100 kPa ] ";
                    //

                    break;
                case "TEngDiagCal.n_deadCombLi":
                    description = " Number of combustions that is needed before we can decide if the TEngine signal has change enought to say it s alive. RANGE : 0 - 65000 UNIT : comb RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "TEngDiagCal.T_MaxLimphom":
                    description = " Max temperature for limphome calculation. This limit is used stop limphome value. RANGE : -40 - 160 RESOLUTION : 1.0 UPDATE : background ] ";
                    //

                    break;
                case "TEngDiagCal.T_LimForMaxL":
                    description = " If limphome temp is above this limit and a fault either on temp sensor or cooling system is reported, limphome temp is set to max due to force cooling fan to start. This will prevent engine to overheat. RANGE : -40 - 160 RESOLUTION : 1.0 UPDATE : background ] ";
                    //

                    break;
                case "PBefHoseDiagCal.P_DiffInletLim":
                    description = " Min p diff between actualin.p_airinlet and actualin.p_air for starting the test. RANGE : 1 - 500 ] ";
                    //

                    break;
                case "PBefHoseDiagCal.P_DiffBefLim":
                    description = " Min p diff between actualin.p_befthrottle and actualin.p_air for starting the test. RANGE : 1 - 500 ] ";
                    //

                    break;
                case "PBefHoseDiagCal.errorTimeLim":
                    description = " Time for error report RANGE : 1 - 10000 ] ";
                    //

                    break;
                case "FuelLevelCal.SpeedLimStartFiltCoef":
                    description = " Vehi speed lim for not using the startfiltcoef when filtering the fuel level. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "FuelLevelCal.StartVolFuelTankFiltCoef":
                    description = " FilterCoef for lp filter of vol_fueltank after start RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "FuelLevelCal.LoadLoLimStartFiltCoef":
                    description = " m_airinlet low lim for not using the startfiltcoef when filtering the fuel level. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "FuelLevelCal.TimeLimStartFiltCoef":
                    description = " Time lim for the load and speed conditions for not using the startfiltcoef when filtering the fuel level. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "FuelLevelCal.LoadHiLimStartFiltCoef":
                    description = " m_airinlet high lim for not using the startfiltcoef when filtering the fuel level. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "pTankDiagCal.V_FuelMin":
                    description = " The min volume in fuel tank to allow test. ] ";
                    //

                    break;
                case "pTankDiagCal.V_FuelMax":
                    description = " The max volume in fuel tank to allow test. ] ";
                    //

                    break;
                case "pTankDiagCal.compLim":
                    description = " The higher limit of the adaption on actualin.p_fueltank. RANGE : -1000 - 1000 RESOLUTION : 1 UNIT : ] ";
                    //

                    break;
                case "PAirInletDiagCal.fuelCutPressureLimit":
                    description = " The maximum allowed pressure during released pedal test. RANGE : 0 - 100 kpa ] ";
                    //

                    break;
                case "PAirInletDiagCal.Ambient_BefThrotPDevLim":
                    description = " The maximum allowed pressure deviation between the ambient pressure sensor and the before throttle pressure sensor. RANGE : 0 - 50 kPa ] ";
                    //

                    break;
                case "PAirInletDiagCal.Inlet_AmbientPDevLim":
                    description = " The maximum allowed pressure deviation between the ambient pressure sensor and the inlet pressure sensor. RANGE : 0 - 50 kPa ] ";
                    //

                    break;
                case "FuelLevelCal.FuelLevelRippleLim":
                    description = " The ActualIn.Vol_FuelTank signal must not vary more than this limit if the start filt coef should be deactivated. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "CatDiagCal.AutLowLoadTimerLim":
                    description = " For automatic cars! Indicates the value for the low load timer to reach, for decreasing the hltimer. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatDiagCal.LowLoadTimerLim":
                    description = " Indicates the value for the low load timer to reach, for decreasing the hltimer. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatDiagCal.AutLoadTimerHi":
                    description = " For automatic cars! Indicates the minimum load for decreasing the lowload timer. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "MaxVehicleSpeed.m_Airmass":
                    description = " requested airmass from the maximum vehicle speed limitation RESOLUTION : 1 mg/c ] ";
                    //

                    break;
                case "CatDiagCal.AutStage1Threshold":
                    description = " For automatic cars! This is the value that the evalvalue must not exceed to be able to report ok. RANGE : 0 - 100 ] ";
                    //

                    break;
                case "CatDiagCal.Stage1Threshold":
                    description = " This is the value that the evalvalue must not exceed to be able to report ok. RANGE : 0 - 100 ] ";
                    //

                    break;
                case "CatDiagCal.AfStartTimerMin":
                    description = " Indicates limit in airflow to increment the starttimer. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatDiagCal.AutLoadTimerLo":
                    description = " For automatic cars! Indicates the minimum load for not counting the lowload timer. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "CatDiagCal.PosDeltaLoadLim":
                    description = " Indicates the maximum positive delta in load signal for evaluating the catalyst. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "CatDiagCal.AutAfStartTimerMin":
                    description = " For automatic cars! Indicates limit in airflow to increment the starttimer. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatDiagCal.NegDeltaLoadLim":
                    description = " Indicates the maximum negative delta in load signal for evaluating the catalyst. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "pTankDiagCal.maxPressureDiff":
                    description = " Maximum allowed tankpressure-reading-difference. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "EvapTestCal1.PurgeTimeFo":
                    description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                    //

                    break;
                case "EvapTestCal1.TimeForExtr":
                    description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                    //

                    break;
                case "EvapTestCal1.Level1Press":
                    description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal1.Level2Press":
                    description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal1.LambdaIntLi":
                    description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                    //

                    break;
                case "EvapTestCal1.Level3Press":
                    description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal1.pAirAmbient":
                    description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                    //

                    break;
                case "EvapTestCal1.PurgeDiagFl":
                    description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "EvapTestCal2.MinTankPres":
                    description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                    //

                    break;
                case "EvapTestCal1.Preconditio":
                    description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "EvapTestCal1.t_breakWait":
                    description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                    //

                    break;
                case "EvapDiagCal.purgeDiagMaxPDiff":
                    description = " This limit is only used during the purgediag. This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). ] ";
                    //

                    break;
                case "EvapDiagCal.ramp0LoPurgeLim":
                    description = " If the ramp0 is below this value during the special purge diag PURGE_ERROR will be issued. RANGE : -10000 - 0 ] ";
                    //

                    break;
                case "EvapDiagCal.Ramp1allFuel":
                    description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP1 ] ";
                    //

                    break;
                case "EvapDiagCal.purgeDiagAllowedRipple":
                    description = " This limit is only used during the purgediag. This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. ] ";
                    //

                    break;
                case "EvapDiagCal.p_Ramp1MaxDi":
                    description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). ] ";
                    //

                    break;
                case "EvapTestCal1.MinTankPres":
                    description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                    //

                    break;
                case "EvapDiagCal.MaxTankPressure":
                    description = " Maximum allowed tank overpressure ] ";
                    //

                    break;
                case "EvapTestCal3.TimeForExtr":
                    description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                    //

                    break;
                case "EvapTestCal3.PurgeTimeFo":
                    description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                    //

                    break;
                case "EvapTestCal3.Level2Press":
                    description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal3.Level1Press":
                    description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal3.Level3Press":
                    description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal3.LambdaIntLi":
                    description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                    //

                    break;
                case "EvapTestCal3.pAirAmbient":
                    description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                    //

                    break;
                case "pTankDiagCal.maxNrOfFlankShifts":
                    description = " Maximum allowed flankshifts with an amplitude above maxPressureDiff during the measurement time. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "pTankDiagCal.measurementTime":
                    description = " During this time the pressuredifference is measured. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "EvapTestCal3.PurgeDiagFl":
                    description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "EvapTestCal3.Preconditio":
                    description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "EvapTestCal3.t_breakWait":
                    description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                    //

                    break;
                case "DICassCal.N_tLowLimCyl":
                    description = " Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbtLowCyl is compared to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "EvapTestCal2.TimeForExtr":
                    description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                    //

                    break;
                case "EvapTestCal2.PurgeTimeFo":
                    description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                    //

                    break;
                case "EvapTestCal2.Level2Press":
                    description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal2.Level1Press":
                    description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal2.Level3Press":
                    description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                    //

                    break;
                case "EvapTestCal2.LambdaIntLi":
                    description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                    //

                    break;
                case "EvapTestCal2.pAirAmbient":
                    description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                    //

                    break;
                case "EvapTestCal3.MinTankPres":
                    description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                    //

                    break;
                case "EvapTestCal2.PurgeDiagFl":
                    description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "EvapTestCal2.Preconditio":
                    description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "EvapTestCal2.t_breakWait":
                    description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                    //

                    break;
                case "QAirDiagCal.QuickChangeLim":
                    description = " Every xx sample taken there is a check that the meanvalue of the difference between HFM signal and simulated HFM signal is not above this lim. ] ";
                    //

                    break;
                case "IdleDiagCal.maxHighOffset":
                    description = " Maximum positive differece between engine RPM and nominal engine RPM. RANGE : 0 - 32000 ] ";
                    //

                    break;
                case "CatModCal.m_AirInletHigh":
                    description = " Upper limit for MAF.m_AirInlet -> CatModCal.highLoadFiltCoef used. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatModCal.AirInletCoef":
                    description = " FiltCoef used for CatModProt.m_AirInletFilt calculation. RANGE : 0,000 - 1,000 ] ";
                    //

                    break;
                case "CatModCal.m_AirInletLow":
                    description = " Lower limit for MAF.m_AirInlet -> CatModCal.lowLoadFiltCoef used. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatModCal.m_CombFacLim":
                    description = " Load limit to get a combustion factor to compensate for start heat up RANGE : 0-2000 ] ";
                    //

                    break;
                case "ratio_filter_const":
                    description = " Description : Actual filter constant for gear ratio filter Resolution : 1 Bit Range : 1- 1000 ] ";
                    //

                    break;
                case "CatModCal.LowLoadFiltCoef":
                    description = " FiltCoef used for ECMStat.T_Catalyst calculation, low load. RANGE : 0,0000 - 1,0000 ] ";
                    //

                    break;
                case "CatModCal.DecFiltCoef":
                    description = " FiltCoef used when the catalyst temp value is decreasing. RANGE : 0,0000 - 1,0000 ] ";
                    //

                    break;
                case "CatModCal.IncFiltCoef":
                    description = " FiltCoef used when the catalyst temp value is increasing. RANGE : 0,0000 - 1,0000 ] ";
                    //

                    break;
                case "CatModCal.LambdaOffsetCoef":
                    description = " FiltCoef used for lambda offset calculation RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "CatModCal.MedLoadFiltCoef":
                    description = " FiltCoef used for ECMStat.T_Catalyst calculation, medium load. RANGE : 0,0000 - 1,0000 ] ";
                    //

                    break;
                case "CatModCal.HighLoadFiltCoef":
                    description = " FiltCoef used for ECMStat.T_Catalyst calculation, high load. RANGE : 0,0000 - 1,0000 ] ";
                    //

                    break;
                case "DICassCal.N_ULowLimCyl":
                    description = " Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbULowCyl is compare to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.N_ULowLimTot":
                    description = " Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbULowTot is compare to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.t_LimAvTot":
                    description = " Limit where average value ( DICass.t_AvTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.N_tLowLimTot":
                    description = " Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbtLowTot is compared to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.t_LimAvCyl":
                    description = " Limit where average value ( DICass.t_AvCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DICassCal.U_LimAvCyl":
                    description = " Limit where average value ( DICass.U_AvCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "nEngineDiagCal.p_AirInletLim":
                    description = " Underpressure limit in inlet during cranking. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "DICassCal.U_LimAvTot":
                    description = " Limit where average value ( DICass.U_AvTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "QAirDiagCal.n_samplesForEval":
                    description = " Nr of samples taken of the diff signal between calc. airmass from throttle and the HFM signal. When these samples have been taken, the meanvalue of the diff signal is calculated and evaluated. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "QAirDiagCal.AdapLimUseFAdap":
                    description = " Mul fuel adap limit used to determine when to use the multiplicative fuel adap when fuel is in open loop and the adaption is negative. RANGE : -2500 - 2500 ] ";
                    //

                    break;
                case "QAirDiagCal.AdapLimLambdaOLoop":
                    description = " Mul fuel adap limit used to determine when to use the special lambda open loop limit. When the mul fuel adap is negative that indicated a faulty MAF. To not disable lambda closed cloop to easy because of the faulty HFM signal the special lambda open loop limit is used. RANGE : -2500 - 2500 ] ";
                    //

                    break;
                case "O2SensFreqCal.n_EngineMax":
                    description = " Maximum n_Engine during test RANGE: 25 - 8000 rpm RESOLUTION : 1 ] ";
                    //

                    break;
                case "O2SensFreqCal.n_EngineMin":
                    description = " Minimum n_Engine during test RANGE: 25 - 8000 rpm RESOLUTION : 1 ] ";
                    //

                    break;
                case "O2SensFreqCal.m_AirLowLimit":
                    description = " MAF.m_AirInletIgn must exceed this limit RANGE : 0 - 65000 RESOLUTION : 1 mg/c ] ";
                    //

                    break;
                case "O2SensFreqCal.PosDeltaLoadLim":
                    description = " Indicates the maximum positive delta in load signal to evaluate the sond. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "O2SensFreqCal.m_AirHighLimit":
                    description = " MAF.m_AirInletIgn must not exceed this limit RANGE : 0 - 65000 RESOLUTION : 1 mg/c ] ";
                    //

                    break;
                case "CatDiagLevCal.T_CatLim":
                    description = " The catalyst temp must be above this lim to run the diag. ] ";
                    //

                    break;
                case "CatDiagLevCal.t_FromStartLim":
                    description = " Engine must have run more than this time in seconds for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.Ox2LowStartLim":
                    description = " Only start the third diag phase if the rear sensor is above this limit. Otherwise reset diagnose and try again. ] ";
                    //

                    break;
                case "O2SensFreqCal.MaxLeanConstAdap":
                    description = " If the lean shift adaption reach this limit will a diagnostic fault be trigged. ] ";
                    //

                    break;
                case "O2SensFreqCal.MaxRichConstAdap":
                    description = " If the rich shift adaption reach this limit will a diagnostic fault be trigged. ] ";
                    //

                    break;
                case "O2SensFreqCal.NegDeltaLoadLim":
                    description = " Indicates the maximum negative delta in load signal to evaluate the sond. RANGE : 1 - 2000 ] ";
                    //

                    break;
                case "CatDiagCal.Ox2SignalTimeLim":
                    description = " The Ox2 signal must not be below a limit more than this time. If so the cat diagnose is shut off until the OX2 signa is above limit again. RANGE : 0 - 10000 ] ";
                    //

                    break;
                case "CatDiagLevCal.SecondFuelFac":
                    description = " Fuel factor used the first manipulation of the fuel. ] ";
                    //

                    break;
                case "CatDiagLevCal.FirstFuelFac":
                    description = " Fuel factor used the first manipulation of the fuel. ] ";
                    //

                    break;
                case "CatDiagCal.DevDiffFiltCoef":
                    description = " Filter coeficient for filtering modified ox2 signal once again. RANGE : 0 - 100 ] ";
                    //

                    break;
                case "CatDiagCal.AutHlAirFlowMin":
                    description = " For automatic cars! Indicates the minimum air flow to increment the high load timer. RANGE : 1 - 1000 ] ";
                    //

                    break;
                case "CatDiagLevCal.m_LoLim":
                    description = " Engine load must be above this for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.m_HiLim":
                    description = " Engine load must be below this for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.n_HiLim":
                    description = " Engine rpm must be below this for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.t_ThrotClosed":
                    description = " Throt must be closed more than this time for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.n_LoLim":
                    description = " Engine rpm must be above this for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.T_EngLim":
                    description = " Engine temp must be above this for cat diag to run ] ";
                    //

                    break;
                case "CatDiagLevCal.Ox2LowLim":
                    description = " When the rear ox sensor reaches this limit, the timer measuring the time to reach this lim, is stopped. This time is then LP filtered and evaluated. ] ";
                    //

                    break;
                case "CatDiagLevCal.FirstFacTime":
                    description = " Time that the first fuel factor is used. ] ";
                    //

                    break;
                case "CatDiagLevCal.Ox2HiLim":
                    description = " When the rear ox sensor reaches this limit, the timer measuring the time to reach this lim, is stopped. This time is then LP filtered and evaluated. ] ";
                    //

                    break;
                case "CatDiagLevCal.EvalFiltCoef":
                    description = " This coef is used when LP filtering the time that it took for the rear ox2 sensor to reach its limit. ] ";
                    //

                    break;
                case "CatDiagLevCal.OKTimeLim":
                    description = " If the time before the rear ox sensor reaches its limit exceeds this lim, the timer is stopped and the time evaluated. ] ";
                    //

                    break;
                case "O2SensPostCal.t_LambdaLim":
                    description = " The min time that lambda closed loop must be active to allow special fuelcut and test of dead and low rear sensor signal. RANGE : 1000 - 10000 ms ] ";
                    //

                    break;
                case "DetSigDiagCal.n_HighOkLim":
                    description = " To report OK on Detect signal diagnose there need to be a certain nr of high detects per block. A block is DetSigDiagCal.n_CombDetBlock. The OK limit is between n_LowOkLim and n_HighOkLim. High lim is the quote of : (nr of combust in a block * 2(nr of det signals)) / nr of cyl RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DetSigDiagCal.n_CombDetBlock":
                    description = " Number of combustions there is in a detect block. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "DetSigDiagCal.t_DetectLimit":
                    description = " Min limit for detect signals for counter Missf.Det1HighCount and Missf.Det2HighCount. RESOLUTION : 1 us ACCURACY : 8 us ] ";
                    //

                    break;
                case "O2SensPostCal.stableTimerLim":
                    description = " The stable timer must exceed this lim before adap from rear 02 sensor is allowed. RANGE : 0 - 10000 ms ] ";
                    //

                    break;
                case "O2SensPostCal.t_FCutFromStart":
                    description = " The min time since engine start to allow special fuelcut and test of dead rear sensor. RANGE : 10 - 1000 s ] ";
                    //

                    break;
                case "O2SensPostCal.t_HeatPostDeadLim":
                    description = " The time the post sensor heater must be active before the dead test is performed. RANGE : 0 - 100000 ms ] ";
                    //

                    break;
                case "O2SensPostCal.LoadFiltCoef":
                    description = " Filter coefficient used for low-pass filtering of the load signal to create a delta load signal. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "O2SensPostCal.t_FCutPedRel":
                    description = " The time to wait after pedal has been released before the special fuel cut for rear sensor diagnose is allowed. RANGE : 0 - 20000 ms ] ";
                    //

                    break;
                case "O2SensPostCal.PosDeltaLoadLim":
                    description = " The max increase in load allowed for adap from rear 02 sensor. RANGE : 0 - 1000 mg/c ] ";
                    //

                    break;
                case "O2SensPostCal.CoolTempLim":
                    description = " The min engine cool temp allowed for adap from rear 02 sensor. RANGE : 50 - 100 C ] ";
                    //

                    break;
                case "O2SensPostCal.NegDeltaLoadLim":
                    description = " The max decrease in load allowed for adap from rear 02 sensor. RANGE : -1000 - 0 mg/c ] ";
                    //

                    break;
                case "OBDAdap.p_AirBefThrottleComp":
                    description = " Difference between p_AirBefThrottle and p_Air at startup used for calibration of p_AirBefThrottle ] ";
                    //

                    break;
                case "OBDAdap.obdMISFCVS_T_Engine":
                    description = " The engine temp is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdMISFTEMP_n_Engine":
                    description = " The engine speed is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdMISFTEMP_m_AirInlet":
                    description = " The engine load is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdMISFCVS_n_Engine":
                    description = " The engine speed is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdMISFCVS_m_AirInlet":
                    description = " The engine load is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdLTMFT_T_Engine":
                    description = " The engine temp is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdLTAFT_n_Engine":
                    description = " The engine speed is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdLTAFT_m_AirInlet":
                    description = " The engine load is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdMISFTEMP_T_Engine":
                    description = " The engine temp is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdLTMFT_n_Engine":
                    description = " The engine speed is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.obdLTMFT_m_AirInlet":
                    description = " The engine load is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "MissfAdap.MissfTotCntEmis":
                    description = " Number of Total Emission Degradation missfire detections on all cylinders. RANGE : 0 - 65535 UPDATED : At every missfire detection. ] ";
                    //

                    break;
                case "MissfCal.t_DelayMisfStart":
                    description = " Delays the Missfire start from nominell engine speed - 150. RANGE: 0-65000 RESOLUTION : 1 ] ";
                    //

                    break;
                case "MissfCal.nrOfACFilterCombust":
                    description = " Nr of combustion to filter after AC switch on/off RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "MissfCal.nrOfPurgeDiagFilterCombust":
                    description = " Nr of combustion to filter after purge being controlled by diagnose. RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "MissfCal.nrOfFuelCutFilterCombust":
                    description = " Nr of combustion to filter after fuelcut. RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "MissfCal.LowFuelVolFuelLim":
                    description = " Fuel Level limit for reporting lowfuel together with the Misfire errorcode. RANGE : 0 - 1000 ] ";
                    //

                    break;
                case "linkstatus":
                    description = " 0 problem with both rx & tx. Current tx status is actually unknown, but there was a problem before rx failed. 1 problem with tx 2 problem with rx, tx status unknown 3 ok ] ";
                    //

                    break;
                case "MissfCal.LoadAfterFCutLim":
                    description = " If this load limit is exceeded after the fuel is activated again after a fuelcut, the fuelcut filter is set to 10 combustion. This is to always be sure to filter the misfires that often occur after fuelcut. RANGE : 0 or 500 mg/c ] ";
                    //

                    break;
                case "MissfCal.transientSizeLim":
                    description = " Larger transient then this value will trigger transient filetr RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "MissfCal.pAirInletDiffSizeLim":
                    description = " Larger pAirInletDiff then this value will trigger pAirInletDiff filter RANGE : 0 or 65000 ] ";
                    //

                    break;
                case "MissfCal.T_ActiveLim1":
                    description = " If engine start coolant temp is below this limit, we wait until the temperature has passed MisfCal.T_ActiveLim2 - before activating misfire evaluation. Only used for MY05 and later. RANGE : -40 - 215 ] ";
                    //

                    break;
                case "MissfCal.CVSErrorLimHotS":
                    description = " Limit for setting CVS misfire fault the first 1000 revs with hot fuel start criteria. RANGE : 0 - 32767 ] ";
                    //

                    break;
                case "Missf.nrOfFilteredMisfire":
                    description = " Number of misfire that have been filtered (except rpmdiff and detectlevellowlim) RANGE : 0 - 65535 UPDATED : At every missfire detection. ] ";
                    //

                    break;
                case "MissfCal.T_ActiveLim2":
                    description = " If engine start coolant temp is below MisfCal.T_ActiveLim1, we wait until the temperature has passed this limit - before activating misfire evluation. Only used for MY05 and later. RANGE : -40 - 215 ] ";
                    //

                    break;
                case "MissfProt.OverheatAdditive":
                    description = " Weight value used to increase misfire overheat tot counter. RANGE : 0 - 400 UPDATED : Background ] ";
                    //

                    break;
                case "MissfProt.EmissionAdditive":
                    description = " Weight value used to increase misfire emission tot counter. RANGE : 0 - 2000 UPDATED : Background ] ";
                    //

                    break;
                case "Missf.nrOfRPMDiffFilteredMisf":
                    description = " Counts the nr of times the rpm diff filter has filtered a misfire indication. RANGE: 0 - 65000 ] ";
                    //

                    break;
                case "OBDAdap.obdLTAFT_T_Engine":
                    description = " The engine temp is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdapEvap.LeakageResul":
                    description = " Saves the obdEvap.LeakageResult for scantool evalutation, If there is a big leak the result is 1000. RANGE: -3 - 4, 1000 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                    //

                    break;
                case "obdTEngine_mAirperDegree":
                    description = " The factor from loadtable is multipliced with the matrix result. The factor is scale with 2 decimals. RANGE : 0 - 65536 UNIT : mg/C RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdStartTempState":
                    description = " This timer is running until lambda closed loop is entered. ] ";
                    //

                    break;
                case "MissfCal.CVSErrorLimStar":
                    description = " Limit for setting CVS misfire fault the first 1000 revs. Example: 3% misfire = 60 misfire in this limit. RANGE : 0 - 65535 ] ";
                    //

                    break;
                case "obdTEngineLoadFac":
                    description = " On low/high loads the temp is slower/quicker than the matrix returns, therfor a factor from this table based on the result from matrix is used. RANGE : 0 - 32767 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdTEngStartCombFac":
                    description = " Get a start combustion from start temp. If a warm start, the combustion factor is valued higher (more combustions). RANGE : 0 - 32767 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdTEngCombust":
                    description = " Engine combustion support points to get correct amount of m_air from table. Due to interpolation routine can t handle 32 bits, the combustion counter can t be > 32000. Therefor local comb counter is = ECMStat.n_Combustion / 2 RANGE : 0 - 32760 UNIT : comb RESOLUTION : 50% UPDATE : background ] ";
                    //

                    break;
                case "obdTEngine_mAirComb":
                    description = " Switch points for TEngDiagCal.m_LoadFac table that gets correction factor for m_air/comb due to high/low loads. RANGE : 0 - 32000 UNIT : mg/comb RESOLUTION : 0.01 UPDATE : background ] ";
                    //

                    break;
                case "Missf.DetectLevel":
                    description = " This variable shows information from the combustion. It s updated from In.t_IgnDetect1 and In.t_IgnDetec2 depending on which cylinder is active. RANGE : 0-65535 UPDATED : every combustion ] ";
                    //

                    break;
                case "OBDAdap.obdSTFT_m_AirInlet":
                    description = " The engine load is saved when the ShortTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ] ";
                    //

                    break;
                case "OBDAdap.p_TestBefThrottle":
                    description = " Contains the ign.off and ing.on test data of the bef throttle pressure sensor. ] ";
                    //

                    break;
                case "OBDAdap.FAdapWhenQAirError":
                    description = " Contains the mul fuel adap from when qairdiag reported error. ] ";
                    //

                    break;
                case "SyncProt.ST_SyncMode":
                    description = " Number of following combustions the engine have synced on. RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "SyncProt.N_DecreaseCntr":
                    description = " Number of combustions to subtract from SyncCal.n_CombLimit after SyncCal.N_SyncMode1 number of engine cycles. RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "SyncProt.ST_SyncDiagMode":
                    description = " Status of the sync diagnose. 3: Engine not synced. Possible detect fault. 2: Engine synced. Possible cylinder fault. 1: Engine synced. No faults. 0: Diagnose not performed yet. RESOLUTION : 1 combustion ] ";
                    //

                    break;
                case "SyncProt.ST_Det2Fault":
                    description = " Detect 2 fault 2: High fault 1: Low fault 0: No fault RESOLUTION : Fault / No fault ] ";
                    //

                    break;
                case "VIOS_ExceptionReason":
                    description = " Indicate wat has caused a reset: 2 - Bus_error_handler 3 - Adress_error_handler 4 - Illegal_instruction_handler 5 - Zero_divide 6 - CHK_error_handler 7 - TRAPcc_handler 8 - Privilige_violation_handler 9 - Trace_handler 12 - Hard_bkpt 14 - Format_error 15 - Uninitialized_interrupt 16-48 - Other error ] ";
                    //

                    break;
                case "VIOS_ExceptionAddress":
                    description = " This variable include the programcode address at which an exeption occured, like division by zero etc. ] ";
                    //

                    break;
                case "ExecCntrlOption.CMD_FuelPumpRelay":
                    description = " Pump trelay active from kw2000 control option. The pump is active in 15 sec, also if the diag communication is turned of. ] ";
                    //

                    break;
                case "VIOSCal.t_DetWinNormal":
                    description = " The detect window length before sync but after multiign. The actual detect window length is this value - VIOSCal.t_DetBefWin - 1. RESOLUTION: 0.1 ms ] ";
                    //

                    break;
                case "Out.CMD_NCInhibit":
                    description = " DESCRITPION: Inhibit neutral control in order to adapt drive air or on high altitudes. ] ";
                    //

                    break;
                case "ActualIn.ST_TCSLdaTorqueReq":
                    description = " Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid UPDATE : Every 20 ms ] ";
                    //

                    break;
                case "ActualIn.X_ActGearTipin":
                    description = " Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1, with engine break 6 - Gear 2, with engine break 7 - Gear 3 8 - Gear 4 9 - Gear 5 11 - Gear 3, lock up 12 - Gear 4, lock up 13 - Gear 5, lock up 21 - Gear 1, without engine break 22 - Gear 2, without engine break 27 - Gear 3, slipping lockup 28 - Gear 4, slipping lockup 29 - Gear 5, slipping lockup ";
                    //

                    break;
                case "VIOSCal.t_BefDetWin":
                    description = " The time between the ign trigg start flank and start of the detect win. RESOLUTION: 0.1 ms ] ";
                    //

                    break;
                case "SyncProt.ST_Det1Fault":
                    description = " Detect 1 fault 2: High fault 1: Low fault 0: No fault RESOLUTION : Fault / No fault ] ";
                    //

                    break;
                case "ActualIn.ST_TCMIntervTyp":
                    description = " TCM torque request intervention type 0 = No intervention 1 = Reduce torque 2 = Increase torque ] ";
                    //

                    break;
                case "ActualIn.ST_TCMShiftPatt":
                    description = " Active TCM shift pattern 0 = ECO 1 = Pwr 2 = Wusp 3 = Wnt 4 = US1 5 = US2 6 = Hot1 7 = Hot2 8 = Jerk 9 = Rep 10 = DS 11 = Tap U/D ] ";
                    //

                    break;
                case "ECMStat.ST_ThrottleLimpHome":
                    description = " Indicate if throttle is in limphome 1 => Throttle is in limphome. 0 => Throttle is not in limphome. ] ";
                    //

                    break;
                case "FlashSave.ST_GasHybridAct":
                    description = " When this flag and OBDAdap.ST_ActiveDiagSystem == LOBD the system will fit to a gas/gasoline converted car (used by Saab France). Following is different from a normal system when this flag is set: - The injectordriver diagnostic is disabled and this fault indication will only stop lambdacontrol (gas system is active). - Multiignition is only active during start and not when engine speed drops below 450 rpm. ] ";
                    //

                    break;
                case "In.X_ActGearTipin":
                    description = " Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1, with engine break 6 - Gear 2, with engine break 7 - Gear 3 8 - Gear 4 9 - Gear 5 11 - Gear 3, lock up 12 - Gear 4, lock up 13 - Gear 5, lock up 21 - Gear 1, without engine break 22 - Gear 2, without engine break 27 - Gear 3, slipping lockup 28 - Gear 4, slipping lockup 29 - Gear 5, slipping lockup ";
                    //

                    break;
                case "ExecCntrlOption.ThrPWMActive":
                    description = " This flag indicates if the diagnostic current control of the throttle H-bridge is active. This is done by local id control option on the Out.AD_ThrottleDemand. ] ";
                    //

                    break;
                case "HardwareRevision":
                    description = " Hardware revision letter. Example, in a 7.7B unit will the byte in this string be ascii B ] ";
                    //

                    break;
                case "ActualIn.ST_TCMFreezeFrameReq":
                    description = " Request to send Powertrain Freeze Frame to TCM UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P RESOLUTION : 1 UPDATE : x ms ] ";
                    //

                    break;
                case "IgnDef.MulIgnPulses":
                    description = " Max number of multi ignition pulses in 60 degree window when multi ignition mode is enabled: ( 60degress in time - t_DetWinMulti) / (IgnDef.t_TriggerHigh + t_TrigLow) This symbol is max limited to IgnDefProt.MaxMultiPulses. RANGE : 1 - 255 ] ";
                    //

                    break;
                case "Sync.ST_DICFault":
                    description = " Fault information from the sync diagnose. RESOLUTION : 1 ] ";
                    //

                    break;
                case "GearAdap.ST_TractionControl":
                    description = " Adaptive storage for ECMStat.ST_TractionControl. ] ";
                    //

                    break;
                case "IgnDef.IgnActive":
                    description = " Normal or multi ignition is active, ignition trigger output pin is low (it s also active during multi ignition burst ). RANGE : 0 - Not active 1 - Active ] ";
                    //

                    break;
                case "IgnDef.CntLowTrigg":
                    description = " Counts if ignition trigg is low when Multi Ignition 60degree window ends. If this increases a new calibration should be done. RANGE : 0-65535 ] ";
                    //

                    break;
                case "Sync.ST_DICDiagPerformed":
                    description = " Tells if the sync diagnose has been performed. 1: Diagnose has been performed. 0: Diagnose has not been performed yet. RESOLUTION : 1 ] ";
                    //

                    break;
                case "PLT_TriggDelay":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "GearAdap.ST_CruiseIncluded":
                    description = " Adaptive storage for ECMStat.ST_CruiseIncluded. ] ";
                    //

                    break;
                case "ECMStat.ST_CruiseIncluded":
                    description = " Indicates if cruise is present in the system. If the cruise lamp ones have been active will this flag be set and newer cleared. ] ";
                    //

                    break;
                case "DICRun.ST_EngRunDiag":
                    description = " Engine running diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                    //

                    break;
                case "DICass.N_KnkBank1Low":
                    description = " Counts number of detections when In.U_KnockDiag is below the limit KnockDiagCal.errorLevel. This counts for all cylinders for a 4 cylinder engine and counts for (bank 1) cylinder 1,3 and 5 for V6 engine. RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICass.N_KnkBank2Low":
                    description = " Counts number of detections when In.U_KnockDiag is below the limit KnockDiagCal.errorLevel. This counts only for (bank 2) cylinder 2,4 and 6 for V6 engine. RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICRun.ST_MisfStarted":
                    description = " Misfire diagnose is started, this is a pre condition for engine running diagnose. RANGE : 0 - Not Ready 1 - Started ] ";
                    //

                    break;
                case "DICRun.ST_FuelCut":
                    description = " If FCut.CutStatus is indicated a fulcut then this variable is set to FCut.CutStatus. This variable is cleared in diagnose function which operate in background when FCut.CutStatus is 0. The delay Before the variable is change is approx 100ms. RANGE : 0 - No fuel cut >0 - read FCut.CutStatus ] ";
                    //

                    break;
                case "DICass.ST_OfDiagnosis":
                    description = " Status of diagnose. Shows latest condition of the diagnose. This variable is set to 0 in ignition off. The variable status is set every time when a engine running diagnose is done Fault status could be set in cranking or sync diagnose also. RANGE : 0 - Diagnose is not done once 1 - OK, 2 - Fault found ] ";
                    //

                    break;
                case "DICass.ST_CrankDiag":
                    description = " Cranking diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                    //

                    break;
                case "DICass.ST_PreCondOK":
                    description = " Status if pre condition was OK in engine cranking diagnose. RANGE : 0 - Not OK 1 - Pre condition was OK ] ";
                    //

                    break;
                case "DICass.ST_BreakCond":
                    description = " Status if break condition was detected in engine cranking and sync diagnose. RANGE : 0 - No break 1 - Break condition detected ] ";
                    //

                    break;
                case "DICass.ST_SyncDiag":
                    description = " SyncDiag diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started , conditions OK 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                    //

                    break;
                case "DICass.ST_CrankKnk":
                    description = " Cranking diagnos ready for evaluation on Knock diagnose signals. RANGE : 0 - Not Ready 1 - Done ] ";
                    //

                    break;
                case "DICass.ST_CrankMisf":
                    description = " Cranking diagnos ready for evaluation on misfire dignose signals. RANGE : 0 - Not Ready 1 - Done ] ";
                    //

                    break;
                case "obdAirmThrottleAreafilte":
                    description = " ActualIn.A_Throttle >= QAirDiagCal.minArea and ActualIn.A_Throttle <= QAirDiagCal.maxArea RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmHiSpeedTimerFilte":
                    description = " if HiSpeedStartTimer >= QAirDiagCal.timeToStart RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmLoadfilterOK":
                    description = " In.p_AirInlet <= QAirDiagCal.maxLoad and In.p_AirInlet >= QAirDiagCal.minLoad RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmPDiffFilterOK":
                    description = " MAF.p_InlBefQuote >= QAirDiagCal.minPDiff and MAF.p_InlBefQuote <= QAirDiagCal.maxPDiff RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmRPMfilterOK":
                    description = " In.n_Engine <= QAirDiagCal.maxRPM and In.n_Engine >= QAirDiagCal.minRPM RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmThrottleAreaAdpCo":
                    description = " During Throttle adaption or if adaption not has been performed once, the QAirInlet diagnose is restarted until pre conditions is OK. RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "obdAirmTempfilterOK":
                    description = " In.T_Engine >= QAirDiagCal.T_MinForTest and In.T_Engine <= QAirDiagCal.T_MaxForTest RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                    //

                    break;
                case "catStatusReadyTimerOk":
                    description = " Ready timer is ok and monitoring of the second oxygen sensor signal is allowed . ] ";
                    //

                    break;
                case "CatDiagLevProt.nrOfLambdaSwitches":
                    description = " Indicates the nr of lambda switches done during meanvalue calc. of lambda integrator. ] ";
                    //

                    break;
                case "CatDiagLevProt.preConditionOK":
                    description = " Indicates that the precondition for the diag are fulfilled. ] ";
                    //

                    break;
                case "CatStableOK":
                    description = " Indicates when the conditions except dutycycle and periodtime has been OK during a cal. time. (CatDiagCal.StableTimeLim) ] ";
                    //

                    break;
                case "obdCatDiagLevActive":
                    description = " Indicates for the lambda and purge regulation that the diagnose is active. ] ";
                    //

                    break;
                case "MissfCal.pAirInletDiffFilterON":
                    description = " Switch on/off misfire pairinletdiff filter RANGE : 0 or 1 ] ";
                    //

                    break;
                case "MissfCal.TransientFilterON":
                    description = " Switch on/off misfire transient filter RANGE : 0 or 1 ] ";
                    //

                    break;
                case "MissfCal.PurgeDiagFilterON":
                    description = " Switch on/off misfire filter dependant on purge being activated by diagnose. RANGE : 0 or 1 ] ";
                    //

                    break;
                case "MissfCal.ST_PedalTriggFiltActive":
                    description = " Activates the pedal released trigg on the transient filters. RANGE: 0-1 RESOLUTION : 1 ] ";
                    //

                    break;
                case "MissfCal.O2AdjBlockErrLim":
                    description = " The number of block there MissfAdap.MissfTotCntCat > MissfCal.O2AdjMFErrLim and a new set of calibration for O2 sens rear adjustment. RANGE : 0 - 255 RESOLUTION : 1 ] ";
                    //

                    break;
                case "OBDAdap.compPBefIgnOffDone":
                    description = " Indicates if the pressure comparison has been done during ign of. ] ";
                    //

                    break;
                case "OBDAdap.compPAmbIgnOffDone":
                    description = " Indicates if the pressure comparison has been done during ign of. ] ";
                    //

                    break;
                case "OBDAdap.compPInletIgnOffDone":
                    description = " Indicates if the pressure comparison has been done during ign of. ] ";
                    //

                    break;
                case "OBDAdap.p_BefThrotPressureError":
                    description = " Indicates if the p_AirBefThrot diagnose has detected an error during the pressure comparison during ignition off. ] ";
                    //

                    break;
                case "OBDAdap.p_AmbientPressureError":
                    description = " Indicates if the p_Air diagnose has detected an error during the pressure comparison during ignition off. ] ";
                    //

                    break;
                case "OBDAdap.faultyBrakeCounter":
                    description = " Counts the number of fulty brakedowns in the brakelight diag. This result is kept as adaption data to be able to send to the scantool to indicate the latest testresult. ] ";
                    //

                    break;
                case "OBDAdap.MisfCVSErrorLastDriveCycle":
                    description = " Indicates if the misfire cvs diag reported error the last driving cycle. ] ";
                    //

                    break;
                case "OBDAdap.MisfTempErrorLastDriveCycle":
                    description = " Indicates if the misfire temps diag reported error the last driving cycle. ] ";
                    //

                    break;
                case "OBDAdap.p_AirQuickAdaptionDone":
                    description = " Indicates if a p_air sensor adaption without accureate t_engine has been done at least once. ] ";
                    //

                    break;
                case "OBDAdap.p_InletPressureError":
                    description = " Indicates if the p_AirInlet diagnose has detected an error during the pressure comparison during ignition off. ] ";
                    //

                    break;
                case "OBDAdap.p_AirAdaptionDone":
                    description = " Indicates if a p_air sensor adaption has been done at least once. ] ";
                    //

                    break;
                case "obdPurge.BreakCondDurTes":
                    description = " 3 = obdFuelLevel.V_FuelTankFilt < EvapDiagCal.V_FuelMin 4 = obdFuelLevel.V_FuelTankFilt > EvapDiagCal.V_FuelMax RANGE : 1 - 255 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdPurge.BreakPreConditi":
                    description = " 1 = In.v_Vehicle > 0 2 = obdPurge.ST_NeedForSpeed 5 = obdPurge.ST_DiagDone 6 = obdCCV.DiagActive 7 = evapEnvironTempToLow 8 = Environ.inletAirStartTemp() < EvapDiagCal.T_LoLim 9 = Environ.inletAirStartTemp() > EvapDiagCal.T_HiLim 10 = Environ.engineStartTemp() < EvapDiagCal.T_LoLim 11 = Environ.engineStartTemp() > EvapDiagCal.T_HiLim 12 = obdEvap.n_BrakeChanges > pEvapTestCal->nrOfBrakeChangeLim 13 = (In.U_Batt <= 100) || (In.U_Batt >= 160) 14 = ECMStat.p_Diff > -200 15 = Purge.Status != 0 16 = Out_CMD_Purge.hasReportedFault 18 = obdEvap.p_AirAmbientDelta > pEvapTestCal->pAirAmbientDelta 19 = obdpTankAdap.ST_FirstTimeAfterPowerUp == false RANGE : 1 - 255 ";
                    //

                    break;
                case "Missf.Detect1Active":
                    description = " This variable shows if misfire detection for cylinder 1 and 2 is active or for V6 cylinder 1 , 3 and 5. RANGE : 0 - Not active 1 - Active UPDATED : every combustion ] ";
                    //

                    break;
                case "obdMisfAdjustForO2RearSensor":
                    description = " Enables new calibration for AdjustForRearSond during misfire. Enable : If there is more misfire (Missf.nrOfCountedMisfire) than cal. limit (MissfCal.O2AdjMFErrLim) during a misfire temp block, then increase a block error counter. When block error counter >= cal. limit, (MissfCal.O2AdjBlockErrLim) set this flag. Disable : If there is less misfire (Missf.nrOfCountedMisfire) than cal. limit (MissfCal.O2AdjMFOKLim) during a misfire temp block, then increase a block OK counter. When block OK counter >= cal. limit, (MissfCal.O2AdjBlockOKLim) clear this flag. RANGE : 0-1 UNIT : BIT ";
                    //

                    break;
                case "Missf.ST_WasTooCold":
                    description = " Flag to indicate if temperature conditions are fulfilled or not, according to ODB2 regulations. If so, misfire evaluation is performed. Only used for MY05 and later. RANGE : 0 - 1 UPDATED : Background ] ";
                    //

                    break;
                case "obdMisfO2RearAdjBlockOKCnt":
                    description = " Block OK counter for AdjustForRearSond RANGE : 0-255 UNIT : BIT RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdMisfO2RearAdjBlockErrCnt":
                    description = " Block error counter for AdjustForRearSond RANGE : 0-255 UNIT : BIT RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "EngTipCal.ST_EnableTipou":
                    description = " Enable tipout function 0 = Disable Tip-out 1 = Enable Tip-out ] ";
                    //

                    break;
                case "EngTipCal.ST_EnableActG2":
                    description = " Enable the use of In.X_ActGearTipin and special engine break tipin maps. In.X_ActualGear and the normal maps for open converter is used when disabled. 0 = Disable engine break maps 1 = Enable engine break maps ] ";
                    //

                    break;
                case "a601_status":
                    description = " Requested status from the drive master output RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "AreaAdap.ST_ForceAdapDon":
                    description = " ForceAdaption of throttle area has been performed once. UPDATE : 250ms ] ";
                    //

                    break;
                case "AirmassMaster_Status":
                    description = " Identification which select low/high function is active. RESOLUTION : 1 bit RANGE : no bit set => no function active bit 0 => driver pedal is active bit 1 => driver cruise is active bit 2 => select low limit wheel is active bit 3 => select high m_nlow is active bit 4 => select low m_nhigh is active ] ";
                    //

                    break;
                case "m_DriverStatus":
                    description = " Requested status from the pedal map RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "m_nHighStatus":
                    description = " Requested status from the m_nhigh functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "m_RequestStatus":
                    description = " requested status from the airmass master.It s the gobal status for the airmass controller RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "m_nLowStatus":
                    description = " Requested status from the m_nlow functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "m_WheelStatus":
                    description = " Requested status from the wheel master RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "m_IdleStatus":
                    description = " Requested status from the idle speed functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                    //

                    break;
                case "CruiseComCal.v_FCODisable":
                    description = " below this vehicle speed deviation fco is disabled again RESOLUTION : 0.1 km/h RANGE : 0 - 25.5 km/h ] ";
                    //

                    break;
                case "TorqueProt.ST_LimWheelAct":
                    description = " Status showing which function is reducing airmass in Limit Wheel Master. V = Max Vehicle speed limit request. T = Torque Master limit request. ] ";
                    //

                    break;
                case "TorqueProt.ST_TorqMastAct":
                    description = " Status showing which function is limiting torque in Torque Master. M = Manual gear box limitation. A = TCM limit request (Extern limit from bus). S = Automatic gearbox Stall limit request. T = TCS (traction control) limit request. E = Max Engine Torque limitation. R = Reverse limit request. N = Noise reduction limit request. D = Misfire diagnose limit request B = Brake limit request P = Diff Protection System limit request C = Engine temperature limit ] ";
                    //

                    break;
                case "TorqueProt.ST_NoIgnition":
                    description = " Status flag of ignitionretardation: 0 = Ignition retardation allowed 1 = Ignition retardation not allowed ] ";
                    //

                    break;
                case "TorqueProt.ST_LimEngTemp":
                    description = " Status flag of engine temperature torque reduction: 0 = reduction not allowed 1 = reduction allowed ] ";
                    //

                    break;
                case "TorqueProt.ST_filter_n_Eng":
                    description = " indicates if pointer TorqueProt.n_engfilt is filtered or not. 0: filter off, TorqueProt.n_engfilt = In.n_Engine10ms 1: filter on, TorqueProt.n_engfilt = average of In.n_Engine10ms during the last TorqueCal.nosample. (one sample per call of Torquemaster) ] ";
                    //

                    break;
                case "TiCalcuCal.ms_InletUpdate":
                    description = " Update time of delta p_Inlet RANGE : 0 - 255 RESOLUTION : 1 ms ] ";
                    //

                    break;
                case "BoostProt.ST_AdaptAllowed":
                    description = " Indicate if new adaption is allowed, throttle must been closed between each adaption. UPPDATE : every 100 msec. ] ";
                    //

                    break;
                case "BoostProt.NoiseRedAllowed":
                    description = " This flag indicates when noisereduction is allowed from the boostregulating point of view. When noisereduction is active we have full PWM on the APC and this can t be allowed by the boostregulator during certain circustances because there will be big overshoots in load then. ] ";
                    //

                    break;
                case "TorqueCal.ST_IgnOffsEnable":
                    description = " Torque Master Ignition Offset Status. 0 = Ignition Offset Disabled. 1 = Ignition Offset Enabled for all torque functions. 2 = Ignition Offs Enabled for all torque functions except ASR/TCS ] ";
                    //

                    break;
                case "TorqueCal.EnableOverBoost":
                    description = " Enables overboost ] ";
                    //

                    break;
                case "LoadCoProt.ST_ACCrankDon":
                    description = " This flag will be set to 1 when the AC activation during engine crank is finsihed and normal AC-control is active. ] ";
                    //

                    break;
                case "SwitchProt.ST_Transition_0_1":
                    description = " Indicates a pedal2 transition from non-idle into idle RESOLUTION : 0 => no transition in idle 1 => transition in idle ] ";
                    //

                    break;
                case "SwitchProt.ST_PedalIdleNew":
                    description = " New pedal2 idle information RESOLUTION : 0 => not in idle 1 => in idle ] ";
                    //

                    break;
                case "SwitchProt.ST_PedalIdleOld":
                    description = " Old pedal2 idle information RESOLUTION : 0 => not in idle 1 => in idle ] ";
                    //

                    break;
                case "SwitchProt1.ST_ThrottleIdle":
                    description = " Indicates that throttle is in idle position regarding throttle poti 1 RESOLUTION : 0 => not in idle 1 => in idle ] ";
                    //

                    break;
                case "SwitchProt1.ST_Transition_0_1":
                    description = " Indicates a transition from non-idle into idle RESOLUTION : 0 => no transition in idle 1 => transition in idle ] ";
                    //

                    break;
                case "SwitchProt1.PedalDebounce":
                    description = " debouncing timer for safety switch pedal to indicate idle only the transition non-idle to idle has a debouncing time. RESOLUTION : 10 ms RANGE : 0 - 2550 ms ] ";
                    //

                    break;
                case "PedalMapProt.SentronicMo":
                    description = " Actual Sentronic mode (CR-934): 0 - Normal mode 1 - Ramping to Sentronic mode 2 - Sentronic mode active ] ";
                    //

                    break;
                case "SwitchProt.ST_ThrottleIdle":
                    description = " Indicates that throttle is in idle position by comparing throttle area (from poti 2) with the switchpoint area. RESOLUTION : 0 => not in idle 1 => in idle ] ";
                    //

                    break;
                case "LambdaProt.HeatStateFront":
                    description = " The front heater runs throu 4 states with a specified PWM and time, both calibratible for each state (except fourth). The fourth state is always 100% PWM. ] ";
                    //

                    break;
                case "Lambda.ST_AdaptionAllowed":
                    description = " Indicate if the conditions for adapting the lambda regulation to the input from the rear lambda sensor. This variable is controlled in the catalyst diagnose. ON => Adaption allowed. OFF => Adaption not allowed. ] ";
                    //

                    break;
                case "PurgeProt.LocalMaxFuelFa":
                    description = " Maximum allowed fuelfac at actual load/rpm. RANGE : -50.0 - 0.0 % RESOLUTION : 0.1 % ] ";
                    //

                    break;
                case "PurgeCal.MaxAdpFreezeInd":
                    description = " Maximum allowed ratio between the time the purge adaption is frozen resp. unfrozen. RANGE : 0 - 0.99 RESOLUTION : 0.01 ] ";
                    //

                    break;
                case "PurgeCal.HCContEvapFiltF":
                    description = " Filter factor for HC adaption during tank diagnosis. RANGE : 0 - 8 RESOLUTION : 1 ] ";
                    //

                    break;
                case "LambdaCal.ST_LambdaDurTrans":
                    description = " 1 = Closed loop during throttle transient if cooling temp are above TempTrans . 0 = Open loop during throttle transient. ] ";
                    //

                    break;
                case "n_FuelCalc":
                    description = " Number of fuelfactor functions called from FuelMaster. ] ";
                    //

                    break;
                case "ExhaustCal.ST_JerkEnable":
                    description = " DESCRITION: Flag to enable jerk enrichment on automatic cars. ] ";
                    //

                    break;
                case "IgnLOffProt.ST_LOStAftPowUp":
                    description = " Set to 1 if LO has started after powerup ] ";
                    //

                    break;
                case "KnkAdaptCal.ST_SmartGuess":
                    description = " 0- Smart guess disabled. 1- Smart guess enabled. Added by MEA-TLn. RESOLUTION: ] ";
                    //

                    break;
                case "KnkDetProt.ST_EngTEnableKnk":
                    description = " 0- Engine temp below watertemp limit for knock control. 1- Engine temp above watertemp limit for knock control. Added by Mea-TLn 2001-02-23 ] ";
                    //

                    break;
                case "IgnJerkProt.ST_NewAllowed":
                    description = " If new trigg of function are allowed. RANGE : 1 - Allowed. 0 - Not allowed. ] ";
                    //

                    break;
                case "IgnTempCal.ST_ActiveAtIdle":
                    description = " If this bit is set will the temp ignition be activated also at idle. ] ";
                    //

                    break;
                case "IgnLOffCal.ST_AllowRestart":
                    description = " 0: Lightoff ignition will be restarted only after an ECU powerdown (15-20 min Ignkey off). Following starts without preceeding powerdown will LO be disactiveted. 1: Lightoff ignition will be restarted at every engine restart if the normal lightoff conditions are OK. 2: Lightoff ignition will be restarted only after an ECU powerdown (15-20 min Ignkey off). If engine is restarted before IgnLOffProt.NrCombustion is counted down to zero will it countinue with LO but no new value on IgnLOffProt.NrCombustion will be read. ] ";
                    //

                    break;
                case "F_KnkDetCal.SteadySPerShort":
                    description = " Number of steady combustions needed to be able to set the Steadystate_Short flag. ] ";
                    //

                    break;
                case "F_KnkDetCal.SteadySPeriod":
                    description = " Number of steady combustions needed to be able to set ST_SteadyState. ] ";
                    //

                    break;
                case "MIUErrorCountDone":
                    description = " This flag is set if one or more devicedriver faultindications for MIU have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                    //

                    break;
                case "TCMErrorCountDone":
                    description = " This flag is set if one or more devicedriver faultindications for TCM have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                    //

                    break;
                case "TCSErrorCountDone":
                    description = " This flag is set if one or more devicedriver faultindications for TCS have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                    //

                    break;
                case "QAirDiagCal.SampleInterval":
                    description = " Every xx sample taken there is a check that the meanvalue of the difference between HFM signal and simulated HFM signal is not above lim. The nr of samples between these checks are decided in this data. ] ";
                    //

                    break;
                case "O2SensFreqCal.LoadCntDown":
                    description = " Step at negative counting RANGE : 0 - 256 ] ";
                    //

                    break;
                case "CatDiagLevCal.loadInc":
                    description = " Abort the diag if the load has increased more than this limit since diag start. ] ";
                    //

                    break;
                case "O2SensFreqCal.PreMinFlanks":
                    description = " O2 Sensor Pre Cat. Min no of sensor signal flanks for OK criteria RANGE : 0 - 255 ] ";
                    //

                    break;
                case "DICassCal.T_EngLimit":
                    description = " Engine coolant temperature limit, the diagnos is not started if In.T_Engine is below the limit. ] ";
                    //

                    break;
                case "DICassCal.U_BattLimit":
                    description = " Battery voltage limit, the diagnos is not started if In.U_Batt is below the limit. ] ";
                    //

                    break;
                case "obdTEngTempChange":
                    description = " If the In.T_Engine diffs between obdStartTemp >= TEngDiagCal.n_deadDiffLim and vehicle speed > 0 then this variable is set. It s erased when ignition off. RANGE : false - true UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdpTank.p_MeasurementRe":
                    description = " Result from fuel tank pressure measurement. It can be : 0 OKAY 1 NOTOK 4 INTERRUPTED RANGE : 0 - 4 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdpTank.ST_ReportedErro":
                    description = " Show the current reported fault in pTank 0 - no error detected 5 - PTANK LOW 6 - PTANK HI 7 - PTANK RANGE RANGE : 0 - 7 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdpTankAdap.ST_FirstTim":
                    description = " When ECU boots this variable will be set to 1 and cleared at ignition. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background and when ECU boots ] ";
                    //

                    break;
                case "obdFuelLevel.ST_CheckDon":
                    description = " 10 s after start and if fuel level is 10 l more than last reference (probably filled fuel during ignition off). Update reference with current fuel volume else use saved reference. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "obdFuelLevel.ST_Activity":
                    description = " When fuel level diff from start is bigger than FuelLevelCal.V_ActivityCheck this variable is set. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "OBDCal.evapEquipmentExist":
                    description = " This flag indicates if the fueltankpressure sensor and the canister close valve exist in the car. RANGE : 0 - 1 ] ";
                    //

                    break;
                case "OBDCal.prelFaultCountDown":
                    description = " When this flag is set, preliminary faults will not be erased upon an OK report. Instead the faults faultcounter will be decremented. RANGE : 0 - 1 ] ";
                    //

                    break;
                case "EvapDiagCal.p_Ramp0MaxDi":
                    description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). THIS ONLY VALID FOR RAMP0 ] ";
                    //

                    break;
                case "EvapDiagCal.Ramp2allFuel":
                    description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP2 ] ";
                    //

                    break;
                case "EvapDiagCal.Ramp0allFuel":
                    description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP0 ] ";
                    //

                    break;
                case "OBDAdapEvap.N_OutOfLimTe":
                    description = " Every time that precondition has been fullfiled except the temperature limit, this counter will be increased. When counter >= 3 the diagnose will report readiness. It s cleared when diagnose reports either fault or ok; RANGE: 0-255 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                    //

                    break;
                case "OBDAdapEvap.Evap2BigResD":
                    description = " This counter will increase if the leakageresult i evap diagnose is a bigger diff than 2 compared to the last result in EvapStack and the result will not be inserted to the stack. Next time a diagnose has performed the result will automaticly be inserted due to this counter > 0. It will be set to 0 when a value is inserted into the stack. RANGE: 0 - 1 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                    //

                    break;
                case "EvapDiagCal.p_Ramp2MaxDi":
                    description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). THIS ONLY VALID FOR RAMP2 ] ";
                    //

                    break;
                case "TEngDiagCal.n_deadDiffLi":
                    description = " When engine start temp (obdStartTemp) differs more than this limit, the Tengine signal is alive, else it s dead. RANGE : 0 - 255 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                    //

                    break;
                case "CatDiagCal.DecrStepLowLoad":
                    description = " The step with which the low load timer is decremented. RANGE : 1 - 100 ] ";
                    //

                    break;
                case "CatDiagLevCal.v_VehicleLim":
                    description = " Perform diagnose only if vehicle speed is less than this lim. ] ";
                    //

                    break;
                case "CatDiagLevCal.loadDec":
                    description = " Abort the diag if the load has decreased more than this limit since diag start. ] ";
                    //

                    break;
                case "CatDiagLevCal.nrOfLambdaSwitches":
                    description = " This is the number of lambda switches the integrator should perform during the integrator sampling for meanvalue calc. ] ";
                    //

                    break;
                case "EvapTestCal1.nrOfBrakeCh":
                    description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                    //

                    break;
                case "EvapDiagCal.HCContFiltFa":
                    description = " Filter factor for HC adaption during tank diagnosis. RANGE : 0 - 8 RESOLUTION : 1 ] ";
                    //

                    break;
                case "EvapDiagCal.n_TooMuchVapourLim":
                    description = " The number of interrupted vapour tests before vehicle speed is demanded. ] ";
                    //

                    break;
                case "EvapDiagCal.T_StartExecC":
                    description = " If ExecCntrlOption.EvapColdStart is enabled the purge startlim needs to be lower. This calib is used as a diff from PurgeCal.T_EngineLim. (PurgeCal.T_EngineLim - (ExecCntrlOption.EvapColdStart ? EvapDiagCal.T_StartExecCtrl : 0)) UNIT: C ] ";
                    //

                    break;
                case "EvapTestCal1.maxnrOfRamp":
                    description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                    //

                    break;
                case "EvapTestCal3.maxnrOfRamp":
                    description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                    //

                    break;
                case "FuelLevelCal.V_ActivityCheck":
                    description = " Volume difference to have to say that the fuellevelsensor is not stuck. RANGE : 0 - 100,0 l ] ";
                    //

                    break;
                case "EvapTestCal3.nrOfBrakeCh":
                    description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                    //

                    break;
                case "EvapTestCal2.nrOfBrakeCh":
                    description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                    //

                    break;
                case "EvapTestCal2.maxnrOfRamp":
                    description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                    //

                    break;
                case "AdpFuelProt.ST_FirstAdapt":
                    description = " Indicate from fuel adaption to master if first adaption is in progress. RANGE : 1 = Disable purge 0 = Normal scheduler ] ";
                    //

                    break;
                case "ThrErr2Prot.RomErrCounter":
                    description = " ROM error in 592 must been detected 4 times before error in 339 is set. This counter are used for this. ] ";
                    //

                    break;
                case "ThrErr2Prot.StackErrCounter":
                    description = " Stack overflow error in 592 must been detected 4 times before error in 339 is set. This counter are used for this. ] ";
                    //

                    break;
                case "ThrErrProt.StackErrCounter":
                    description = " Stack overflow error in 592 must been detected 4 times before error in 339 is set. This counter are used for this. ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_PWMClose60":
                    description = " Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 60 (AD value). ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_PWMClose70":
                    description = " Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 70 (AD value). ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_PWMClose50":
                    description = " Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 50 (AD value). ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_PWMClose40":
                    description = " Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 40 (AD value). ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_PWMClose30":
                    description = " Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 30 (AD value). ] ";
                    //

                    break;
                case "ThrLimpAdap.ST_ThrottleLimpHome":
                    description = " Adaptive storage for the actual limphome condition. ] ";
                    //

                    break;
                case "v_VehicleConstant":
                    description = " Constant for calculating vehiclespeed In.v_Vehicle . SpeedConstant = 20 * PI * Radius[mm] * 3600[sec/h] / Pulses_per_rev Example1: Example2: Radius = 296 mm Radius = 316 mm Pulses_per_rev = 29 Pulses_per_rev = 29 Then is SpeedConstant = 2308746 Then is SpeedConstant = 2464742 ] ";
                    //

                    break;
                case "REPCal.ST_GearShiftInhib":
                    description = " Enables gear shift inhibit function 0 = Do not use function 1 = Only use CMD_GearShiftInhibit 2 = Use both CMD_GearShiftInhibit and CMD_REP 3 = As 2 even without cruise The conditions to enable gear shift inhibit are: 1500 < In.n_Engine < 4000 rpm Out.X_AccPedal < 80% In.v_Vehicle > 50km/h ] ";
                    //

                    break;
                case "IgnDef.MultiIgnMode":
                    description = " Shows the status of multi ignition. RANGE : 1-4 1 - Multi ignition enabled 2 - Multi ignition disabled 3 - Multi ignition stopps 4 - Multi ignition start request ] ";
                    //

                    break;
                case "WorkShopSnapshotBuffer":
                    description = " * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "LastModifiedBy":
                    description = " Name of the PC interface that was connected when last modification of data was done. * * Warning, check if this symbol is displayed correctly * * ";
                    //

                    break;
                case "VIOS_ResetType":
                    description = " Last containg of Reset Status Register. Reference MC68332 SIM manual page 4-9. MSB bit 7 - External reset bit 6 - Powerup Reset bit 5 - Watchdog reset bit 4 - Halt Monitor reset bit 3 - Not Used bit 2 - Loss of clock reset bit 1 - System reset LSB bit 0 - Test submodule reset ] ";
                    //

                    break;
            }
            return description;
        }

        static private string toEN(string symbolname)
        {
            string description = "";

            switch (symbolname)
                {
                    case "E85.X_EthAct_Tech2":
                        description = "Ethanol adaption value (percentage E85 in the tank). Resolution is 0.1 %";
                        break;
                    case "AirComp.TempComp":
                        description = "Factor for compensation of m_request depending on inlet air temperatur. Resolution is 0.001 %.";


                        break;
                    case "AirComp.P1":
                        description = "Actual pressure before throttle when calibration of area matrix was done. Resolution is 0.1 kPa.";


                        break;
                    case "AirComp.RatioP1P2":
                        description = "Pressure P1 divided with actual pressure. Resolution is 0.001.";


                        break;
                    case "AirComp.PresComp":
                        description = "Factor for compensation of m_request depending on pressure before throttle. Resolution is 0.001 %.";


                        break;
                    case "AirComp.Comp":
                        description = "Factor for compensation of m_request depending on both temperature and pressure. Resolution is 0.001 %.";


                        break;
                    case "AirComp.LimTempComp":
                        description = "Factor for compensation of \"BoostCal.I_LimTab\" depending on inlet air temperature. Resolution is 0.001 %.";


                        break;
                    case "AirComp.LimPresComp":
                        description = "Factor for compensation of \"BoostCal.I_LimTab\" depending on ambient pressure. Resolution is 0.001 %.";


                        break;
                    case "AirComp.LimComp":
                        description = "Factorfor compensation of \"BoostCal.I_LimTab\" depending on both temperature and pressure. Resolution is 0.001 %.";


                        break;
                    case "AirCompCal.T_AirSP":
                        description = "Inlet air temperature support points. Resolution is 1 °C.";


                        break;
                    case "AirCompCal.AirTab":
                        description = "Table for compensation of m_request depending on inlet air temperature. Resolution is 0.001 %.";


                        break;
                    case "AirCompCal.Hysteres":
                        description = "If pressure before throttle > atmosphere pressure but not more than this hysteres, compensation factor partially used. Resolution is 1 mbar.";


                        break;
                    case "AirCompCal.PressMap":
                        description = "Matrix for actual pressure before throttle when calibration of area matrix was done. Resolution is 0.1 kPa.";


                        break;
                    case "AirCompCal.p_PresSP":
                        description = "Support points for pressure compensation of m_request. Resolution is 0.001 %.";


                        break;
                    case "AirCompCal.PresTab":
                        description = "Table for pressure compensation of m_request. Resolution is 0.001 %.";


                        break;
                    case "AirCompCal.T_AirLimSP":
                        description = "Inlet air temperature support points. Resolution is 1 °C.";


                        break;
                    case "AirCompCal.AirLimTab":
                        description = "Table for compensation of m_request depending on inlet air temperature. Resolution is 0.001 %.";


                        break;
                    case "AirctlData.FreezeIPart":
                        description = "Status flag to freeze I-part. Resolution is 1 bit. Interval is 10 ms.";


                        break;
                    case "AirctlData.m_CtrlOutput":
                        description = "Airmass output of the I-controller. Resolution is 1 mg/c.";


                        break;
                    case "AirctlData.Actual":
                        description = "Actual airmass. Copied from the variable MAF.m_AirInlet. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.Request":
                        description = "Requested airmass. Copied from the variable Air.m_Request.AirMass. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.MaxAirmass":
                        description = "Maximum airmass depending on engine speed. Calculated out of the default airmass map. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.ControllerOut":
                        description = "Airmass output from the airmass controller. Addition of the PID part at closed loop. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.DeltaN0":
                        description = "Airmass deviation for the loop (actual - 1). Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.DeltaN1":
                        description = "Unfiltered airmass deviation for the actual loop. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.iPartN0":
                        description = "I-part of the airmass-controller for the loop (actual - 1). Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.iPartN1":
                        description = "I-part of the airmass-controller for the actual loop. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.iPartRest":
                        description = "I-part rest of the airmass-controller. Resolution is 1 mg/c. Interval is 10 ms.";


                        break;
                    case "AirctlData.Ti":
                        description = "Parameter for the I-part of the airmass-controller. Resolution is 1 ms. Interval is 10 ms.";


                        break;
                    case "TiCalcuProt.p_DeltaIn50ms":
                        description = "Delta inlet pressure update every certain time. Can be calibrated. Resolution is 0.1 kPa.";


                        break;
                    case "TiCalcuProt.p_InletOld":
                        description = "Old inlet pressure. Resolution is 0.1 kPa.";


                        break;
                    case "AirCtrlCal.t_mReqDelay":
                        description = "Delay time (number of 10ms loops) for m_request used in the airmass controller. This delay simulates the delays in the engine after a transient. Resolution is 10 ms.";


                        break;
                    case "AirCtrlCal.DirectionHyst":
                        description = "Hysteresis to detect open or close direction of m_request. Resolution is 1 mg/c.";


                        break;
                    case "AirCtrlCal.x_axis":
                        description = "Airmass values for x-axis. Input parameter for the table AirCtrlCal. Resolution is 1 mg/c.";


                        break;
                    case "AirCtrlCal.y_axis":
                        description = "Engine speed values for y-axis. Input parameter for the table AirCtrlCal. Resolution is 1 rpm.";


                        break;
                    case "AirCtrlCal.map":
                        description = "Area information. Describes the relation between airmass, engine speed and area. Area = function(airmass,engine speed). Resolution is 10 bit.";


                        break;
                    case "AirCtrlCal.m_MaxAirTab":
                        description = "Airmass value from controller where area map has reached max-area and there is no point to increase the I-part. Resolution is 1 mg/c.";


                        break;
                    case "AirCtrlCal.p_DeltaInlet":
                        description = "If the delta inlet pressure is below this value when the acclerator pedal is moving from NOT released to released, the throttle I-part shall be set to zero. Resolution is 0.1 kPa.";


                        break;
                    case "AirCtrlCal.t_PedReceRel":
                        description = "Maximum time after released accelerator pedal when the throttle I-part shall be removed if the delta throttle pressure is big (negative). Resolution is 1 msec.";


                        break;
                    case "AreaCal.Size":
                        description = "Number of values for x-axis. Specifies the table AreaCal.table";


                        break;
                    case "AreaCal.Area":
                        description = "Values for x-axis. Specifies the table AreaCal.table";


                        break;
                    case "AreaCal.Table":
                        description = "Conversion area into relative throttle bits. Bits = funtion(area). Resolution is 1.";


                        break;
                    case "AreaCal.iPartMax":
                        description = "I-part of airmass controller when to adapt throttle area (increase)";


                        break;
                    case "AreaCal.m_ReqDiff":
                        description = "Adapt throttle area only if abs(AirCtrlProt.m_ReqFilt-AirctlData.Actual) <= m_ReqDiff";


                        break;
                    case "AreaCal.A_MinAdap":
                        description = "Mininum value of AreaAdap.A_Throttle";


                        break;
                    case "AreaCal.A_MaxAdap":
                        description = "Maximum value of AreaAdap.A_Throttle";


                        break;
                    case "AreaCal.n_EngOffs":
                        description = "Maximum offset of engine speed from nominal idle speed";


                        break;
                    case "AreaCal.N_Stable":
                        description = "The time the conditions must be stable to adapt area (N * 250ms)";


                        break;
                    case "AreaCal.N_StableForce":
                        description = "The time the conditions must be stable to adapt area (N * 250ms)";


                        break;
                    case "AreaCal.m_ReqFacForceAdap":
                        description = "Percent of m_Request to start throttle area adaption.";


                        break;
                    case "AreaCal.p_InlBefQuote":
                        description = "Limit on MAF.p_InlBefQuote for throttle area adaption to run.";


                        break;
                    case "AreaCal.Q_AirInlet":
                        description = "Maximum airflow to allow force-adaption";


                        break;
                    case "AreaCal.MaxDelta":
                        description = "Largest deviation of I_PartN1 during 1 second that allows forced area-adaption";


                        break;
                    case "AreaCal.Enable_Venturi":
                        description = "Calculate air mass with Venturi valve";


                        break;
                    case "AreaCal.Q_VenturiSP":
                        description = "Support pointer for calculating the loss of airflow through the venturi";


                        break;
                    case "AreaCal.Q_VenturiTab":
                        description = "Table for calculating the loss of airflow through the venturi";


                        break;
                    case "StartAir.ST_FuelCut":
                        description = "Indicate that start air routine demands fuel cut because accelerator pedal is pressed.";


                        break;
                    case "Block.Timer":
                        description = "Timer for idle block adaption. Will be started if demand throttle bits = 0. Resolution is 10 ms/bit. Interval is 10 ms.";


                        break;
                    case "Block.Timer1":
                        description = "Debouncing timer for idle block adaption. Will be started if powerstage will be activated. Resolution is 10 ms/bit. Interval is 10 ms.";


                        break;
                    case "Block.Timer2":
                        description = "Debouncing timer for idle block adaption. Will be used to open the throttle again before switching off after adaption in power off to avoid a sticking throttle. Resolution is 10 ms/bit. Interval is 10 ms.";


                        break;
                    case "Block.AD_ThrottleDemand":
                        description = "Shadow register from Out.AD_ThrottleDemand. Will be used and manipulated while idle block adaption is active. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "Block.AD_ThrottleSum":
                        description = "Variable that adds the AD-value for the idle throttle block over a specified time, to calculate the adaptive VIOSAdap.AD_ThrottleBlock. Resolution is 1. Interval is power ON and power OFF.";


                        break;
                    case "Block.New":
                        description = "Variable which stores the new block value. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "Block.Min":
                        description = "Variable which stores the minimum value of an adaption. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "Block.Max":
                        description = "Variable which stores the maximum value of an adaption. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "Block.ms_Counter":
                        description = "Variable which stores the ECMStat.msCounter if ignition and main relay is switched off. 30 seconds later the block adaption will be activated. Resolution is 1 ms. Interval is once if adaption is active during power off.";


                        break;
                    case "Block.AD_TmpThrBlock":
                        description = "Variable used for temporary storage of throttle block adaption value. Resolution is 1 bit. Interval is power ON and power OFF.";


                        break;
                    case "Block2.FCOActive":
                        description = "Status for fuel-cut-off-logic to cut the fuel. Resolution is 1 bit. Interval is 10 ms.";


                        break;
                    case "Block2.ThrottleON":
                        description = "Status for throttle ON/OFF logic. Resolution is 1 bit. Interval is 10 ms.";


                        break;
                    case "BlockPoti2.Timer":
                        description = "Timer for idle block adaption poti2. Will be started if demand throttle bits = 0. Resolution is 10 ms/bit. Interval is 10 ms.";


                        break;
                    case "BlockPoti2.Timer1":
                        description = "Debouncing timer for idle block adaption poti2. Will be started if powerstage will be activated. Resolution is 10 ms/bit. Interval is 10 ms.";


                        break;
                    case "BlockPoti2.AD_ThrottleSum":
                        description = "Variable that adds the AD-value for the idle throttle block poti2 over a specified time, to calculate the adaptive VIOSAdap.AD_ThrottleBlock. Resolution is 1. Interval is power ON and power OFF.";


                        break;
                    case "BlockPoti2.New":
                        description = "Variable which stores the new block value from poti2. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "BlockPoti2.Min":
                        description = "Variable which stores the minimum value of an adaption of poti2. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "BlockPoti2.Max":
                        description = "Variable which stores the maximum value of an adaption of poti2. Resolution is 1 bit. Interval is once if adaption is active.";


                        break;
                    case "BlockPoti2.ms_Counter":
                        description = "Variable which stores the ECMStat.msCounter if ignition and main relay is switched off. 10 seconds later the block adaption of poti2 will be activated. Resolution is 1 ms. Interval is once if adaption is active during power off.";


                        break;
                    case "BlockPoti2.AD_TmpThrBlock":
                        description = "Variable used for temporary storage of throttle block adaption value. Resolution is 1 bit. Interval is power ON and power OFF.";


                        break;
                    case "AreaAdap.BlockStatus":
                        description = "Status for adaption of the mechanical block of the throttle poti. Resolution is 1 bit. Interval is power ON and power OFF.";


                        break;
                    case "AreaAdap.Pot2BlockStatus":
                        description = "Status for adaption of the mechanical block of the throttle poti2. Resolution is 1 bit. Interval is power ON and power OFF.";


                        break;
                    case "AreaAdap.ST_AdapDone":
                        description = "Normal adaption of throttle area has been performed once. Interval is 250ms.";


                        break;
                    case "AreaAdap.ST_ForceAdapDone":
                        description = "Force-adaption of throttle area has been performed once. Interval is 250ms.";


                        break;
                    case "AreaAdap.ST_AreaAdapLim":
                        description = "The area adaption function tries to adapt the area more than the limit, this indicates that there might be a leakage in the intake.";


                        break;
                    case "AreaAdap.ST_ForceAdapAct":
                        description = "The force adaption has been activated ";


                        break;
                    case "AreaAdap.A_Throttle":
                        description = "Adaption of throttle area. Interval is 250ms.";


                        break;
                    case "CruiseProt.LowLimActive":
                        description = "Indicates that the lower limit of the integrator is active. Integrator <= maximum negative torque";


                        break;
                    case "CruiseProt.ms_IntegrTimer":
                        description = "Delay timer to switch to v_limit positive if integrator is at maximum negative torque. Resolution is 100 ms.";


                        break;
                    case "CruiseProt.CCLampDelay":
                        description = "Counter for delay if cruise lamp is switched off while TIP button was used. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.ABCZeroAgain":
                        description = "Checks if in cruisestatus = 1 the abc inputs are zero again to detect shortcuts. Resolution is \"0\" => not zero.";


                        break;
                    case "CruiseProt.ABCOffTimer":
                        description = "Timer to debounce the abc = 0 in cruisestatus = 1 again. Resolution is 20ms.";


                        break;
                    case "CruiseProt.ABCOnTimer":
                        description = "Timer to debounce the \"Abc = 1 test\". Resolution is 20ms.";


                        break;
                    case "CruiseProt.ABCTimer":
                        description = "Timer to debounce the \"Abc = 0 test\". Resolution is 20ms.";


                        break;
                    case "CruiseProt.Res":
                        description = "\"0\" => \"res\" switch not activated \"1\" => \"res\" switch activated";


                        break;
                    case "CruiseProt.Tip":
                        description = "\"0\" => \"tip\" switch not activated \"1\" => \"tip\" switch activated";


                        break;
                    case "CruiseProt.On":
                        description = "\"0\" => \"on\" switch not activated \"1\" => \"on\" switch activated";


                        break;
                    case "CruiseProt.Off":
                        description = "\"0\" => \"off\" switch not activated \"1\" => \"off\" switch activated";


                        break;
                    case "CruiseProt.VMaxStatus1":
                        description = "\"0\" => vehicle speed via ABS sensor above 227 km/h \"1\" => vehicle speed via ABS sensor below 220 km/h";


                        break;
                    case "CruiseProt.VMaxStatus2":
                        description = "\"0\" => vehicle speed via CAN above 227 km/h \"1\" => vehicle speed via CAN below 220 km/h";


                        break;
                    case "CruiseProt.v_ActualSource":
                        description = "\"1\" => actual vehicle speed taken from CAN \"0\" => actual vehicle speed taken from front sensor";


                        break;
                    case "CruiseProt.OnOffTransition":
                        description = "Transition flag for the debounced switches \"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.TipTransition":
                        description = "\"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.SetTransition":
                        description = "\"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.ResTransition":
                        description = "\"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.OnTransition":
                        description = "Transition for the not debounced switches \"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.OffTransition":
                        description = "Transition for the not debounced switches \"0\" => switch was off before \"1\" => switch was on before";


                        break;
                    case "CruiseProt.GearStatus":
                        description = "Global information, which gear is choosen generated for both automatic and manual transmission car \"0\" => no gear is in \"1\" => gear is in";


                        break;
                    case "CruiseProt.FCOAllowed":
                        description = "Info from cruise control to allowe fuel-cut-operation even if cc_airmass is > 0 but below m_nLow. Resolution is \"0\" => not allowed.";


                        break;
                    case "CruiseProt.ABCZeroBeforeCruise":
                        description = "CruiseControlSwitches were zero before Cruise Controller was switched on. It's always checked in CC-Off mode. Reset while engine cranking. Resolution is \"0\" => at least one switch was not zero. CC not allowed.";


                        break;
                    case "CruiseProt.ABCCheckDone":
                        description = "ABC check is done. This bit is reset in cruisestatus = 1 and while engine cranking. Resolution is \"0\" => Check is not done.";


                        break;
                    case "CruiseProt.SwitchViaTip":
                        description = "Status information that the cruise control was switched off via tip. Resolution is 1 bit.";


                        break;
                    case "CruiseProt.BrakeClutchTimer":
                        description = "Timer to debounce the brake and clutch info for the brake-before-cruise test. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.BrakBefCruise":
                        description = "Status information that the brakelight switch as well as the brakeclutch switch has been activated. Before you are allowed to activate cruise control the \"Brake before cruise\" test has to be passed. Resolution is 1 bit.";


                        break;
                    case "CruiseProt.CruiseValid":
                        description = "Status information that cruise status shows cruise is allowed and a valid calculation has been done that means the cc_50 and cc_100 file have to be called at least once. Resolution is 1 bit.";


                        break;
                    case "CruiseProt.MaxSpeedValid":
                        description = "Status information that maximum speed limit is valid while cruise is active and driver overwrites the cruise airmass. Resolution is 1 bit.";


                        break;
                    case "CruiseProt.MaxSpeedVal2":
                        description = "Status information that maximum speed limit is valid while cruise is not active. Resolution is 1 bit.";


                        break;
                    case "CruiseProt.ms_SetTimer":
                        description = "As long as the timer CruiseProt.ms_SetTimer is below CruiseCal.SetTimer v_Request = v_Actual otherwise v_Request = MaxVehicCal.v_MaxSpeed. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.ms_TapUpTimer":
                        description = "As long as the timer CruiseProt.ms_TapUpTimer is below CruiseCal.TapUpTimer v_Request = v_Actual otherwise v_Request = MaxVehicCal.v_MaxSpeed. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.SetDebouncing":
                        description = "Debouncing timer for \"set\" switch of cruise control switches. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.TipDebouncing":
                        description = "Debouncing timer for \"tip\" switch of cruise control switches. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.TipTimer":
                        description = "Timer for \"tip\" function to limit tip-function to the calibrated time. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.ResDebouncing":
                        description = "Debouncing timer for \"res\" switch of cruise control switches. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.OnDebouncing":
                        description = "Debouncing timer for \"On/Off\" switch of cruise control switches. Resolution is 20 ms.";


                        break;
                    case "CruiseProt.ComFac":
                        description = "Comfort factor to decrease the a_Request1 if you are in state 4,5,6,7. Resolution is 1 %.";


                        break;
                    case "CruiseProt.v_DeltaFactor":
                        description = "Factor to decrease a_request0 to a_Request1 depending on v_Limit and v_deviation = 0. Resolution is 1 %.";


                        break;
                    case "CruiseProt.InitFac":
                        description = "Initial factor to decrease the original init_puls if you are in state 4,5,6,7. Resolution is 1 %.";


                        break;
                    case "CruiseProt.M_GradientNeg":
                        description = "Gradient limitation in engine torque for negative torque changes. Resolution is 1 Nm/s.";


                        break;
                    case "CruiseProt.M_GradientPos":
                        description = "Gradient limitation in engine torque for positive torque changes. Resolution is 1 Nm/s.";


                        break;
                    case "CruiseProt.M_GradWheelNeg":
                        description = "Gradient limitation in wheel torque for negative torque changes. Resolution is 0.1 Nm/s.";


                        break;
                    case "CruiseProt.M_GradWheelPos":
                        description = "Gradient limitation in wheel torque for positive torque changes. Resolution is 0.1 Nm/s.";


                        break;
                    case "CruiseProt.M_DeltaWheel":
                        description = "Delta wheel torque based on delta acc. and vehicle constant. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_DelWheelLim":
                        description = "Limited delta wheel torque based on delta acc. and vehicle constant. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_DelWheelOld":
                        description = "Limited delta wheel torque based on delta acc one loop before. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_DelWheel50":
                        description = "Delta wheel torque based on delta acc and vehicle constant for 50ms loop(M_DelWheelLim divided by 2). Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_WheelIntegr":
                        description = "Delta wheel torque integrator. Integrates the M_DelWhell50 every 50ms. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_Accelerate":
                        description = "Actual wheel torque based on actual acceleration and vehicle constant. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_WheelActual":
                        description = "Actual wheel torque base on actual engine torque and gearratio. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_RoadLoad0":
                        description = "Unfiltered road load. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_DefOffset":
                        description = "Negative offset to default roadload will be used to initialize the M_WheelIntegr. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_DefLowRange":
                        description = "Default roadload - M_DefOffset. Resolution is 0.1 Nm.";


                        break;
                    case "CruiseProt.M_FiltRoadOld":
                        description = "Old filter output for road load. Resolution is 0.1 * 256 Nm.";


                        break;
                    case "CruiseProt.M_FiltRoad":
                        description = "Actual filter output for road load. Resolution is 0.1 / 256 Nm.";


                        break;
                    case "CruiseProt.M_DeltaRoad":
                        description = "Deviaition between default and actual roadload. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.M_DefaultRoad":
                        description = "Default roadload out of the map. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.M_Engine":
                        description = "Integrated wheel torque converted to engine torque. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.M_EngVehSpeed":
                        description = "Integrated engine torque which is valid for maximum vehicle speed limitation(no TIP influence). Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.M_EngineTip":
                        description = "Requested engine torque from the TIP function. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.t_delta":
                        description = "Ring memory for actual cycle time (100ms loop) will be needed for correction of acceleration measurement. Resolution is 5 ms.";


                        break;
                    case "CruiseProt.msCounterOld":
                        description = "ECMStat.msCounter of last 100 ms loop. Resolution is 5 ms.";


                        break;
                    case "CruiseProt.v_Actual":
                        description = "Actual vehicle speed for cruise controller. Resolution is 0.1 km/h. Interval is dito.";


                        break;
                    case "CruiseProt.v_Memory":
                        description = "Static memory for cruise controller. Resolution is 0.1 km/h. Interval is always when leaving cruise controller.";


                        break;
                    case "CruiseProt.v_Request":
                        description = "Requested vehicle speed for cruise control. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_RequestHelp":
                        description = "Requested vehicle speed for cruise control copy of v_request if cruise is active and driver overwrites the cruise airmass and v_actual > v_MaxSpeed - v_Hysteresis. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_delta":
                        description = "Ring memory for actual acceleration measurement (vehicle speed deviation). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_Difference":
                        description = "Difference between requested and actual vehicle speed(signed). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_Limit":
                        description = "V limit for decreasing the a_Request0 above v_limit a_Request1 = a_Request0. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_Deviation":
                        description = "Deviation between v_Request and v_Actual (unsigned). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_FilterOut":
                        description = "Filter output for actual vehicle speed. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.v_FilterOutOld":
                        description = "Filter output for actual vehicle speed one loop before. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseProt.a_FilterOut":
                        description = "Filter output for actual accelaration. Resolution is 0.06944 m/s^2.";


                        break;
                    case "CruiseProt.a_FilterOutOld":
                        description = "Filter output for actual accelaration one loop before. Resolution is 0.06944 m/s^2.";


                        break;
                    case "CruiseProt.m_FilterOut":
                        description = "Filter output for actual airmass requested from the cruise control. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.m_FilterOutOld":
                        description = "Filter output for actual airmass requested from the cruise one loop before. Resolution is 1 Nm.";


                        break;
                    case "CruiseProt.a_Actual":
                        description = "Actual acceleration of vehicle corrected by time measuring. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseProt.a_Actual1":
                        description = "Actual acceleration of vehicle not corrected by time measuring. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseProt.a_ActualOld":
                        description = "Actual acceleration of vehicle one loop before. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseProt.a_Request":
                        description = "Requested acceleration from cruise control. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseProt.a_Request0":
                        description = "Requested acceceleration = f(vehicle speed). Resolution is 0.06944 m/s^2.";


                        break;
                    case "CruiseProt.a_Request1":
                        description = "Requested acceleration = f(vehicle speed deviation). Resolution is 0.06944 m/s^2.";


                        break;
                    case "CruiseProt.a_Delta":
                        description = "Acceleration deviation. Resolution is 0.0.6944 m/s^2.";


                        break;
                    case "CruiseProt.m_AirRequest":
                        description = "Requested airmass from cruise control minus m_Idle.AirMass. Resolution is 1 mg/c.";


                        break;
                    case "CCRatioProt.UpDirection":
                        description = "Indicates that the gear ratio wants to change in up direction.The change is more than the hysteresis.";


                        break;
                    case "CCRatioProt.DownDirection":
                        description = "Indicates that the gear ratio wants to change in down direction.The change is more than the hysteresis.";


                        break;
                    case "CCRatioProt.RatioNew":
                        description = "Filter output for actual gear ratio will be used only for conversion from M_Wheel to M_Engine";


                        break;
                    case "CCRatioProt.GearRatio":
                        description = "Actual gear ratio out of filter and hysteresis will be used only for conversion from M_Wheel to M_Engine";


                        break;
                    case "CCRatioProt.ConstDiff":
                        description = "Difference between the filter constants used in LockUp and not LockUp";


                        break;
                    case "CCRatioProt.FilterOut":
                        description = "Filter output for actual gear ratio will be used only for conversion from M_Wheel to M_Engine";


                        break;
                    case "CCRatioProt.FilterOutOld":
                        description = "Filter output old for actual gear ratio will be used only for conversion from M_Wheel to M_Engine";


                        break;
                    case "ShiftSupport.ST_LimActi":
                        description = "Gear shift support offset status information 0 = Keep gear 1 = Shift down support (ramp up) 2 = Shift up support (ramp down)";


                        break;
                    case "ShiftSupport.ms_TapUp":
                        description = "Last time TAP UP button was pressed. Used for preventing increment of Out.X_AccPedal close to a TAP UP. A number of TAP UP may cause an unneccessary shift down.";


                        break;
                    case "ShiftSupport.M_LoadHyst":
                        description = "Needed wheel torque hysteresis = f(RoadLoad) before starting to decrement the Gear shift support offset. This to avoid a shift up before neccessary engine torque is available. Resolution is 1 Nm.";


                        break;
                    case "CruiseComProt.Status":
                        description = "Status information for sub state if one of the cruise buttons is active. Resolution is 1 bit.";


                        break;
                    case "CruiseComProt.StatusInit":
                        description = "Information that the init factor was activated for this specific sub state (StatusInit == 63 => InitFac_6_3 was active. Resolution is 1 bit.";


                        break;
                    case "CruiseComProt.RoadTimer":
                        description = "Delay timer for roadload calculation to set M_RoadLoad 1 to default roadload if brake signal is active. Resolution is 0.1 sec.";


                        break;
                    case "Cruise2Prot.t_592Debounc":
                        description = "Timer to debounce the cc_allowed info from the 592. Resolution is 20 ms.";


                        break;
                    case "Cruise2Prot.a_Timer":
                        description = "Timer to debounce the acc/dec threshold. Resolution is 20 ms.";


                        break;
                    case "Cruise2Prot.TCSActive":
                        description = "Indicates that TCS function is active for than 1 sec. Resolution is bit.";


                        break;
                    case "Cruise2Prot.ms_TCSTimer":
                        description = "Timer to debounce TCSActive. Resolution is 20 ms.";


                        break;
                    case "Cruise.CruiseStatus":
                        description = "Status from cc-switch logic. Resolution is 1 bit.";


                        break;
                    case "Cruise.Set":
                        description = "\"0\" => \"set\" switch not activated \"1\" => \"set\" switch activated";


                        break;
                    case "Cruise.DecLimitActiv":
                        description = "Acceletation or deceleration threshold is active. Resolution is bit.";


                        break;
                    case "Cruise.CC_Valid":
                        description = "Information that all external cruise condition signal are valid(v_min.brake-switches etc.). Resolution is 10 ms.";


                        break;
                    case "Cruise.CC_Allowed339":
                        description = "It's allowed on 339 side to activate Cruise control. Resolution is bit.";


                        break;
                    case "Cruise.CC_Allowed339Old":
                        description = "Info of the loop before ifi t's allowed on 339 side to activate Cruise control. Resolution is bit.";


                        break;
                    case "Cruise.CC_Allowed592":
                        description = "It's allowed on 592 side to activate Cruise control. Resolution is bit.";


                        break;
                    case "Cruise.CC_592Valid":
                        description = "Info if the 592 data can be valid or not. Debouncing time for the interface. Resolution is bit.";


                        break;
                    case "Cruise.VMinStatus1":
                        description = "\"0\" => vehicle speed via ABS sensor above 38.6 km/h \"1\" => vehicle speed via ABS sensor below 32.2 km/h";


                        break;
                    case "Cruise.VMinStatus2":
                        description = "\"0\" => vehicle speed via CAN above 38.6 km/h \"1\" => vehicle speed via CAN below 32.2 km/h";


                        break;
                    case "Cruise.GearRatio":
                        description = "Copied gear ratio divided by 10 and limited to 1 or 255. Resolution is 1.";


                        break;
                    case "Cruise.M_RoadLoad1":
                        description = "Filtered road load. Resolution is 0.1 Nm.";


                        break;
                    case "Cruise.ST_ResumeMode":
                        description = "This flag is set when TAP DOWN/RESUME button is activated when the cruise control is on, not active and memory set (i.e. Cruise.CruiseStatus == 3) and will be set until the difference between v_Actual and v_Memory is less than CruiseCal.v_NormalMode. 0 => not Resume mode 1 => Resume Mode";


                        break;
                    case "Cruise.a_Actual":
                        description = "Copy of CruiseProt.a_Actual, used in jerk function";


                        break;
                    case "CCProt.NormalMode":
                        description = "Enables the normal cruise mode. Resolution is 1 bit.";


                        break;
                    case "CCProt.UnderSchedEnable":
                        description = "Enables the function Under Schedule Disengage. Resolution is 1 bit.";


                        break;
                    case "CCProt.USDFunctionActive":
                        description = "The Under Schedule Disengage function is active and will switch off the cruise. Resolution is 1 bit.";


                        break;
                    case "CCProt.v_USD":
                        description = "Actual vehicle speed / 4 If actual is lower than v_request - v_USD the cruise will be switched off. Resolution is 0.1 km/h.";


                        break;
                    case "CCProt.M_DelWheelUnsig":
                        description = "Unsigned actual M_DeltaWheel out of the calculation of a_Delta * VehicleConstant. Resolution is 1 Nm.";


                        break;
                    case "MaxVehicleSpeed.Status":
                        description = "Requested status from the maximum vehicle speed limitation. Resolution is \"0\" => not active.";


                        break;
                    case "MaxVehicleSpeed.m_Airmass":
                        description = "Requested airmass from the maximum vehicle speed limitation. Resolution is 1 mg/c.";


                        break;
                    case "CruiseAdap.SwitchOffCond":
                        description = "Information which signal was responsible to switch off cruise control last time. Resolution is 10 ms.";


                        break;
                    case "CruiseAdap.MissingCond":
                        description = "Information which signal is missing to switch on cruise control. Resolution is 10 ms.";


                        break;
                    case "CruiseCal.v_NormalMode":
                        description = "Threshold where normal cruise mode becomes active If v_Actual is > v_memory - v_NormamMode or v_Actual is < v_memory + v_NormalMode the normal mode becomes active. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimRampPos":
                        description = "Ramp to com from normal v_limit to the actual v_Limit if actual is lower than resume v_limit. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimRampNeg":
                        description = "Ramp to com from normal v_limit to the actual v_Limit if actual is higher than resume v_limit. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.ms_IntegrDelay":
                        description = "Timer to debounce the switchpoint to the v_limit pos table if the integrator is at max neg torque. Resolution is 100 ms.";


                        break;
                    case "CruiseCal.ms_TCSTimer":
                        description = "Timer to debounce tcs_active while cruise is active if tcs is active longer than specified time cruise will be switched off. Resolution is 20 ms.";


                        break;
                    case "CruiseCal.LoopAmount":
                        description = "Amount of loop to measures the actual acceleration. Resolution is 1 bit.";


                        break;
                    case "CruiseCal.SetTimer":
                        description = "Timer to differ v_Request = v_Actual or v_MaxSpeed if the set buttom is pressed and cruise was not active (Set). Resolution is 20 ms.";


                        break;
                    case "CruiseCal.TapUpTimer":
                        description = "Timer to differ v_Request = v_Actual or v_MaxSpeed if the set buttom is pressed and cruise was active (TapUp). Resolution is 20 ms.";


                        break;
                    case "CruiseCal.Status":
                        description = "Status for cruise controller \"0\" => not active \"1\" => open loop \"2\" => closed loop. Resolution is bit.";


                        break;
                    case "CruiseCal.TipPercentage":
                        description = "First Step requested engine torque if TIP is active The requested engien torque will be Cruise.M_RoadLoad1 * CruiseCal.TipPercentage. Resolution is 1 %.";


                        break;
                    case "CruiseCal.M_GradSize":
                        description = "Number of support points to get torque gradient limitation. Resolution is bit.";


                        break;
                    case "CruiseCal.a_AccSize":
                        description = "Number of support points to get requested accelaration or deceleration. Resolution is bit.";


                        break;
                    case "CruiseCal.v_LimitSize":
                        description = "Amount of support points for v limit for decreasing the a_Request0 v_limit = f(requested vehicle speed). Resolution is bit.";


                        break;
                    case "CruiseCal.a_DecTimeLim":
                        description = "Debouncing time for deceleration threshold to switch off cruise control. Resolution is 20 ms.";


                        break;
                    case "CruiseCal.a_PosOffset":
                        description = "Positive offset to activate v_limit table for positive acc deviations. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseCal.a_NegOffset":
                        description = "Negative offset to activate v_limit table for negative acc deviations. Resolution is 0.01 m/s°.";


                        break;
                    case "CruiseCal.v_ResumeThresh":
                        description = "If v_memory - v_actual is <= threshold the integrator will be initialized to negative_engine_torque. Otherwise roadload is taken. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_BigDiff":
                        description = "Calibration data to define a big difference between v_actual and v_memory. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.a_DecThreshold":
                        description = "Threshold for maximum acc/dec to switch off cruise controll. Resolution is 0.01 m/s^2.";


                        break;
                    case "CruiseCal.TipGrad":
                        description = "Gradient of M_EngineTip in Nm/10 ms base on engine torque. Resolution is 1 Nm.";


                        break;
                    case "CruiseCal.VehicleConstant":
                        description = "Vehicle constant. Resolution is bit.";


                        break;
                    case "CruiseCal.a_AccRequest":
                        description = "Requested accelaration = f(In.v_Vehicle). Resolution is 0.01984 m/s°.";


                        break;
                    case "CruiseCal.a_DecRequest":
                        description = "Requested coast decelaration = f(In.v_Vehicle). Resolution is 0.01984 m/s°.";


                        break;
                    case "CruiseCal.v_actual":
                        description = "Support points for actual vehicle speed. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimitPos":
                        description = "v limit for decreasing the a_Request0 above v_limit a_Request1 = a_Request0 this table is used if acc deviation is positve (too slow). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimitNeg":
                        description = "v limit for decreasing the a_Request0 above v_limit a_Request1 = a_Request0 this table is used if acc deviation is negative (too fast). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimitNormal":
                        description = "v limit for decreasing the a_Request0 above v_limit a_Request1 = a_Request0 this table is used if cruise is in state 4,5,6 or resume mode. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_LimitDefault":
                        description = "v limit for decreasing the a_Request0 above v_limit a_Request1 = a_Request0 Is used only if cruise is not active and the v_maxspeed limit should get active. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_RequestPos":
                        description = "Support points for requested vehicle speed this table is used if acc deviation is positive (too slow). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_RequestNeg":
                        description = "Support points for requested vehicle speed this table is used if acc deviation is negative (too fast). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_RequestNormal":
                        description = "Support points for requested vehicle speed this table is used if the cruise is in state 4,5,6 or resume mode. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.M_GradActual":
                        description = "Support points for actual engine torque. Resolution is 1 Nm.";


                        break;
                    case "CruiseCal.M_GradientPos":
                        description = "Requested gradient for positive torque changes unit is engine torque / s. Resolution is 1 Nm/s.";


                        break;
                    case "CruiseCal.M_GradientNeg":
                        description = "Requested gradient for negative torque changes unit is engine torque / s. Resolution is 1 Nm/s.";


                        break;
                    case "CruiseCal.v_DiffXSP":
                        description = "Support points for vehicle speed difference (v_Actual - v_Requested). Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.v_ActualYSP":
                        description = "Support points for actual vehicle speed. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseCal.a_DecReqMap":
                        description = "Requested decelaration = f(v_Diff, v_Actual). Resolution is 0.01984 m/s°.";


                        break;
                    case "CruiseComCal.M_DefOffset":
                        description = "Negative offset for roadload scaled in % of default roadload will be used to initialize the cruise wheel integrator. Resolution is 1%.";


                        break;
                    case "CruiseComCal.v_FCOEnable":
                        description = "Above this vehicle speed deviation fco is allowed. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseComCal.v_FCODisable":
                        description = "Below this vehicle speed deviation fco is disabled again. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseComCal.a_DeadRange":
                        description = "Dead range of the acc. signal to calculate the initpuls.If the CruiseProt.a_Delta is lower than this cal data no init_puls will be calculated. Resolution is 0.01 m/s^2.";


                        break;
                    case "CruiseComCal.NegMRange":
                        description = "Beginning of neg torque range scaled in wheel torque will be used for init puls calculation. Resolution is 1 Nm.";


                        break;
                    case "CruiseComCal.InitFac_4_1":
                        description = "Initialization factor for init_puls for state 4 sub 1. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_4_2":
                        description = "Initialization factor for init_puls state 4 sub 2. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_5_2":
                        description = "Initialization factor for init_puls state 5 sub 2. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_5_3":
                        description = "Initialization factor for init_puls state 5 sub 3. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_5_4":
                        description = "Initialization factor for init_puls state 5 sub 4. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_6_1":
                        description = "Initialization factor for init_puls state 6 sub 1. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_6_2":
                        description = "Initialization factor for init_puls state 6 sub 2. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_6_3":
                        description = "Initialization factor for init_puls state 6 sub 3. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.InitFac_7_1":
                        description = "Initialization factor for init_puls state 7 sub 1. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.MaxInit":
                        description = "Maximum init puls in positiv direction scaled in engine torque. Resolution is Nm.";


                        break;
                    case "CruiseComCal.ComFac_4":
                        description = "Comfort factor for state 4 percentage of a_Request1 if you are in state 4. Resolution is %.";


                        break;
                    case "CruiseComCal.ComFac_5":
                        description = "Comfort factor for state 5 percentage of a_Request1 if you are in state 5. Resolution is %.";


                        break;
                    case "CruiseComCal.ComFac_6":
                        description = "Comfort factor for state 6 percentage of a_Request1 if you are in state 6. Resolution is %.";


                        break;
                    case "CruiseComCal.ComFac_7":
                        description = "Comfort factor for state 7 percentage of a_Request1 if you are in state 7. Resolution is %.";


                        break;
                    case "CruiseComCal.InitTapUp":
                        description = "Minimum initialization pulse for tap up if pulse will be generated. Resolution is Nm(wheel).";


                        break;
                    case "CruiseComCal.InitTapUp54":
                        description = "Minimum initialization pulse for tap up if pulse will be generated Tapup button must be released after delay. Resolution is Nm(wheel).";


                        break;
                    case "CruiseComCal.InitAcc":
                        description = "Minimum initialization pulse for acceleration via tap up button. Resolution is Nm(wheel).";


                        break;
                    case "CruiseComCal.InitTapDown":
                        description = "Minimum initialization pulse for tap down if pulse will be generated. Resolution is Nm(wheel).";


                        break;
                    case "CruiseComCal.M_RoadSize":
                        description = "Number of support points for default roadload map";


                        break;
                    case "CruiseComCal.v_Actual":
                        description = "Support points for actual vehicle speed. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseComCal.M_RoadTorque":
                        description = "Output of the default roadload map scaled to wheel torque. Resolution is Nm(wheel).";


                        break;
                    case "CruiseComCal.TimerLimit":
                        description = "Timerlimit to decrease M_DeltaRoad for roadload calculation if brake signal is active to set M_RoadLoad1 to default roadload. Resolution is 0.1 sec.";


                        break;
                    case "CruiseComCal.M_DeltaRamp":
                        description = "Ramp for M_DeltaRoad which get active after RoadTimer > TimerLimit to set M_RoadLoad1 to default roadload. Resolution is 1 Nm.";


                        break;
                    case "CruiseComCal.M_MinSize":
                        description = "Number of support points for offset to engine torque to limit the integrator";


                        break;
                    case "CruiseComCal.v_Delta":
                        description = "Support points for offset to engine torque to limit the integrator. Resolution is 0.1 km/h.";


                        break;
                    case "CruiseComCal.M_Offset":
                        description = "Torque offset to actual engine torque to limit the integrator. Resolution is 1 %.";


                        break;
                    case "CruiseComCal.M_Minimum":
                        description = "Minimum engine torque to limit the integrator. Resolution is 1 Nm.";


                        break;
                    case "CruiseFilterCal.t_592Deb":
                        description = "Time to debounce the cc_allowed info from the 592. Resolution is 1 bit.";


                        break;
                    case "CruiseFilterCal.m_CCFilt":
                        description = "Filterconstant for actual airmass which is requested from cruise control. Resolution is 1 bit.";


                        break;
                    case "CruiseFilterCal.M_Filter":
                        description = "Filterconstant for actual road load torque. Resolution is 1 bit.";


                        break;
                    case "CruiseFilterCal.a_Filter":
                        description = "Filterconstant for actual accelaration. Resolution is 1 bit.";


                        break;
                    case "CruiseFilterCal.v_Filter":
                        description = "Filterconstant for actual vehicle speed. Resolution is 1 bit.";


                        break;
                    case "MaxVehicCal.Status":
                        description = "Requested status from the maximum vehicle speed limitation. Resolution is \"0\" => not active.";


                        break;
                    case "MaxVehicCal.v_Hysteresis":
                        description = "Hysteresis where max. speed limitation is active The function is active if actual speed > MaxVehicleCal.v_MaxSpeed and will be not active if actual speed < MaxVehicleCal.v_MaxSpeed - MaxVehicleCal.v_Hysteresis. Resolution is 1 km/h.";


                        break;
                    case "MaxVehicCal.v_MaxSpeed":
                        description = "Vehicle speed limit where the functions max.vehicle speed limit is active. Resolution is 0.1 km/h.";


                        break;
                    case "CCCal.M_DeltaWheelMin":
                        description = "Minimum M_DeltaWheel if v_Deviation is higher than v_Threshold and unsigned actual M_DeltaWheel is lower than M_DeltaWheelMin The sign will com from sign of v_Difference. Resolution is 1 Nm.";


                        break;
                    case "CCCal.v_Threshold":
                        description = "If actual v_Deviation is higher than v_Threshold and unsigned actual M_DeltaWheel is lower than M_DeltaWheelMin M_DelatWheel = M_DeltaWheelMin.The sign for minimum M_DeltaWheel will come from the sign of v_Difference. Resolution is 0.1 km/h.";


                        break;
                    case "CCCal.v_USDOffset":
                        description = "Offset where the function Under Schedule Disengage will be enabled.If the actual speed is >= v_request - offset the functions is enabled. Resolution is 0.1 km/h.";


                        break;
                    case "CCCal.v_USDMin":
                        description = "Minimum USD speed.If actual < v_request - v_USD the cruise will be switched off.The minimum v_USD will be v_USDMin. Resolution is 0.1 km/h.";


                        break;
                    case "ShiftSupCal.M_RLoadSP":
                        description = "Support points for M_HystTab. Resolution is 1 Nm.";


                        break;
                    case "ShiftSupCal.M_HystTab":
                        description = "Hysteresis used to avoid a decrease of X_Offset (and a shift up) before there are engine torque available to shift up. This value shall be the extra engine torque needed to shift up plus an offset. When the max engine torque (converted to wheel torque) is greater than actual integrator plus hysteresis (converted to wheel torque), X_Offset is decreased (ramp down) to make a gear shift up. Resolution is 1 Nm.";


                        break;
                    case "ShiftSupCal.X_AccLim":
                        description = "This condition (and a number of other) that has to be fulfilled before starting to ramp up the Gear shift support offset making Out.X_AccPedal to increase and forcing the automatic gear box to shift down The CruiseProt.a_Actual must be lower than this percent of CruiseProt.a_Requested before the offset is incremented. Resolution is 0.1 %.";


                        break;
                    case "ShiftSupCal.a_Offset":
                        description = "This condition (and a number of other) that has to be fulfilled before starting to ramp up the Gear shift support offset making Out.X_AccPedal to increase and forcing the automatic gear box to shift down The CruiseProt.a_Actual must be lower than this absolute value before the offset is incremented. Resolution is 0.01 m/s°.";


                        break;
                    case "CCRatioCal.Hysteresis":
                        description = "Hysteresis for gear ratio before the actual ratio is set to the new one.This ratio is only used to convert M_Wheel to M_Engine. Resolution is 1 Bit.";


                        break;
                    case "CCRatioCal.FilterRamp":
                        description = "Ramp of filter constant for gear ratio if system changes from not lockup to lockup. Resolution is 1 Bit / 50ms.";


                        break;
                    case "CCRatioCal.NotLockFactDy":
                        description = "Filter constant for not lockup in automatic cars to filter gear ratio if cruise status is in resume mode(NormalMode == 0)";


                        break;
                    case "CCRatioCal.LockUpFact":
                        description = "Filter constant for lockup in automatic cars to filter gear ratio";


                        break;
                    case "CCRatioCal.NotLockFactSt":
                        description = "Filter constant for not lockup in automatic cars to filter gear ratio if cruise status is in normal mode(NormalMode == 1)";


                        break;
                    case "CCRatioCal.NotCruiseFact":
                        description = "Filter constant for non cruise mode and manual cars to filter gear ratio";


                        break;
                    case "DiffPSProt.v_GearBoxOut":
                        description = "TCM gearbox output speed converted to vehicle speed. Resolution is 0.1 km/h. Interval is Every 100ms.";


                        break;
                    case "DiffPSProt.v_Diff":
                        description = "Speed differance between the gearbox out speed and one front wheel. Resolution is 0.1 km/h. Interval is Every 100ms.";


                        break;
                    case "DiffPSProt.M_Limit":
                        description = "Engine torque limitation not adjusted for - delay time - change delta limitation. Resolution is 1 Nm. Interval is Every 100ms.";


                        break;
                    case "DiffPSProt.t_StartTimer":
                        description = "Time when torque limitation became active ( ST_LimActive == 1 ). Resolution is 1 ms. Interval is Every 100ms.";


                        break;
                    case "DiffPSProt.t_Delay":
                        description = "Delay time = f (Out.M_Engine) Time before torque limitation is activated. Resolution is 1 ms. Interval is Every 100ms.";


                        break;
                    case "DiffPSProt.ST_LimActive":
                        description = "DPS torque limitation status flag Interval is Every 100ms.";


                        break;
                    case "DiffPS.M_Limit":
                        description = "Maximum engine torque from the diff protection system to limit wheel master. This limit is the result from DiffPSCal.M_LimitTab but are limited in change delta by DiffPSCal.DiffPSCal.M_PosRampMax and DiffPSCal.DiffPSCal.M_NegRampMax. If the v_GearBoxOut = 0, this limit will be set to 400 Nm. Resolution is 1 Nm. Interval is Every 100ms.";


                        break;
                    case "DiffPSCal.SpeedDivFac":
                        description = "Division factor to recalculate the gearbox speed from VBUS to km/h. In.v_GearBoxOut * 128 DiffPSProt.v_GearBoxOut = DiffPSCal.SpeedDivFac";


                        break;
                    case "DiffPSCal.v_DiffSP":
                        description = "Speed differance supportpoints for calculation of max diff protection torque. Resolution is 0.1 km/h.";


                        break;
                    case "DiffPSCal.M_LimitTab":
                        description = "Maximum engine torque = f(v_Diff). Max engine torque for the diff protection system depending on speed differance between gearbox speed and one front wheel speed. This torque is sent to the limit wheel master. Resolution is 1 Nm.";


                        break;
                    case "DiffPSCal.M_PosRampMax":
                        description = "The positive change of DiffPS.M_Limit is limited by this torque step every 100ms. Resolution is 1 Nm.";


                        break;
                    case "DiffPSCal.M_NegRampMax":
                        description = "The negative change of DiffPS.M_Limit is limited by this torque step every 100ms. But if the actual torque Out.M_Engine + 40Nm is lower than the limitation will this negativ max ramp not be used and DiffPS.M_Limit is set to Out.M_Engine. Resolution is 1 Nm.";


                        break;
                    case "DiffPSCal.M_EngineSP":
                        description = "Actual engine torque supportpoints for calculation of delay time before limitation of the engine torque. Resolution is 1 Nm.";


                        break;
                    case "DiffPSCal.t_LimDelayTab":
                        description = "Torque limitation delay time = f(Out.M_Engine). Engine torque limitation for the protection of the differential gear is delayed a calibrational time depending on actual engine torque. Resolution is 1 ms.";


                        break;
                    case "DiffPSCal.v_MaxActive":
                        description = "Maximum speed that will enable the diff protecting system. Resolution is 0.1 km/h.";


                        break;
                    case "EmLim.ST_GearShifting":
                        description = "This flag is set when the clutch is pressed. Either by detect the In.ST_ClutchBrake1 or by detection of a change in gear ratio after the pedal is released below 10%. When this flag is set will the air antijerk be disabled.";


                        break;
                    case "EmLim.RatioDelta":
                        description = "Absolute delta of the EmLimProt.RatioFilt, used to detect stable ratio after a gearshift or to detect a gear shift Interval is Every 20 ms.";


                        break;
                    case "EmLimProt.Ratio":
                        description = "Actual gear ratio value used to detect gearshifting on manual cars for air antijerk and fast/slow tipout. Calculated as followed: Rpm * 128 ratio = km/h * 10 Interval is Every 20 ms.";


                        break;
                    case "EmLimProt.RatioFilt":
                        description = "Filtered EmLimProt.Ratio The filterfactor used for this data is EmLimCal.FiltFac Interval is Every 20 ms.";


                        break;
                    case "EmLimProt.RatioHigh":
                        description = "When the simulated clutch detection is active is this limit used to set a high limit for the change in gear ratio. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh";


                        break;
                    case "EmLimProt.RatioLow":
                        description = "When the simulated clutch detection is active is this limit used to set a low limit for the change in gear ratio. EmLimProt.RatioLow = EmLimProt.RatioFilt * EmLimCal.GrShftRatioLow";


                        break;
                    case "EmLimCal.GrShftRatioHigh":
                        description = "When the acc pedal is released below 10% is this factor once multiplied with the filtered gear ratio, to make a high limit for detection of a change in gear ratio. If the filtered ratio is abowe that limit will the EMLim.ST_GearShifting be set. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh";


                        break;
                    case "EmLimCal.GrShftRatioLow":
                        description = "When the acc pedal is released below 10% is this factor once multiplied with the filtered gear ratio, to make a low limit for detection of a change in gear ratio. If the filtered ratio is below that limit will the EMLim.ST_GearShifting be set. EmLimProt.RatioHigh = EmLimProt.RatioFilt * EmLimCal.GrShftRatioHigh";


                        break;
                    case "EmLimCal.FiltFac":
                        description = "Filter factor used for the gear ratio. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> EmLimProt.RatioFilt old_value -> old EmLimProt.RatioFilt new_value -> EmLimProt.Ratio Const -> EmLimCal.FiltFac If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) ";


                        break;
                    case "EmLimCal.ClutchMode":
                        description = "Mode selection on how to set the gearshifting flag, EmLim.ST_GearShifting. Modes: 0 - Use only the In.ST_ClutchBrake1 1 - Use both the In.ST_ClutchBrake1 and if the clutch is pressed for more than EmLimCal.t_ClutchDelay ms, start the gear ratio gearshift detection. 2 - Use only the gear ratio gearshift detection. Gear ratio gearshift detection: When the pedal is released below 10% is a high and low ratio limit calculated, EmLimProt.RatioLow and EmLimProt.RatioHigh, when the ratio is above the high limit or below the low limit is the EmLim.ST_GearShifting flag set. When the pedal is above 5% and a gear is detected and the EmLimProt.RatioDelta is below 5 will the EmLim.ST_GearShifting flag be cleared.";


                        break;
                    case "CrnkCVCal.ST_Enable":
                        description = "Possibility to deactivate the crank case ventilation valve control. 0 = Crank Case Ventilation Valve function OFF Diagnose disabled. 1 = Crank Case Ventilation Valve function ON Diagnose enabled.";


                        break;
                    case "CrnkCVCal.p_DiffLimit":
                        description = "Pressure limit. As long as In.p_Air < In.p_AirInlet + CrnkCVCal.p_DiffLimit + CrnkCVCal.p_DiffLimitHys the crank case ventilation valve will be open. Resolution is 0.1 kPa.";


                        break;
                    case "CrnkCVCal.p_DiffLimitHys":
                        description = "Hysteresis to avoid valve to flip / flap. When the crank case valve is open: CrnkCVProt.p_DiffLimit = CrnkCVCal.p_DiffLimit + CrnkCVCal.p_DiffLimitHys. Resolution is 0.1 kPa.";


                        break;
                    case "CrnkCVCal.Q_AirLimit":
                        description = "Air flow limit. As long as In.Q_AirInletFilt > CrnkCVCal.Q_AirLimit - CrnkCVCal.Q_AirLimitHys the crank case ventilation valve will be open. Resolution is 0.01 g/s.";


                        break;
                    case "CrnkCVCal.Q_AirLimitHys":
                        description = "Hysteresis to avoid valve to flip / flap. When the crank case valve is open: CrnkCVProt.Q_Limit = CrnkCVCal.Q_AirLimit - CrnkCVCal.Q_AirLimitHys. Resolution is 0.01 g/s.";


                        break;
                    case "EngTip.m_TipInLimit":
                        description = "Maximum airmass increase level";


                        break;
                    case "EngTip.m_TipOutLimit":
                        description = "Maximum airmass decrease level";


                        break;
                    case "EngTip.ST_Active":
                        description = "Status flag showing if tipin is active 0 = Not active 1 = Tip-in active 2 = Tip-out active";


                        break;
                    case "EngTipProt.m_TipInRamp":
                        description = "Maximum increase of airmass at current airmass level.";


                        break;
                    case "EngTipProt.m_TipOutRamp":
                        description = "Maximum decrease of airmass at current airmass level.";


                        break;
                    case "EngTipCal.X_TipInRFM0Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for manual gearbox and when the gear is undefined and during gear shift. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFM1Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for 1st gear in a manual gearbox . Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFM2Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for 2nd gear in a manual gearbox . Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFM3Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for 3rd gear in a manual gearbox . Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFM4Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for 4th gear in a manual gearbox . Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFM5Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for 5th gear in a manual gearbox . Resolution is 0.01;.";


                        break;
                    case "EngTipCal.m_TipInMan0Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at gear shifts and undefinied gear";


                        break;
                    case "EngTipCal.m_TipInMan1Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at first gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInMan2Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on second gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInMan3Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at third gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInMan4Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at fourth gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInMan5Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at fifth gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutMan0Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear shifts and undefinied gear";


                        break;
                    case "EngTipCal.m_TipOutMan1Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutMan2Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutMan3Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutMan4Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fourth gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutMan5Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fifth gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_BacklashMTab":
                        description = "Backlash level of the transmission for manual gearbox. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.X_TipInRFA0Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA3Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with locked gear. The ramp factor table is for the 3rd gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA4Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with locked gear. The ramp factor table is for the 4th gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA5Tab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with locked gear. The ramp factor table is for the 5th gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA1OTab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 1st gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA2OTab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 2nd gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA3OTab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 3rd gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA4OTab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 4th gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.X_TipInRFA5OTab":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 5th gear. Resolution is 0.01;.";


                        break;
                    case "EngTipCal.m_TipInAut0Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at undefinied gear. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut3Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at third gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut4Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at fourth gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut5Map":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen at fifth gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut1OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut2OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut3OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut4OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipInAut5OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut0Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at undefinied gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut3Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut4Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut5Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear (locked gear). Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut1OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut2OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut3OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut4OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_TipOutAut5OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.m_BacklashATab":
                        description = "Backlash level of the transmission for automatic gearbox. Resolution is 1 mg/c;.";


                        break;
                    case "EngTipCal.ST_EnableTipin":
                        description = "Enable tipin function 0 = Disable Tip-in 1 = Enable Tip-in";


                        break;
                    case "EngTipCal.ST_EnableTipout":
                        description = "Enable tipout function 0 = Disable Tip-out 1 = Enable Tip-out";


                        break;
                    case "EngTipCal.m_TipXSP":
                        description = "Support pointer for tipin matrix";


                        break;
                    case "EngTipCal.n_EngineYSP":
                        description = "Support pointer for tipin matrix";


                        break;
                    case "EngTipCal.n_GearBoxYSP":
                        description = "Support pointer for tipin matrix, open or slipping converter";


                        break;
                    case "EngTipCal.n_EngDiffXSP":
                        description = "Support pointer for tipin matrix with open or slipping converter";


                        break;
                    case "EngTipCal.X_IndAccXSP":
                        description = "Support pointer for airmass ramp step factor";


                        break;
                    case "Idle.ST_Enable":
                        description = "Indicate if idlespeed regulation is active. \"ON\" - Idlespeed regulation active: Engine started, Vehiclespeed < 3km/h, In.X_AccPedal < IdleCal.X_AccPedalLim, engine speed difference not higher than IdleCal.n_EngDiffLim, engine speed delta not higher than IdleCal.n_EngDeltaLim and throttle not in limphome. \"--\" - Idlespeed regulation not active, only the constant part and adaption part are used. ";


                        break;
                    case "Idle.ST_AdapAllowed":
                        description = "Indicate if idle adaption is allowed. 1 - Idlespeed adaption allowed 0 - Idlespeed adaption not allowed Following conditions must be fullfilled to enable idle adaption: - Engine temp above limit - Not to high difference in rpm - idle I-part not limited: Idle air still greater than minload air, Throttle area > 10 mm2 I-part greater than -5.00 g/s I-part less than +5.00 g/s - No error on automatic Gear-Box drive signal (FaultIn.M_ExternLimitReq & 0xF0) = 0 - No lightoff offset, IdleProt.n_EngLOffOffset = 0 - No servopressure comp, LoadCo.ST_IdleAdapt = 0 - No fault on vehiclespeed, FaultIn.v_Vehicle = 0 - Lightoff rpm offset not active, IdleProt.n_EngLOffOffset = 0";


                        break;
                    case "Idle.StartAirMode":
                        description = "Indicate actual start mode. 1 - Rpm below nominal idle rpm + n_EngNomExtra - n_EngLOffOffset. The IdleProt.Q_StartOffs is used above idle adaption and constant part. The conversion from airmass to throttle area is done with fixed enginespeed (Nominal engine speed). 2 - The IdleProt.Q_StartOffs is ramped to zero. The condition to enter mode 0 is: IdleProt.Q_StartOffs=0 OR ( Engine speed drops below nominal idle rpm + IdleCal.n_EngNomExtra AND IdleProt.Q_StartOffs <= IdleCal.I_PartMax AND more than 10 combustions in mode 2 ) When the condition above is true will the rest of IdleProt.Q_StartOffs be copyed to the IdleProt.I_Part and idle control will be released. 0 - Engine running and the Q_StartOffs is not used anymore. Idle control is released.";


                        break;
                    case "Idle.Q_Air":
                        description = "Actual airmass from idle controller, total sum of following regulator parts: IdleProt.C_Part IdleProt.P_Part IdleProt.I_Part IdleProt.D_Part IdleAdap.Q_Air(Neutral or Drive). Resolution is 0.01 g/s. Interval is 50 ms.";


                        break;
                    case "Idle.n_EngineNominal":
                        description = "Actual nominal engine speed. When engine not is in idle mode will this variable be set to zero. Resolution is 1 rpm.";


                        break;
                    case "Idle.Q_FirstDrvComp":
                        description = "Extra drive air during idle, the first time drive is activated. Resolution is 0.01 g/s.";


                        break;
                    case "Idle.Q_AirFriction":
                        description = "Variable showing friction air for this engine. Used to compensate when calculating and limiting engine torque. Idle friction airmass = C_PartNeutral actual + P_Part + I_Part + D_Part + IdleAdap.Q_AirNeutral. Resolution is 0.01 g/s.";


                        break;
                    case "Idle.Q_LOffIgnPart":
                        description = "Actual light off ignition part of idle controller. Resolution is 0.01 g/s.";


                        break;
                    case "Idle.ST_IdleRpmInAreaMap":
                        description = "Indicate that the conversion of m_Request to Area request should use the nominal idle speed as pointer in the area map. This is done while the \"Idle.StartAirMode\" = 1. 1 => Use idle speed 0 => Use actual engine speed";


                        break;
                    case "Idle.I_PartLimited":
                        description = "Indicate that the I-part is stopped because it has reached its limit. 0 -> I-part not limited 1 -> I-part at its max limit -1 -> I-part at its min limit";


                        break;
                    case "Idle.DNCompIgnWeightFac":
                        description = "Weightfactor depending on the diff between in.n_engine and in.n_GearBoxIn. This weight fac is used to control the ign offset and constant and adaption air from the DN compensation. Resolution is 1 %.";


                        break;
                    case "Idle.n_EngQuote":
                        description = "Quote between In.n_GearboxIn and In.n_Engine. Always bigger or equal to zero. Resolution is 128/100 .";


                        break;
                    case "DNComp.ST_NeutralControl":
                        description = "Neutral on drive is active.";


                        break;
                    case "DNComp.IgnRampStart":
                        description = "Flag indicating the start time stamp of a ramp.";


                        break;
                    case "DNComp.IgnRampTimer":
                        description = "Contains the time span for the ramp. Fetched from a cal table.";


                        break;
                    case "DNComp.IgnRampFinished":
                        description = "Flag indicating that the ramp is finished.";


                        break;
                    case "DNComp.ActiveIgnRamp":
                        description = "Flag indicating that active ramping of the ignition is active.";


                        break;
                    case "DNComp.NeutralAirPart":
                        description = "During neutral control this factor is the wheight factor for neutral idle air. This means that the total idle air is calculated as this:tot idle air = (DNComp.NeutralAirPart * C_A_PartNeutral)/128 + ((128 - DNComp.NeutralAirPart)* C_A_PartDrive)/128 RANGE: 0-128 UNIT: % ";


                        break;
                    case "DNComp.n_GearBoxMissing":
                        description = "Indicates that the rpm from the TCM is missing.";


                        break;
                    case "DNComp.n_GearBoxIncreasing":
                        description = "Indicates that the converter rpm from the TCM is increasing. Used for ignition ramping function when disengaging neutral control.";


                        break;
                    case "IdleProt.C_A_Part":
                        description = "Actual constant and adaption part of idle controller depending on vehicle speed. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.P_Part":
                        description = "Actual P part of idle controller. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.I_Part":
                        description = "Actual I part of idle controller. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.Q_StartOffs":
                        description = "Extra Q offset above idle Q during start. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.n_EngineDiff":
                        description = "Engine speed difference for idlespeed regulator. IdleProt.n_EngineDiff = Idle.n_EngineNominal - In.n_Engine. Resolution is 1 rpm. Interval is Every 100 ms.";


                        break;
                    case "IdleProt.n_EngineDelta":
                        description = "Engine speed delta for idlespeed regulator D-part. Resolution is 1 rpm. Interval is Every 100 ms.";


                        break;
                    case "IdleProt.Q_StartOffsAdd":
                        description = "If engine speed once have been above 300 rpm will this data be increased with \"IdleCal.Q_StartOffsRamp\" and added above the start air until startmode 2 is reached. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.Q_LOffRpmOffs":
                        description = "Extra Q_Air added to the idle air when light off rpm offset are active. This data is the result from the interpolation of table IdleCal.Q_LOffRpmDrive or IdleCal.Q_LOffRpmNeutral. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.n_EngLOffOffset":
                        description = "Actual extra light off rpm offset added to the nominal engine speed. This data is the result from the interpolation of table IdleCal.n_EngLOffDrive or IdleCal.n_EngLOffNeutral";


                        break;
                    case "IdleProt.n_IdleMovAutOff":
                        description = "Actual extra offset added to the nominal engine speed when idle regulator is active and the car is moving. Only used at automatic cars. ";


                        break;
                    case "IdleProt.ST_DriveActive":
                        description = "Actual Neutral/Drive state used in the idle control 0 - > Neutral air is used. 1 - > Drive air is used.";


                        break;
                    case "IdleProt.T_Part":
                        description = "Air temperature part for idle controller. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.p_ambcomp":
                        description = "Ambient air pressure compensation part for idle controller. Resolution is 0.01 g/s.";


                        break;
                    case "IdleProt.ST_AfterNC":
                        description = "Neutral on drive is active or has just been disactivated and the constant airis ramped up to drive air.";


                        break;
                    case "IdleProt.n_ElevIdleGoal":
                        description = "This is the elevated idle offset goal, meaning IdleProt.n_ElevIdleOff will ramp up to this vaule at 1 rpm/50 ms";


                        break;
                    case "IdleProt.n_ElevIdleOff":
                        description = "This is the elevated idle offset.";


                        break;
                    case "IdleProt.Q_ElevIdle":
                        description = "This is the elevated idle Q-offset that will bring up the idle rpm offset to n_ElevIdleOff";


                        break;
                    case "IdleProt.ST_Do_ElevIdle":
                        description = "Local variable";


                        break;
                    case "IdleProt.X_mLOffFactor":
                        description = "High altitude factor that is multiplied with with the normal lightoff air. This is active only if In.p_AirAmbient < IgnLOffCal.p_AirAmbHigh, ECMStat.ST_ActiveAirDem = 12 and IdleCal.N_LOffComb combustions after Idle.StartAirMode = 2";


                        break;
                    case "IdleProt.ST_DAdapDone":
                        description = "Flag indicating if drive adaption is done, during this driving cycle.";


                        break;
                    case "DNCompProt.C_Part":
                        description = "Temporary storage of the constant and adaption part of the idle air. From this table the actual constant-adap idle air is interpolated depending on vehicle speed.";


                        break;
                    case "DNCompProt.State":
                        description = "Internal state in the state machine controlling the Drive Neutral air and ignition compensation. 0 : steady state when no gear is engaged. air is ramped down to neutral air and the ignition offset is reduced to zero. 1 : the gearlever is in gear position but the gear has not yet been actually engaged. air is ramped up to drive air and after a delay the ignition is decreased so the momentum from the engine is maintained. 2 : the gear is actually engaged. air is still ramped up to drive air and the ignition is rapidly ramped up to normal ignition. 3 : the gear is disengaged. air is still ramped up but the ignition is rapidly ramped down to obtain a momentum decrease.";


                        break;
                    case "DNCompProt.RampStart":
                        description = "Flag indicating the start time stamp of a ramp.";


                        break;
                    case "DNCompProt.RampTimer":
                        description = "Contains the time span for the ramp. Fetched from a cal table.";


                        break;
                    case "DNCompProt.RampFinished":
                        description = "Flag indicating that the ramp is finished.";


                        break;
                    case "DNCompProt.ActiveAirRampTimer":
                        description = "Contains a time stamp when the active air ramp starts. The active air ramp is a function which lets the air amount vary as function of quote between gearbox rpm and engine rpm. This function is needed to compensate the air if the gear is very slow to engage. The function is activated after a cal. time from when the gear starts to engage or disengage.";


                        break;
                    case "DNCompProt.I_PartStart":
                        description = "Contains the idle i_part when the neutral control is activated. During neutral control the i_part of the idle air control is moved to the constant and adap part of the drive-neutral compensation.";


                        break;
                    case "DNCompProt.VSpeedIn2":
                        description = "Flag indicating that there has been vehicle speed in state 2. This is used to shut off the active air ramping in state 2.";


                        break;
                    case "DNCompProt.GearActivatedIn2":
                        description = "Flag indicating that the gear has been fully activated in state 2. This is used to shut off the active air ramping in state 2.";


                        break;
                    case "IdleAdap.Q_AirNeutral":
                        description = "Adaption value for idlespeed regulation (drive not activated). This value is added to the PID and Constant part of the regulator. If the I-part is limited will the adaption stop. Resolution is 0.01 g/s.";


                        break;
                    case "IdleAdap.Q_AirDrive":
                        description = "Adaption value for idlespeed regulation (drive activated). This value is added to the PID and Constant part of the regulator. If the I-part is limited will the adaption stop. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.n_DeltaSP":
                        description = "SP for the table from where the weight fac for the DN comp ign offset is fetched. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_DeltaTAB":
                        description = "Table from where the weight fac for the DN comp ign offset is fetched. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.IgnRampDelay":
                        description = "When the D/N air compensation is activated, wait this nr of ms before the ignition ramp is done. Resolution is 1 ms.";


                        break;
                    case "IdleCal.v_VehicleLim":
                        description = "Vehicle speed limits used to interpolate between drive and neutral C-part and adaption-part. Below the low speed limit is the drive part used and above the high limit is the neutral part used. This function is only activated on Automatic gearboxes. Resolution is 0.1 km/h.";


                        break;
                    case "IdleCal.T_EngineSP":
                        description = "Engine temperature supportpoints for calculation of nominal idle speed. Resolution is 1 °C.";


                        break;
                    case "IdleCal.n_EngNomDrive":
                        description = "Nominal engine speed depending on watertemperature when the Drive signal is activated on automatic gearboxes. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_EngNomNeutral":
                        description = "Nominal engine speed depending on watertemperature when no Drive signal is activated. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.C_PartNeutral":
                        description = "Constant part of idle regulator depending on the engine temperature (drive not activated on cars with automatic gearboxes). Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.C_PartDrive":
                        description = "Constant part of idle regulator depending on the engine temperature (drive activated on cars with automatic gearboxes). Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.Q_StartOffsTab":
                        description = "Extra Q-air offset used during start. This value will be added to the idle constant and adaption part. Until engine started flag is set and rpm is abowe nominal engine speed, will the nominal engine speed be used for Q to m and m to area conversion. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.DelayDriveAct":
                        description = "Delay time before the drive Q is activated.";


                        break;
                    case "IdleCal.DelayDriveRel":
                        description = "Delay time before the drive Q is released and neutral Q is used.";


                        break;
                    case "IdleCal.n_EngDiffSP":
                        description = "Support points for StartRedFacTab. Difference between actual rpm and nominal idle rpm. diff = In.n_Engine - Idle.n_EngineNominal. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_EngNomExtra":
                        description = "Extra rpm above nominal idle speed to stop the Q_StartOffs ramp. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.I_PartSP":
                        description = "Engine speed difference support points for I part table. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.I_PartTab":
                        description = "I part of idlespeed regulator depending on enginespeed difference. The I-part is not allowed to decrease if idle airmass is lower than minload airmass or if Out.A_ThrottleDemand <= 10 mm2. If the I-part is limited will the idle adaption be stopped. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.P_PartSP":
                        description = "Engine speed difference support points for P part table. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.P_PartTab":
                        description = "P part of idlespeed regulator depending on enginespeed difference. IdleProt.n_EngineDiff * X IdleProt.P_Part = 1000 (X is the result of this map)";


                        break;
                    case "IdleCal.X_AccPedalLim":
                        description = "If Out.X_AccPedal is lower than this limit is the flag for released pedal set. Resolution is 0.1 %.";


                        break;
                    case "IdleCal.X_AccPedalLim2":
                        description = "If Out.X_AccPedal is higher than this limit is the flag for released pedal cleared. Resolution is 0.1 %.";


                        break;
                    case "IdleCal.n_EngDeltaLim":
                        description = "Max engine speed delta to activate idlemode. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_EngDiffLim":
                        description = "Max engine speed difference between actual enginespeed and nominal idle speed to activate idlemode. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.AdapDelay":
                        description = "Delay time between every adaption adjustment within correct adaption conditions. This time must be longer than the I-part delay time \"I_PartDelay\". Resolution is 1 ms.";


                        break;
                    case "IdleCal.T_EngineLimit":
                        description = "Below this engine temperature limit is not idle adaption allowed. Resolution is 1 °C.";


                        break;
                    case "IdleCal.n_EngAdapLim":
                        description = "Engine speed difference between actual value and nominal engine speed must be below this value to enable the idle adaption. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.I_PartDelay":
                        description = "Delay time between every adjustment of the regulator I-part. Used to obtain higher. Resolution on the I-part. This time must be shorter than the adaption time \"AdapDelay\". Resolution is 1 ms.";


                        break;
                    case "IdleCal.I_PartDelay2":
                        description = "Delay time between every 0.05 g/s decrement of the I-part when idle control is disabled and the I-part is ramped down to IdleCal.I_Part. Resolution is 1 ms.";


                        break;
                    case "IdleCal.LOffSP":
                        description = "Support points for extra Q-air depending on ligh off ignition offset. Resolution is 0.1 °.";


                        break;
                    case "IdleCal.LOffTab":
                        description = "Extra Q-air offset depending on ligh off ignition offset. This value will be added to the idle regulator. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.I_Part":
                        description = "I-part value used as constant offset when the idle I-part not is active. When idle control is disabled and the actual I-part is lower than this value will this value be copyed to the actual I-part. If the actual I-part is greater than this value will the actual I-part be ramped down to this value with 0.01 g/s every 50ms. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.I_PartMax":
                        description = "During start owershot (Idle.StartAirMode=2) must the start air ramp down to at least this max value before the start air mode is set to 0 and start air is copyed to IdleProt.I_Part. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.n_EngDeltaLim2":
                        description = "Below this rpm delta limit is idle I-part activated if pedal is released, vehicle speed above 3km/h and no gear detected on manual gearbox or if vehicle speed is below v_VehicleLim2 on automatic gearbox or neutral is detected. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.v_VehicleLim2":
                        description = "If vehicle speed is below this limit on automatic gearbox or if no gear is detected on manual gearbox and pedal released, rpm delta below n_EngDeltaLim2 and vehicle speed above 3km/h is the idle I-part activated. Resolution is 0.1 km/h.";


                        break;
                    case "IdleCal.LoopStatus":
                        description = "Demand open or closed throttle regulator loop. 0 - Idle part not active 1 - Idle demands open loop 2 - Idle demands closed loop";


                        break;
                    case "IdleCal.LoopStatusRamp":
                        description = "Demand open or closed throttle regulator loop during the start ramp (StartAirMode=2). 0 - Idle part not active 1 - Idle demands open loop 2 - Idle demands closed loop";


                        break;
                    case "IdleCal.Q_StartOffsRamp":
                        description = "Additonal air increased on the start air if the engine speed is above 300 rpm during startmode 1. This is to make shore that the engine will reach nominal idle speed and enter startmode 2.";


                        break;
                    case "IdleCal.Q_FirstDrvComp":
                        description = "Additonal drive air used only the first time drive is activated after 15 min ignition off. This air is ramped to zero by the Q_FirstDriveRamp decrement factor. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.Q_FirstDrvCompRmp":
                        description = "Decrement air / 50ms until the extra first drive air is ramped to zero. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.ST_EnableLOffRpm":
                        description = "Flag to enable or disable the light off rpm offset function. 0 - > Function not active 1 - > Function active ";


                        break;
                    case "IdleCal.ST_IdleMovCarMan":
                        description = "Flag to activate \"Idle moving car\" function on manual cars. ";


                        break;
                    case "IdleCal.T_EngineLOffSP":
                        description = "Engine temperature supportpoints for calculation of extra light off rpm offset. Resolution is 1 °C.";


                        break;
                    case "IdleCal.n_EngLOffDrive":
                        description = "Light off rpm offset depending on engine temperature when gearbox is in Drive position. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_EngLOffNeutral":
                        description = "Light off rpm offset depending on engine temperature when gearbox is in neutral position. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.n_EngLOffSP":
                        description = "Rpm offset support points for calculation of additional idle air during light off rpm offset. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.Q_LOffRpmDrive":
                        description = "Extra light off air during increased rpm depending on actual rpm offset for light off. This table is used when automatic gearbox is in drive position. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.Q_LOffRpmNeutral":
                        description = "Extra light off air during increased rpm depending on actual rpm offset for light off. This table is used when automatic gearbox is in neutral position or if manual gearbox.. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.v_VehicleLOffRamp":
                        description = "Above this vehicle speed limit will the light off rpm offset be decreased faster, with 1rpm every 50ms. Resolution is 0.1 km/h.";


                        break;
                    case "IdleCal.LOffRampDelay":
                        description = "Delay time between every decrement of light off rpm offset \"IdleProt.n_EngLOffOffset\" when the vehicle speed is below \"IdleCal.v_VehicleLOffRamp\". Resolution is 1 ms.";


                        break;
                    case "IdleCal.v_VehicLim":
                        description = "Vehicle speed limit for idle control. Idle control is disabled when vehicle speed is above this limit. Resolution is 0.1 km/h.";


                        break;
                    case "IdleCal.p_AltStartSP":
                        description = "Altidude pressure support points for start air compensation. Resolution is 0.1 kPa.";


                        break;
                    case "IdleCal.Q_AltStartTAB":
                        description = "Extra air compensation for high altidudes This airflow is added to the normal start air compensation. IdleCal.Q_StartOffsTab result + IdleCal.Q_AltStartTAB result = IdleProt.Q_StartOffs . Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.T_AirSP":
                        description = "Inlet air temperature support points for T_AirTab. Resolution is 1 °C.";


                        break;
                    case "IdleCal.T_AirTab":
                        description = "Constant part of idle regulator depending on the air temperature. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.p_AirAmbSP":
                        description = "Ambient pressure support points for altitude compensation to idle air. Resolution is 0.1 kPa.";


                        break;
                    case "IdleCal.Q_AirAmbTab":
                        description = "Altitude compensation table to idle air. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.t_yaxis":
                        description = "Supportpointer for StartRedFacMat";


                        break;
                    case "IdleCal.StartRedFacMat":
                        description = "Decrement factor for Q_StartOffs, depending on rpm owershoot. newQ_Start = oldQ_Start * StartRedFac. Resolution is 0.001.";


                        break;
                    case "IdleCal.n_GearboxDiff":
                        description = "The difference in n_GearboxDiff to indicate that the gear is beginning to be activated. Resolution is 1.";


                        break;
                    case "IdleCal.NeutralAirPartTAB":
                        description = "The percent of the idle neutral air calibration data to use to get the total idle air, when neutral control is active. The rest is fetched from the idle drive air calibration. Resolution is 1.";


                        break;
                    case "IdleCal.n_EngQuoteSP":
                        description = "The support points for the NeutralAirPartTAB. This is the quote between the In.n_GearBoxIn and the In.n_Engine. Resolution is 1.";


                        break;
                    case "IdleCal.NCNegRate":
                        description = "The maximum allowed negative change for the constant idle air when neutral control is active. Resolution is 0.01.";


                        break;
                    case "IdleCal.NCPosRate":
                        description = "The maximum allowed positive change for the constant idle air when neutral control is active. Resolution is 0.01.";


                        break;
                    case "IdleCal.DNIndSampleTime":
                        description = "How often shall the gear box rpm be sampled to detect that the gear is beginning to be activated. Resolution is 1.";


                        break;
                    case "IdleCal.ActiveAirRampTime":
                        description = "The delay before the air ramp is reactivated after state1-state2 and state3-state0 transition. Resolution is 1 ms.";


                        break;
                    case "IdleCal.n_TPartRamp":
                        description = "This calibration value will continuously ramp IdleProt.T_Part off from the first combustion until this value. Resolution is 1.";


                        break;
                    case "IdleCal.n_LOffIdleStep":
                        description = "RPM ramp step that is taken every IdleCal.LOffRampDelay when speed of vehicle is below IdleCal.v_VehicleLOffRamp. Resolution is 0.1 rpm.";


                        break;
                    case "IdleCal.n_EngElevOff":
                        description = "Elevated Idle offset. This offset is added on to Idle.n_EngineNominal when In.ST_ElevatedIdle is active. Resolution is 1 rpm.";


                        break;
                    case "IdleCal.T_EngRPMOffSP":
                        description = "Support points for idle offset matrix . Resolution is 1 C.";


                        break;
                    case "IdleCal.n_RPMOffYSP":
                        description = "Support points for idle offset matrix . Resolution is 1 rpm.";


                        break;
                    case "IdleCal.Q_IdleOffsMAP":
                        description = "Extra air to get to idle offset. Resolution is 0.01 g/s.";


                        break;
                    case "IdleCal.X_mLOffHighAltTab":
                        description = "Decreased light off idle RPM air on high altitude depending on IdleProt.n_EngineDiff.";


                        break;
                    case "IdleCal.n_RpmDiffLOffSP":
                        description = "Decreased light off idle RPM air on high altitude support table";


                        break;
                    case "IdleCal.N_LOffComb":
                        description = "The number of combustion after start to enable the decreased light off RPM air on high altitude";


                        break;
                    case "IdleCal.LOffFilterFactor":
                        description = "Filter factor for the high altitude compensation function Const range 0 - 9999 0 and 100 = 100% new_value 1 and 200 = 50% new_value 2 and 400 = 25% new_value 3 and 800 = 12.5% new_value 4 and 1600 = 6.25% new_value";


                        break;
                    case "IdleCal.ST_ElevIdleAct":
                        description = "Activte function with elevated idle on request from In.ST_ElevatedIdle";


                        break;
                    case "IdleCal.N_StartAirMode2":
                        description = "The minimum number of combustions in StartAirMode 2 before entering StartAirMode 0";


                        break;
                    case "IdleCal.n_LowIPart":
                        description = "Do not allow increase of I-part at engine speed lower than IdleCal.n_LowIPart";


                        break;
                    case "IdleCal.p_NCLim":
                        description = "Barometric air pressure when Out.CMD_NCInhibit gets set. To avoid troubles on high altitude with neutral control.";


                        break;
                    case "IdleCal.n_IdleMovAutOffset":
                        description = "Extra offset added to the nominal engine speed when idle regulator is active and the car is moving. Used on automatic cars only.";


                        break;
                    case "IdleCal.t_DelayDAdap":
                        description = "Delay before forced drive adaption. If no drive adaption is done after this time since start, neutral control will be inhibited until the adaption is done.";


                        break;
                    case "IdleCal.X_ActualGearLim":
                        description = "In.X_ActualGear must be over this limit for the \"Idle moving car function\" to be able to get activated.";


                        break;
                    case "BstKnk.MaxAir":
                        description = "Max allowed airmass depending on knocking and max engine speed. Resolution is 1 mg/c.";


                        break;
                    case "LimEng.ST_MaxLimActive":
                        description = "Status variable indicating which MaxLim is active (lowest) for the moment. 0 = Knock limit 1 = Max engine speed limit 2 = Performance control 3 = Max turbo speed limit 4 = Crank case ventilation faulty 5 = Faulty APC";


                        break;
                    case "LimEngProt.m_TurboSpeedMaxReq":
                        description = "Max allowed m_request depending on max turbo speed. Resolution is 1 mg/c.";


                        break;
                    case "BstKnkProt.MapPointer":
                        description = "Pointer for calculation of max allowed airmass. This pointer are equal with mean value of knock ignition offset, but could been adjustet if one cylinder offset divided with constant are lower. Other offsets (Ign.fi_OtherOff) are also added to this pointer, including adjustment for index. Resolution is 0.1 °.";


                        break;
                    case "BstKnkProt.DivFactor":
                        description = "Factor used for calculation of MapPointer.";


                        break;
                    case "LimEngCal.Status":
                        description = "Status off limit engine control.";


                        break;
                    case "LimEngCal.p_AirSP":
                        description = "Ambient air pressure support points for max turbo speed. Resolution is 0.1 kPa.";


                        break;
                    case "LimEngCal.TurboSpeedTab":
                        description = "Max allowed m_request depending on ambient air. Resolution is 1 mg/c.";


                        break;
                    case "LimEngCal.n_EngSP":
                        description = "Engine speed support points for max turbo speed. Resolution is 1 rpm.";


                        break;
                    case "LimEngCal.TurboSpeedTab2":
                        description = "Compensation factor depending on engine speed used to adjust max allowed m_request depending on ambient air. Resolution is 0.001.";


                        break;
                    case "BstKnkCal.DivFacHighLoad":
                        description = "Factor used for calculation of MapPointer when MAF.m_AirInletAir > IgnKnk.AdpHighLim for the time BstKnkCal.DivFacDelTimer. Resolution is 0.03.";


                        break;
                    case "BstKnkCal.DivFacLowLoad":
                        description = "Factor used for calculation of MapPointer when MAF.m_AirInletAir < IgnKnk.AdpHighLim . Resolution is 0.03.";


                        break;
                    case "BstKnkCal.DivFacDelTimer":
                        description = "Delay time before using the BstKnkCal.DivFacHighLoad. Resolution is 1 ms.";


                        break;
                    case "BstKnkCal.OffsetXSP":
                        description = "Support points for ignition offset. Resolution is 0.1 degree ignition retard.";


                        break;
                    case "BstKnkCal.n_EngYSP":
                        description = "Support points for engine speed. Resolution is 1 rpm.";


                        break;
                    case "BstKnkCal.MaxAirmass":
                        description = "Map for max allowed airmass for manual gearbox, m_nHigh. Resolution is 1 mg/c.";


                        break;
                    case "BstKnkCal.MaxAirmassAu":
                        description = "Map for max allowed airmass for automatic gearbox, m_nHigh. Resolution is 1 mg/c.";


                        break;
                    case "BstKnkCal.NegStep":
                        description = "If value from matrix (BstKnkCal.MaxAirmass) are belove actual max airmass are actual max airmass decreased with this value. Resolution is 1 mg/c.";


                        break;
                    case "LoadCo.ST_ACStartAir":
                        description = "Status bit indicating that Load Compensation function request extra airmass to compensate for AC compressor start load. \"ON\" - Extra air is requested \"--\" - No extra compensation air ";


                        break;
                    case "LoadCo.ST_ACCompAir":
                        description = "Status bit indicating that Load Compensation function request airmass to compensate for AC compressor load. \"ON\" - Comp Air is requested \"--\" - No compensation air ";


                        break;
                    case "LoadCo.ST_IdleAdapt":
                        description = "If compensation airmass for servo pressure are to high are normal idle control adaption disabled. 0 = Adaption allowed. 1 = Adaption not allowed.";


                        break;
                    case "LoadCo.Q_TotCompAir":
                        description = "Total compensation air, electrical- + AC- coldfriction-loadcompensation air. (LoadCoProt.Q_ACAirReq + LoadCoProt.Q_ElLoadCoAir + LoadCo.Q_ColdFricAir). Note, this airflow variable does not include the airmass for throttle potentiometer wiperclean function, LoadCoProt.m_WCleanAir. The total airmass from the loadcompensation function (m_nLow) is: LoadCo.Q_TotCompAir converted to airmass (m) + LoadCoProt.m_WCleanAir. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCo.n_NomIdleOff":
                        description = "Offset to nominal engine speed depending on servo pressure. Resolution is 1 rpm.";


                        break;
                    case "LoadCo.Q_ColdFricAir":
                        description = "Airmass compensating for cold friction. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoProt.ST_ACReq":
                        description = "This is normaly a copy of In.ST_ACReq, but if the driver has pushed the pedal more than a calibrated limit and the engine speed is lower than a calibrated limit, the AC will be turned off by setting LoadCoProt.ST_Req to 0.";


                        break;
                    case "LoadCoProt.ST_ACRamping":
                        description = "Status; AC compensating airmass is ramping on or off.";


                        break;
                    case "LoadCoProt.ST_ElLoadRamp":
                        description = "Status showing if electrical load compensating airmass is ramping.";


                        break;
                    case "LoadCoProt.ST_ACExAirDem":
                        description = "0 = Statusvariable is not initialized or no demand for extra air. 1 = Extra air needed at first AC start due to low temperature. 2 = Extra air is already used.";


                        break;
                    case "LoadCoProt.t_ElLoadRamp":
                        description = "Rampingtime. When a change in electrical load occure, the compensation airmass will be increased or decreased during time. Read from a small table using enginespeed as support points.";


                        break;
                    case "LoadCoProt.Q_ElLoadCoAir":
                        description = "Airmass compensating for load on engine due to electric consumption.";


                        break;
                    case "LoadCoProt.Q_ACCompAir":
                        description = "Airmass compensating for load on engine due to AC-compressor power consumption without extra air due to ACstarttorque.";


                        break;
                    case "LoadCoProt.Q_ACAirReq":
                        description = "Airmass compensating for load on engine due to AC-compressor power consumption.";


                        break;
                    case "LoadCoProt.Q_DynamicAir":
                        description = "Airmass compensating for extra load on engine due to AC-compressor start up power consumption.";


                        break;
                    case "LoadCoProt.m_WCleanAir":
                        description = "Additional airmass from WiperCleaner function. Resolution is 1 mg/c.";


                        break;
                    case "LoadCoProt.t_ACOnOff":
                        description = "Time when CMD_ACRelay will be turned on or off.";


                        break;
                    case "LoadCoProt.m_TotCompAir":
                        description = "Total compensation airmass from loadcompensation function that is send to airmass master: m_nLow = LoadCo.Q_TotCompAir converted to airmass(m) + LoadCoProt.m_WCleanAir. Resolution is 1 mg/c.";


                        break;
                    case "LoadCoProt.ST_ACCrankDone":
                        description = "This flag will be set to 1 when the AC activation during engine crank is finsihed and normal AC-control is active.";


                        break;
                    case "LoadCoCal.n_EngACShtHigh":
                        description = "Engine speed limit. Above this engine speed the AC will be turned on, if the shut off function has been active. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.n_EngACShtLow":
                        description = "Engine speed limit. If the engine speed is below this limit when the driver pushes the Acc.Pedal above a calibrated limit, the AC shut off function will be active. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.X_AccPACShtOff":
                        description = "Accelerator pedal limit. If the engine speed is below a calibrated limit when the driver pushes the Acc.Pedal above this limit, the AC shut off function will be active. The function will be stopped when the driver is releasing the pedal below this limit minus 10% or if the engine speed becomes higher than the LoadCoCal.n_EngACShtHigh limit or if the max time has expired. Resolution is 0.1%.";


                        break;
                    case "LoadCoCal.t_ACShutOff":
                        description = "Max time to keep the AC shut off function active. The function will also be stopped when the driver is releasing the pedal 10% below a calibrated limit or if the engine speed becomes higher than the LoadCoCal.n_EngACShtHigh limit. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.t_ElLoadDelay":
                        description = "Delay time before elloadcompesation air starts to ramp up or down after a change in alternator load. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.n_EngSP":
                        description = "Engine speed supportpoints for ElLoad compensation ramping time. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.t_ElLoadRampTab":
                        description = "ElLoad compensation ramping time table. The load from the alternator is ramped. The ramping time is engine speed dependent. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.p_ACSP":
                        description = "Supportpoints for AC-pressure in AC compensation airmassMap and Dynamic (AC startup) comp airmass table. ";


                        break;
                    case "LoadCoCal.n_EngineSP":
                        description = "Engine speed supportpoints for AC compensation airmassMap, delaytime AC-on and delaytime AC-off tables. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.Q_ACCompAirMap":
                        description = "Airmassflow matrix for AC compensation Air. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.Q_ACExDynAir":
                        description = "Airflow compensating extra power- consumption at first AC-start. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.t_ACRamp":
                        description = "Time to ramp aircompensation due to extra power consumption AC-startup. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.t_ACOnDlyTab":
                        description = "Delay time before AC-startup after AC-request to prepare for extra air. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.t_ACOffDlyTab":
                        description = "Delay time before AC-stop after ACOff-request to be able to takeaway compensation air. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.I_LoadSP":
                        description = "Alternator current supportpoints in electric load compensation table. Resolution is 1 A.";


                        break;
                    case "LoadCoCal.Q_ElLoadCoTab":
                        description = "Airflow table for compensation due to alternator power consumption. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.ST_Loop":
                        description = "Load compensation airmass loop control variable. \"0\" - Limit will not be considered. \"1\" - Open loop. \"2\" - Close loop.";


                        break;
                    case "LoadCoCal.T_ACExDynAir":
                        description = "At starts under this engine water temperature extra dynamic air will compensate for extra powerconsumption at the first AC-start. Resolution is 1 °C.";


                        break;
                    case "LoadCoCal.v_VehSer":
                        description = "Vehicle speed limit for steering pressure compensation. Resolution is 0.1 km/h.";


                        break;
                    case "LoadCoCal.t_SerStep":
                        description = "Time between each step of ramp for servo steering pressure compensation. Resolution is 1 msec.";


                        break;
                    case "LoadCoCal.Q_NomIdleSP":
                        description = "Support points for higher idle speed due to servo pressure. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.n_NomIdleTab":
                        description = "Table for higher idle speed due to servo pressure. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.Q_LimIdleAdap":
                        description = "If airmass compensating due to steering pressure are above this limit are adaption of normal idle control disabled. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.T_SerIdleSpd":
                        description = "Idle speed compensating due to steering pressure are not allowed belove this limit. Resolution is 1 °C.";


                        break;
                    case "LoadCoCal.ST_PowerSteer":
                        description = "Enable or disable power steering compensation.";


                        break;
                    case "LoadCoCal.n_EngXSP":
                        description = "Engine speed support points used in cold friction compensation matrix. Resolution is 1 rpm.";


                        break;
                    case "LoadCoCal.T_EngYSP":
                        description = "Engine temperature support points used in cold friction compensation matrix. Resolution is 1 °C.";


                        break;
                    case "LoadCoCal.Q_ColdFricMap":
                        description = "Cold friction compensation matrix. Temperature and engine speed depending compensation. Resolution is 1 g/s.";


                        break;
                    case "LoadCoCal.Q_ACDynamicMap":
                        description = "Dynamic airmass for compensation due to extra power consumption AC-startup. Resolution is 0.01 g/s.";


                        break;
                    case "LoadCoCal.n_CombACCrank":
                        description = "At engine start is it possible to avoid high AC compressor pressure by activating the AC-compressor during cranking. If In.T_Engine is between -5 and +50 °C and this data not is zero will the AC-relay be activated directly at CPU-powerup and turned off when number of combustions (number of TCD to TDC movements) have reach this limit (ECMStat.n_Combustion >= LoadCoCal.n_CombACCrank) or if engine speed is greater than 350 rpm. (In.n_Engine > 350)";


                        break;
                    case "LoadCoCal.m_WCleanAir":
                        description = "Calibrated additional airmass for WiperCleaner function. Resolution is 1 mg/c.";


                        break;
                    case "LoadCoCal.t_WCleanTimer":
                        description = "Calibrated toggle-time for WiperCleaner function. Resolution is 1 ms.";


                        break;
                    case "LoadCoCal.m_WCleanMinLd":
                        description = "Calibrated minimum load for WiperCleaner function to be able to get activated. Resolution is 1 mg/c.";


                        break;
                    case "LoadCoCal.n_WCleanMinRpm":
                        description = "Calibrated minimum engine speed for WiperCleaner function to be able to get activated. Resolution is 1 rpm.";


                        break;
                    case "MAFProt.ST_NegTrans":
                        description = "Flag showing if it is a negative transient, inlet manifold pressure is decreasing. Resolution is 1.";


                        break;
                    case "MAFProt.ST_PosTrans":
                        description = "Flag showing if it is a positive transient, inlet manifold pressure is increasing. Resolution is 1.";


                        break;
                    case "MAFProt.ST_NegFuelTrans":
                        description = "Flag showing if it is a negative transient for freezing of weight factor. Resolution is 1.";


                        break;
                    case "MAFProt.ST_PosFuelTrans":
                        description = "Flag showing if it is a positive transient for freezing of weight factor. Resolution is 1.";


                        break;
                    case "MAFProt.ST_Transient":
                        description = "Flag showing if it is a rpm transient. If 3 readings in a row is bigger (or smaller) than previous reading, then this flag is set. Resolution is 1.";


                        break;
                    case "MAFProt.LoadPointer":
                        description = "Load pointer in redundant airmassflow Map. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolution is 1.";


                        break;
                    case "MAFProt.ConstT_Engine":
                        description = "Constant compensating for cooling water temp in Load calculation for redundant airmass flow function. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolution is 0.01.";


                        break;
                    case "MAFProt.ConstT_AirInlet":
                        description = "Constant compensating for inlet air temp in Load calculation for redundant airmass flow function. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet. Resolution is 0.01.";


                        break;
                    case "MAFProt.X_DecreaseStep":
                        description = "Number of readings in a row where t_tdc_tdc has decreased. Used for defining transients. Resolution is 1.";


                        break;
                    case "MAFProt.X_IncreaseStep":
                        description = "Number of readings in a row where t_tdc_tdc has increased. Used for defining transients. Resolution is 1.";


                        break;
                    case "MAFProt.t_NegTransFreez":
                        description = "Time to keep negative transient flag set after MAFProt.p_DeltaInlet is in Steady state level again. Resolution is 1 ms.";


                        break;
                    case "MAFProt.t_PosTransFreez":
                        description = "Time to keep positive transient flag set after MAFProt.p_DeltaInlet is in Steady state level again. Resolution is 1 ms.";


                        break;
                    case "MAFProt.HFMWeightCoef":
                        description = "Actual filter constant for Fuel airmass filter. Resolution is 1.";


                        break;
                    case "MAFProt.p_DeltaInlet":
                        description = "Actual pressure gradient in inlet manifold used for airmass filtering. Resolution is 1 kPa.";


                        break;
                    case "MAFProt.t_TDC_TDC_Filt":
                        description = "Filtered time in TPU timerticks for calculation of load signal. The unfiltered value is \"ActualIn.t_TDC_TDC\".";


                        break;
                    case "MAFProt.Q_AltitudeComp":
                        description = "Altitude compensation that is added onto MAF.Q_AirFromArea.";


                        break;
                    case "MAFProt.AltCompPercent":
                        description = "Altitude compensation in percent that is added onto MAF.Q_AirFromArea. See also MAFProt.Q_AltitudeComp.";


                        break;
                    case "MAF.Q_AirInletFilt":
                        description = "Inlet manifold air flow from maf sensor in gram per second filtrated. This air flow is recalculated from MAF.m_AirInletAir. Resolution is 0.01 g/s. Interval is every combustion.";


                        break;
                    case "MAF.m_AirInlet":
                        description = "Airmass in milligram per combustion. This airmass is the actual load value in the ECM. (Unfiltered) Calculated from ActualIn.Q_AirInlet. Resolution is 1 mg/c. Interval is every combustion.";


                        break;
                    case "MAF.m_AirInletBoost":
                        description = "Airmass in milligram per combustion. Filtered, used for boost control. Resolution is 1 mg/c. Interval is every combustion.";


                        break;
                    case "MAF.m_AirInletFuel":
                        description = "Airmass in milligram per combustion. Filtered, used for fuel calculation. Resolution is 1 mg/c. Interval is every combustion.";


                        break;
                    case "MAF.m_AirInletIgn":
                        description = "Airmass in milligram per combustion. Filtered, used for ignition calculation. Resolution is 1 mg/c. Interval is every combustion.";


                        break;
                    case "MAF.m_AirInletAir":
                        description = "Airmass in milligram per combustion. Filtered, used for Air control functions. Resolution is 1 mg/c. Interval is 10ms.";


                        break;
                    case "MAF.m_AirInletTorq":
                        description = "Filtrated airmass variable copying MAF .m_AirFromp_AirInlet in positive transients, MAF.m_AirInletAir during negative transients and Steady state. Resolution is 1 mg/c.";


                        break;
                    case "MAF.m_AirFromp_AirInlet":
                        description = "Redundant calculated airmassflow. Read from p_AirInlet sensor compensated for inlet air temperature and cooling water temperature. Resolution is 1 mg/c.";


                        break;
                    case "MAF.Q_AirFromp_AirInlet":
                        description = "Redundant calculated airmassflow. Converted from m_AirFromp_AirInlet. Resolution is 0.01 g/s.";


                        break;
                    case "MAF.Q_AirFromArea":
                        description = "Airflow calculated from throttle area. Resolution is 0.01 g/s.";


                        break;
                    case "MAF.p_InlBefQuote":
                        description = "This variable is (p_AirInlet / p_AirBefThrottle) * 100. It is used in calculation of air flow from area.";


                        break;
                    case "MAFCal.X_DecrStepLim":
                        description = "Number of decreasing readings of t_tdc_tdc in a row to define a positive engine speed transient. Used for shoosing rpm filter type for Q to m conv. Resolution is 1 .";


                        break;
                    case "MAFCal.X_IncrStepLim":
                        description = "Number of increasing readings of t_tdc_tdc in a row to define a negative engine speed transient. Used for shoosing rpm filter type for Q to m conv. Resolution is 1 .";


                        break;
                    case "MAFCal.WeightCoefFConst":
                        description = "HFM - p_AirInlet weight coefficient filter constant. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAFProt.HFMWeightCoef old_value -> old MAFProt.HFMWeightCoef new_value -> reading from map Const -> MAFCal.WeightCoefFConst If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCFuelSteady":
                        description = "Airmass filter constant for Fuel calculation Steady state. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> local variabel used for MAF.m_AirInletFuel old_value -> old local variabel new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCFuelSteady If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.). Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCFuelTrans":
                        description = "Airmass filter constant for Fuel calculation during transient. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> local variabel used for MAF.m_AirInletFuel old_value -> old local variabel new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCFuelTrans If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCIgnSteady":
                        description = "Airmass filter constant for Ign. calc. at Steady state and negative transients. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletIgn old_value -> old MAF.m_AirInletIgn new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCIgnSteady If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCIgnTrans":
                        description = "Airmass filter constant for Ign. calc. at positive trans. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletIgn old_value -> old MAF.m_AirInletIgn new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCIgnTrans If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCTorqSteady":
                        description = "Airmass filter constant for Torq. calc. at Steady state and positive transients. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletTorq old_value -> old MAF.m_AirInletTorq new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCTorqSteady If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterCTorqTrans":
                        description = "Airmass filter constant for Torq. calc. at negative trans. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletTorq old_value -> old MAF.m_AirInletTorq new_value -> MAF.m_AirInlet Const -> MAFCal.FilterCTorqTrans If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterConstAir":
                        description = "Airmass filter constant for airmass control. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletAir old_value -> old MAF.m_AirInletAir new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstAir If Const = 1 to 8, effective filter is used (shift. istead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new (800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.FilterConstBoost":
                        description = "Airmass filter constant for Boost function. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletBoost old_value -> old MAF.m_AirInletBoost new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstBoost If Const = 1 to 8, effective filter is used (shift. instead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new 800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "MAFCal.t_FreezeNegTrans":
                        description = "Time to keep negative transient flags set while the HFM-signal makes big under shot. If this constant is 0, then no negative transients will be trigged. Resolution is 1 ms.";


                        break;
                    case "MAFCal.t_FreezePosTrans":
                        description = "Time to keep positive transient flags set while the HFM-signal makes big over shot. If this constant is 0, then no positive transients will be trigged. Resolution is 1 ms.";


                        break;
                    case "MAFCal.p_DeltaTransLim":
                        description = "Pressure delta limit constant. A absolute p_Delta value above this limit will set the negative or positive transient flag for calculation of engine load for ignition and torque functions. The flag is then kept for a calibrated time. It is used for copying m_AirInletFrompInlet to MAF.m_AirInletIgn during negative transients and for copying m_AirInletFrompInlet to MAF.m_AirInletTorq during positve transients. Steady-state both these are filtered HFM-signals. When switching between m_AirInletFrompInlet and HFM-signal, a simpel adaption is used to have smooth transitions. Resolution is 1 kPa.";


                        break;
                    case "MAFCal.p_DeltaFuelTrans":
                        description = "Pressure delta limit constant. A absolute p_Delta value above this limit will set the negative or positive fuel transient flag. The flag is then kept for a calibrated time. This makes it possible to calculate MAF.m_AirInletFuel from inlet pressure even if p_Delta is close to 0, while the HFM reading has a big deviation compared to what the inlet pressure indicates. Resolution is 1 kPa.";


                        break;
                    case "MAFCal.n_EngineXSP":
                        description = "Engine speed support points for weight coefficient matrix for calculation of MAF.m_AirInletFuel. Resolution is 0.1 %.";


                        break;
                    case "MAFCal.p_InletGradYSP":
                        description = "Inlet manifold pressure gradient support points for weight coefficient matrix for calculation of MAF.m_AirInletFuel. Resolution is 1 kPa.";


                        break;
                    case "MAFCal.t_NegTransFreezTab":
                        description = "Time to keep negative fuel transient flag set while the HFM-signal makes big under shot. If a reading from this table is 0, then no negative fuel transient will be trigged. Resolution is 1 ms.";


                        break;
                    case "MAFCal.t_PosTransFreezTab":
                        description = "Time to keep positive fuel transient flag set while the HFM-signal makes big over shot. If a reading from this table is 0, then no positive fuel transient will be trigged. Resolution is 1 ms.";


                        break;
                    case "MAFCal.WeightConstFuelMap":
                        description = "Matrix including weighting constant for weighting airflow read from HFM (filtrated) and airflow calculated from inlet manifold pressure to calculate MAF.m_AirInletFuel. Formula: 100 * ( HFM_value - Press_value ) +/- Const Filt_value = Press_value + Const if Press_value > HFM_value -> - Const if Press_value <= HFM_value -> + Const Filt_value -> MAF.m_AirInletFuel HFM_value -> Filtrated local m_AirInlet Press_value -> MAFProt.m_LoadpAirInlet Const -> MAFProt.HFMWeightCoef (100 = 100% new, 200 = 50% new, 400 = 25% new) . Resolution is 1 .";


                        break;
                    case "MAFCal.X_RpmFiltConst":
                        description = "Filter constant for engine speed calculation for converting between Q and m. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const if old_value <= new_value -> + Const (100 = 100% new, 200 = 50% new, 400 = 25% new) . Resolution is 1 .";


                        break;
                    case "MAFCal.T_EngineSP":
                        description = "Engine cooling water temp support points for consttable . Resolution is 1 deg C.";


                        break;
                    case "MAFCal.ConstT_EngineTab":
                        description = "Engine cooling water temperature Const table for calculation of Load pointer in redundant airmassflow Map. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet . Resolution is 1.";


                        break;
                    case "MAFCal.T_AirInlSP":
                        description = "Inlet Air temperature support points for consttable. Resolution is 0.1 deg C.";


                        break;
                    case "MAFCal.ConstT_AirInlTab":
                        description = "Inlet manifold air temperature Const table for calculation of Load pointer in redundant airmassflow Map. LoadPointer = In.p_AirInlet * ConstT_Engine * ConstT_AirInlet . Resolution is 0.01.";


                        break;
                    case "MAFCal.n_EngXSP":
                        description = "Engine speed support points for matrix for redundant m_AirInlet and q_air_from_airinlet, calculated from inlet manifold pressure. Resolution is 1 rpm.";


                        break;
                    case "MAFCal.LoadYSP":
                        description = "Engine load support points calculated from inlet manifold pressure and temperature influence. For q_air_from_airinlet calculation the support point is calculated from in.p_airinlet only. Resolution is 1.";


                        break;
                    case "MAFCal.m_RedundantAirMap":
                        description = "Redundant m_AirInlet Map. Interpolated from engine speed and engine load support points. Engine load is calculated from inlet manifold pressure and adjusted depending on engine temperature and inlet air temperature. Resolution is 1 mg/c.";


                        break;
                    case "MAFCal.AreaXSP":
                        description = "Throttle area support points to get Cd-value from cd_ThrottleMap. Resolution is 1 mm°.";


                        break;
                    case "MAFCal.PQuoteYSP":
                        description = "Pressure quote (before/after throttle) support points to get Cd-value from cd_ThrottleMap. Resolution is 0.01 .";


                        break;
                    case "MAFCal.cd_ThrottleMap":
                        description = "Air flow coefficient (Cd-value) used in calculation of air flow from throttle area. This value is shifted 10 positions to the left (i.e. multiplied with 1024).";


                        break;
                    case "MAFCal.PDiffSP":
                        description = "Pressure difference support points for p_DiffCoeffTab.";


                        break;
                    case "MAFCal.p_DiffCoeffTab":
                        description = "Coefficient for Px/P0 (where Px = inlet pressure and P0 is pressure before throttle) used in calculation of air flow from throttle area. This value is shifted 10 positions to the left (i.e. multiplied with 1024) AND multiplied with 10. The reason for the last multiplication is to get a. Resolution of 0.01 g in the calculated air flow.";


                        break;
                    case "MAFCal.TCompSP":
                        description = "Temperature support points for p_DiffCoeffTab.";


                        break;
                    case "MAFCal.T_TempCoeffTab":
                        description = "Coefficient for temperature factor in calculation of air flow from throttle area. This factor is: sqrt(R*T0), where R=287 and T0 is temperature before throttle in Kelvin.";


                        break;
                    case "MAFCal.Diagn_EngXSP":
                        description = "Engine speed support points for matrix for corr_AirFromp. Resolution is 1 rpm.";


                        break;
                    case "MAFCal.DiagLoadYSP":
                        description = "Engine load support points calculated from inlet manifold pressure. Resolution is 1.";


                        break;
                    case "MAFCal.cd_Level":
                        description = "Is used to set the pressure level while cd_mapping for calculation of MAF.Q_AirfromArea not depending on altitude.";


                        break;
                    case "MAFCal.AltitudeMulFac":
                        description = "Is used to set the mul factor for calculation of MAF.Q_AirfromArea not depending on altitude.";


                        break;
                    case "MapChk.ST_Error":
                        description = "Status bit indicating that the checksum calculated on the calibration data which can increase airmass demand is faulty or not. 0 = checksum OK or not checked. 1 = checksum faulty (memory error or hardware problem) ";


                        break;
                    case "MapChk.CheckSum":
                        description = "Checksum calculated in background from the data which can increase airmass demand.";


                        break;
                    case "MapChkCal.ST_Enable":
                        description = "Status constant indicating if checksum is calculated on the calibration data which can increase airmass demand. ";


                        break;
                    case "MapChkCal.CheckSum":
                        description = "Checksum calculated from the calibration data file, which can increase airmass demand.";


                        break;
                    case "MaxSpdProt.n_EngLimAir":
                        description = "Actual engine speed limit for reducing the amount of air when a gear is selected. Resolution is 1 rpm.";


                        break;
                    case "MaxSpd.n_EngLimFuel":
                        description = "Engine speed limit for fuelcut, this limit is always active undepending of detected gear. This limit is 200rpm above \"MaxSpdProt.n_EngLimAir\". Resolution is 1 rpm.";


                        break;
                    case "MaxSpd.AirOffset":
                        description = "Offset for decrease of airmass request depending on high engine speed. Resolution is 1 mg/c.";


                        break;
                    case "MaxSpdCal.T_EngineSP":
                        description = "Temperature suportpoints for table including max engine speed. Resolution is 1 °C.";


                        break;
                    case "MaxSpdCal.n_EngLimAir":
                        description = "This table include the maximum engine speed limit. Above this limit will the airmass be reduced if a gear is detected. It is always fuelcut above this limit + 200rpm. Resolution is 1 rpm.";


                        break;
                    case "MaxSpdCal.AirOffset":
                        description = "Factor for decrease requested airmass when engine speed are to high. Resolution is 1 mg/c.";


                        break;
                    case "MaxSpdCal.RampFac":
                        description = "Factor for decrease airmass offset when engine speed have been to high. Resolution is 1 mg/c.";


                        break;
                    case "MaxSpdCal.MaxOffset1":
                        description = "Max allowed offset (MaxSpd.AirOffset). Used for gear 1 and 2. Resolution is 1 mg/c.";


                        break;
                    case "MaxSpdCal.MaxOffset2":
                        description = "Max allowed offset (MaxSpd.AirOffset). Used for gear higher than 2. Resolution is 1 mg/c.";


                        break;
                    case "MaxSpdCal.n_EngMin":
                        description = "The airmass offset depending on to high engine speed are cleared belove this engine speed. Resolution is 1 rpm.";


                        break;
                    case "MaxSpdCal.n_FuelCutOffset":
                        description = "The offset between fuelcut and reducing air only. Resolution is 1 rpm.";


                        break;
                    case "AirMinLim.ST_FCutAllowed":
                        description = "Status bit enabling fuel cut from AirMinLim Master when Tipout is ready. \"ON\" - Fuel Cut allowed \"--\" - Fuel Cut not allowed";


                        break;
                    case "AirMinLim.ST_MinLimAct":
                        description = "Status variable indicating which MinLim is active (highest) for the moment. 0 = Min Load highest 1 = Tipout highest 2 = LDA function highest";


                        break;
                    case "AirMinLim.m_LDAReq":
                        description = "From Torque Master requested min airmass for LDA function. Resolution is 1 mg/c.";


                        break;
                    case "AirMinLimProt.Q_MinLoad":
                        description = "The lowest airmass the engine needs at the actual engine speed. Resolution is 0.01 g/s.";


                        break;
                    case "AirMinLimCal.ST_Loop":
                        description = "Engine Airmassflow Min Limit regulating loop control variable. \"0\" - Limit will not be considered. \"1\" - Open loop. \"2\" - Close loop.";


                        break;
                    case "AirMinLimCal.Q_MinLoadTab":
                        description = "Minimum airmass flow for the engine. Below this limit the HC-emission will increase rapidly, due to bad combustion. Resolution is 0.01 g/s.";


                        break;
                    case "AirMinLimCal.n_EngineSP":
                        description = "Engine speed supportpoints for Q_MinLoad table. Resolution is 1 rpm.";


                        break;
                    case "AirMinLimCal.n_EngYSP":
                        description = "This dummy variable is needed when linking executable programs with link332.bat batch fil. Switchpoint calculations is using this data.";


                        break;
                    case "AirMinLimCal.Q_DashPotMap":
                        description = "This dummy variable is needed when linking executable programs with link332.bat batch file. Switchpoint calculations is using this data.";


                        break;
                    case "AirMinLimCal.n_EngUseOffset":
                        description = "Use ambient and vehicle speed offset to calculate minimum load";


                        break;
                    case "AirMinLimCal.p_AirAmbSP":
                        description = "Support pointer for min load";


                        break;
                    case "AirMinLimCal.p_AirAmbTab":
                        description = "Offset on minload depending on ambient pressure";


                        break;
                    case "AirMinLimCal.v_VehicleSP":
                        description = "Support pointer for min load";


                        break;
                    case "AirMinLimCal.v_VehicleTab":
                        description = "Offset on minload depending on vehicle speed";


                        break;
                    case "PedalProt.PedalNotInIdle":
                        description = "Indicates if pedal is i idle or not. Resolution is bit.";


                        break;
                    case "PedalProt.AD_PedalPot1":
                        description = "Copied pedal1 position because pedal1 is read every 5 ms. Resolution is bit.";


                        break;
                    case "PedalProt.AD_FilteredPos":
                        description = "Filtered pedal position of pedal poti 1. Resolution is bit.";


                        break;
                    case "PedalProt.AD_CapturedPos":
                        description = "Captured pedal position of pedal poti 1. Resolution is bit.";


                        break;
                    case "PedalProt.AD_EstimatePos":
                        description = "Estimated position for a possible new pedal block of pedal poti 1. Resolution is bit.";


                        break;
                    case "PedalProt.ms_DebounceTimer":
                        description = "timer to debounce the actual pedal position. Resolution is 20 ms (loops).";


                        break;
                    case "PedalCal.AD_Decrement":
                        description = "Amount of bits which are subtracted from the pedal block if the logic is enabled. Resolution is bit.";


                        break;
                    case "PedalCal.AD_Increment":
                        description = "Amount of bits which are added to the pedal block if the logic is enabled. Resolution is bit.";


                        break;
                    case "PedalCal.AD_CaptureHyst":
                        description = "specified a range around a captured value where it is possible to find a new pedal block. Resolution is bit.";


                        break;
                    case "PedalCal.ms_UpDebounce":
                        description = "Debouncing time for upwards adaptation. Resolution is 20 ms.";


                        break;
                    case "PedalCal.ms_DownDebounce":
                        description = "Debouncing time for down adaptation. Resolution is 20 ms.";


                        break;
                    case "PedalMapProt.X_Fac":
                        description = "Pedal factor. In.X_AccPedal is multiplied with this factor and the result is used as a pointer in the pedal map (PedalMapProt.X_AccPedal). The pedal factor is - 819 ( 80%) for \"Economi\" - Calibrational for \"Sport\" - 1024 (100%) when Fault.v_Vehicle - Vehicle speed dependent for \"Automatic\" and \"Manual\" (different maps). Resolution is 0.001.";


                        break;
                    case "PedalMapProt.X_AccPedal":
                        description = "In.X_AccPedal multiplied with PedalMapProt.X_Fac used as a pointer in the pedal map. Resolution is 0.1 %.";


                        break;
                    case "PedalMapProt.AD_AccPedal":
                        description = "Adapted pedal AD value used for kickdown limits. Calculated as follows: PedalMapProt.AD_AccPedal = In.AD_PedalPot1 - VIOSAdap.AD_PedalBlock. Resolution is 1.";


                        break;
                    case "PedalMapProt.SportMode":
                        description = "Actual sport mode: 0 - Normal mode 1 - Ramping to sport 2 - Sport active";


                        break;
                    case "PedalMapProt.SentronicMode":
                        description = "Actual Sentronic mode: 0 - Normal mode 1 - Ramping to Sentronic mode 2 - Sentronic mode active";


                        break;
                    case "PedalMapCal.AD_KDLimitHigh":
                        description = "Limit for kick-down signal if PedalMapProt.AD_AccPedal > limithigh => CMD_kickDown = 1";


                        break;
                    case "PedalMapCal.AD_KDLimitLow":
                        description = "Limit for kick-down signal if PedalMapProt.AD_AccPedal < limitlow => CMD_kickDown = 0";


                        break;
                    case "PedalMapCal.ST_NoiseRed":
                        description = "This flag controls if the kickdown flag shall indicate kickdown when the torque noise reduction is active. If this flag is set and Torque.ST_NoisReduc not is zero will kickdown not be indicated.";


                        break;
                    case "PedalMapCal.ST_Function":
                        description = "initialisation of the function-status; here specially to change the status for the pedal;";


                        break;
                    case "PedalMapCal.v_VehAutSP":
                        description = "AutFacTab supportpoints (v_Vehicle);. Resolution is 0.1 km/h;.";


                        break;
                    case "PedalMapCal.X_AutFacTab":
                        description = "The pedal position pointer in the pedal map will be multiplied with this factor before the interpolation is done to calculate m_Driver. The factor is related to the vehicle speed. Used in normal mode (no sport or economi mode), for automatic gearbox when vehicle speed signal is OK. Resolution is 0.001.";


                        break;
                    case "PedalMapCal.v_VehManSP":
                        description = "ManFacTab supportpoints (v_Vehicle);. Resolution is 0.1 km/h;.";


                        break;
                    case "PedalMapCal.X_ManFacTab":
                        description = "The pedal position pointer in the pedal map will be multiplied with this factor before the interpolation is done to calculate m_Driver. The factor is related to the vehicle speed. Used in normal mode (no sport or economi mode), for manual gearbox when vehicle speed signal is OK. Resolution is 0.001 .";


                        break;
                    case "PedalMapCal.X_CabFacTab":
                        description = "The pedal position pointer in the pedal map will be multiplied with this factor before the interpolation is done to calculate m_Driver. The factor is related to the vehicle speed. Used in normal mode (no sport or economi mode), for convertible when vehicle speed signal is OK. Resolution is 0.001 .";


                        break;
                    case "PedalMapCal.n_EngineMap":
                        description = "Pedal map supportpoints for the x-axis (n_Engine);. Resolution is 1 rpm;.";


                        break;
                    case "PedalMapCal.X_PedalMap":
                        description = "Pedal map supportpoints for the y-axis (X_AccPedal);. Resolution is 0.1%.";


                        break;
                    case "PedalMapCal.m_RequestMap":
                        description = "Rerquested airmass from the driver as a function of rpm and accelerator pedalposition. Resolution is 1 mg/c.";


                        break;
                    case "PedalMapCal.X_PedHighLim":
                        description = "If In.X_AccPedal is above this limit when the sport button is pressed will the sport mode be directly activated. Resolution is 0.1 %.";


                        break;
                    case "PedalMapCal.X_PedLowLim":
                        description = "If In.X_AccPedal is below this limit when the sport button is pressed will the sport mode be directly activated. Resolution is 0.1 %.";


                        break;
                    case "PedalMapCal.X_PedDeltLim":
                        description = "If In.X_AccPedal delta (20ms base) is abowe this limit after the sport mode is selected will the sport mode be directly activated. Resolution is 0.1 %.";


                        break;
                    case "PedalMapCal.SportFactor":
                        description = "When sport mode is selected will the pedal position pointer in the pedal map be multiplied with this factor before the interpolation is done to calculate m_Driver. Resolution is 0.001 .";


                        break;
                    case "PedalMapCal.SentronicFactor":
                        description = "When Sentronic mode is selected will the pedal position pointer in the pedal map be multiplied with this factor before the interpolation is done to calculate m_Driver. Resolution is 0.001 .";


                        break;
                    case "PwmLimit.BlockAdapActive":
                        description = "Status of blockadaption transfered to PWMLimit Master. Resolution is 1 bit. Interval is 10 ms.";


                        break;
                    case "PwmLimit.BlockAdapLimit":
                        description = "Limitation value for pwm signal of position controller, if blockadaption is active. Resolution is 1 bit. Interval is 10 ms.";


                        break;
                    case "PwmLimit.Status":
                        description = "Indicates the status of the pwm-limitation function. Resolution is 1 bit. Interval is 10 ms .";


                        break;
                    case "PwmLimit.To592LimitValue":
                        description = "tranfers the required pwm limit to the 592. Resolution is 1 bit. Interval is 10 ms .";


                        break;
                    case "PwmLimit.ms_Timer":
                        description = "Timer to debounce the PWM limitation if ordered due to 100% PWM in opening or closing direction. Resolution is 1 ms. Interval is 10 ms .";


                        break;
                    case "PwmLimitCal.Size":
                        description = "Size of table pwmlimit = f(u_Batt). Resolution is 1 bit.";


                        break;
                    case "PwmLimitCal.U_Batt":
                        description = "support points for table pwmlimit = f(u_Batt). Resolution is 0.1 Volt.";


                        break;
                    case "PwmLimitCal.PwmLimit":
                        description = "Pwm limit for the H_bridge. Transfered to the 592 cpu 139 => 100 % Pwm 0 => 0 % Pwm between these values the function is linear. Resolution is 1% .";


                        break;
                    case "PwmLimitCal.ms_Time":
                        description = "Debouncing time for execution of PWM limitation due to 100% PWM in opening or closing direction. When PWM limitation is ordered it will not be executed until this time has passed. It represent how long time it takes before the temperature in the throttle house exceeds max specifications. Resolution is 1 ms.";


                        break;
                    case "PwmLimitCal.ms_Decrement":
                        description = "The timer \"PwmLimit.ms_Timer\" above is decremented with this value every 10 ms when the PWM limitation due to 100% PWM in opening or closing direction is not ordered. This calibration data is used for simulation of temperature decrease in the throttle house. Example: If ms_Decrement is 2, the cooling time will be 5 times longer than the heating time. Resolution is 1 ms.";


                        break;
                    case "RampCal.Gradient":
                        description = "ramp from the actual i part level down to zero.The ramp is active every 10 ms with the gradient which is calibrated. Resolution is 1 mg/c.";


                        break;
                    case "SwitchProt.ST_ThrottleIdle":
                        description = "Indicates that throttle is in idle position by comparing throttle area (from poti 2) with the switchpoint area. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt.ST_PedalIdle":
                        description = "Indicates that pedal is in idle position. The pedal2 idle information is read by the 592, sent to the 339 and debounced. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt.ST_PedalIdleOld":
                        description = "Old pedal2 idle information. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt.ST_PedalIdleNew":
                        description = "New pedal2 idle information. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt.ST_Transition_0_1":
                        description = "Indicates a pedal2 transition from non-idle into idle. Resolution is \"0\" => no transition in idle.";


                        break;
                    case "SwitchProt.PedalDebounce":
                        description = "Debouncing timer for pedal2 idle information when moving from non-idle to idle. This timer is also indirectly used by the limitation function which becomes active when the pedal2 is idle and the area request is above the switchpoint. The debouncing time must be as long as the area request will enter \"Idle position\" after releasing the pedal. Resolution is 10 ms.";


                        break;
                    case "SwitchProt.t_SwitchErr":
                        description = "Debouncing timer for a safety switch error. Resolution is 1 ms.";


                        break;
                    case "SwitchProt.A_AmbPresOff":
                        description = "Switch point area offset due to: ambient air pressure. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_EngTempSpeed":
                        description = "Switch point map area value due to: engine speed and temperature. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_SwitchPoint":
                        description = "The estimated - max area request and - max allowed throttle2 area with released accelerator pedal2. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_ACOffset":
                        description = "Switch point area offset due to AC. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_DPOffset":
                        description = "Switch point area offset due to Dashpot dummy variable. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_LDAOffset":
                        description = "Switch point area offset due to LDA. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.t_EngStartOff":
                        description = "Debouncing timer for area offset due to Start air. Resolution is 1 ms.";


                        break;
                    case "SwitchProt.A_StartOffset":
                        description = "Switch point area offset due to Start air. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_LOffOffset":
                        description = "Switch point area offset due to Light Off air. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt.A_ACStartOffs":
                        description = "Switch point area offset due to AC start up. Resolution is 1 mm^2.";


                        break;
                    case "SwitchProt1.ST_ThrottleIdle":
                        description = "Indicates that throttle is in idle position regarding throttle poti 1. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt1.ST_PedalIdle":
                        description = "Indicates that pedal is in idle position regarding pedal poti 1. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt1.ST_PedalIdleOld":
                        description = "Old pedal safety switch information. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt1.ST_PedalIdleNew":
                        description = "New pedal safety switch information. Resolution is \"0\" => not in idle.";


                        break;
                    case "SwitchProt1.ST_Transition_0_1":
                        description = "Indicates a transition from non-idle into idle. Resolution is \"0\" => no transition in idle.";


                        break;
                    case "SwitchProt1.PedalDebounce":
                        description = "Debouncing timer for safety switch pedal to indicate idle only the transition non-idle to idle has a debouncing time. Resolution is 10 ms.";


                        break;
                    case "SwitchProt1.t_SwitchErr":
                        description = "Debouncing timer for switch error. Resolution is 10 ms.";


                        break;
                    case "SwitchProt1.A_AmbPresOff":
                        description = "Area offset read from a table. Ambient air pressure depending offset. Resolution is 1 mm2.";


                        break;
                    case "SwitchProt1.A_Throttle1":
                        description = "Relative movement of throttle poti1. Resolution is 1 mm2.";


                        break;
                    case "SwitchProt1.A_EngTempSpeed":
                        description = "Area read from a table. Throttle switch point = f(T_Engine,n_Engine) . Resolution is 1 mm2.";


                        break;
                    case "SwitchProt1.A_SwitchPoint":
                        description = "Limit to detece idle position or not. If throttle poti 1 is below A_SwitchPoint, idle is indicated. Resolution is 1 mm2.";


                        break;
                    case "SwitchProt1.t_EngStartOff":
                        description = "Debouncing timer for area offset due to Start air. Resolution is 1 ms.";


                        break;
                    case "Switch.ST_LimActive":
                        description = "Indication that the safety switch limitation function is active due to a too high area request. Resolution is 1 bit.";


                        break;
                    case "Switch.ST_ErrorActive":
                        description = "Indication that the safety switch error function has detected a too high throttle area. The pedal2 idle status = 1 and the throttle2 idle status = 0. After a defined debouncing time the system will enter limphome. Resolution is 1 bit.";


                        break;
                    case "Switch.ST_Error":
                        description = "Indication that the safety switch error function has set a fault due to a too high throttle area. The ST_ErrorActive has been 1 for more than the debouncing time and the system will enter limphome. Resolution is 1 bit.";


                        break;
                    case "Switch.A_Demand":
                        description = "Demand throttle value from the safety switch logic If no limitation is active this is the output of demand filter module. Resolution is 1 mm^2.";


                        break;
                    case "Switch.A_SwitchPoti1":
                        description = "Absolute switch point for throttle poti 1 can be compared with Out.A_throttleDemand or In.A_throttleActual. Resolution is 1 mm^2.";


                        break;
                    case "Switch.A_SwitchPoti2":
                        description = "Absolute switch point for throttle poti 2 can be compared with In.A_ThrottlePot1Adap2. Resolution is 1 mm^2.";


                        break;
                    case "Switch1.ST_LimActive":
                        description = "Indication that the safety switch logic limitation is active. Resolution is 1 bit.";


                        break;
                    case "Switch1.ST_ErrorActive":
                        description = "Indication that the safety switch error function has detected a too high throttle area. The pedal1 idle status = 1 and the throttle1 idle status = 0. After a defined debouncing time the system will enter limphome. Resolution is 1 bit.";


                        break;
                    case "Switch1.ST_Error":
                        description = "Indication that the safety switch error function has set a fault due to a too high throttle area. The ST_ErrorActive has been 1 for more than the debouncing time and the system will enter limphome. Resolution is 1 bit.";


                        break;
                    case "Switch1.A_Demand":
                        description = "Demand throttle value from the safety switch logic If no limitation is active this is the output of demand filter module. Resolution is 1 mm2.";


                        break;
                    case "StartAirCal.PedalLimit":
                        description = "Above this accelerator pedal limit is the fuel cutted and the throttle is fully open.";


                        break;
                    case "StartAirCal.A_EngineStill":
                        description = "When following conditions is true will this area request be used for the trhottle to maintain a diff pressure ower the throttle for crank sensor diagnostics: OBDCal.OBD2Enabled = 1 and obdOutOfLimits = 0 and ECMStat.ST_EngNotMoving = 1 and more than 1sec since ignkey on When the above coditions is true will following select low be done: if( AreaData.A_Controller < StartAirCal.A_EngineStill ) Out.A_ThrottleDemand = AreaData.A_Controller; else Out.A_ThrottleDemand = StartAirCal.A_EngineStill;";


                        break;
                    case "SwitchCal.t_SwitchErr":
                        description = "Debouncing time to detect that the pedal status indicates idle and the throttle status non idle that means that the limitation doesn't work. After this debouncing time the system will go into E_Gas limp-home. Resolution is 1 ms.";


                        break;
                    case "SwitchCal.PedDebouncing":
                        description = "Debouncing time to detect that the pedal status indicates idle. Resolution is 10 ms.";


                        break;
                    case "SwitchCal.A_OffsetPoti2":
                        description = "Offset to detect throttle poti2 in idle. If relative throttlepoti2 > a_switchpoint + hysteresis non idle is indicated. The a_switchpoint for poti2 is calculated in the same way as for poti1.The only exception is that an offset is added to compensate the non linearity error of the two potis. That means throttle poti2 always indicates idle on a higher level than poti1. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_SwitchErrHyst":
                        description = "Hysteresis used to detect if throttle is in idle position. If throttle_area > switchpoint_area + hysteresis_area, not in idle position is indicated. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_Tolerance":
                        description = "Offset used for calculation of the limited throttle area. Limited throttle_area = switchpoint_area - tolerance_area. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_ACOffset":
                        description = "Offset to the map SwitchCal.A_SwitchPoint if ac is active. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_DPOffset":
                        description = "Offset to the map SwitchCal.A_SwitchPoint if dashpot dummy varible is active. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_LDAOffset":
                        description = "Offset to the map SwitchCal.A_SwitchPoint if LDA is active. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.n_EngStartOff":
                        description = "Safety switch must limit the time when start offset .. The SwitchCal.A_StartOffset is added to the map SwitchCal.A_SwitchPoint as long as: - the start is active (Idle.StartAirMode > 0) and - the time since engine speed went above SwitchCal.n_EngStartOff is less than SwitchCal.t_EngStartOff. Resolution is 1 rpm.";


                        break;
                    case "SwitchCal.t_EngStartOff":
                        description = "Safety switch must limit the time when start offset .. The SwitchCal.A_StartOffset is added to the map SwitchCal.A_SwitchPoint as long as: - the start is active (Idle.StartAirMode > 0) and - the time since engine speed reached SwitchCal.n_EngStartOff is less than SwitchCal.t_EngStartOff. Resolution is 1 ms.";


                        break;
                    case "SwitchCal.A_StartOffset":
                        description = "Offset to the map SwitchCal.A_SwitchPoint if start is active. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_LOffOffset":
                        description = "Offset to the map SwitchCal.A_SwitchPoint if ?? is active. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.A_ACStartOffs":
                        description = "Offset to the map SwitchCal.A_SwitchPoint during AC start up. Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.p_AmbientYSP":
                        description = "Ambient air pressure support points for ambient air pressure compensation offset matrix in the switch point function. Resolution is 0.1 kPa.";


                        break;
                    case "SwitchCal.n_EngXSP":
                        description = "Engine support points for ambient air pressure compensation offset matrix in the switch point function. Resolution is 1 rpm.";


                        break;
                    case "SwitchCal.A_AmbPresMap":
                        description = "Offset to the map SwitchCal.A_SwitchPoint to compensate for high altitude. (Low ambient air pressure). Resolution is 1 mm^2.";


                        break;
                    case "SwitchCal.T_Engine":
                        description = "T_Engine support point for map A_switchpoint = f(T_Engine,n_Engine). Resolution is 1 °C.";


                        break;
                    case "SwitchCal.n_Engine":
                        description = "n_Engine support point for map A_switchpoint = f(T_Engine,n_Engine). Resolution is 1 rpm.";


                        break;
                    case "SwitchCal.A_SwitchPoint":
                        description = "A_SwitchPoint = f(T_Engine,n_Engine). Resolution is 1 mm^2.";


                        break;
                    case "TempTiCal.x_axis":
                        description = "values for x-axis Gradient of p_Airinlet measured every 50 ms. Input parameter for the table TempTiCal. Resolution is 1 rpm.";


                        break;
                    case "TempTiCal.y_axis":
                        description = "Airmass deviation values for y-axis Input parameter for the table TempTiCal. Resolution is 1 mg/c.";


                        break;
                    case "TempTiCal.map":
                        description = "Parameter for I-part of airmass-controller Changes the behavior of the controller. shorter time => quicker the I-part of the controller. Resolution is 1 ms.";


                        break;
                    case "TempTiIdleCal.Idle":
                        description = "Parameter for I-part of airmass-controller Changes the behavior of the controller. shorter time => quicker the I-part of the controller. Resolution is 1 ms.";


                        break;
                    case "TiCalcuCal.ms_InletUpdate":
                        description = "Update time of delta p_Inlet. Resolution is 1 ms.";


                        break;
                    case "TiCalcuCal.TiNoPressure":
                        description = "Used ti parameter if pressure over throttle is in a certain range. Resolution is 1 bit.";


                        break;
                    case "TiCalcuCal.p_DiffMin":
                        description = "Determind the minimum pressure over throttle where a manipulation of the ti parameter is allowed. Resolution is 0.1 kPa.";


                        break;
                    case "TiCalcuCal.p_DiffHysteresis":
                        description = "Determind the hysteresis of pressure over throttle where a manipulation of the ti parameter is allowed if pressure > p_DiffMin the I-part will be frozen if pressure < p_DiffMin - Hysteresis then ti is taken out of ti map. Resolution is 0.1 kPa.";


                        break;
                    case "TempLimPosCal.Airmass":
                        description = "values for x-axis Specifies the table TempLimPosCal.table";


                        break;
                    case "TempLimPosCal.Limit":
                        description = "Positive limit the I-part for the addional id-controller limit = f (airmass). Resolution is 1.";


                        break;
                    case "Torque.ST_FuelCutReq":
                        description = "Status variable showing if Torque Master requests Fuel Cut Off. The FCO request will come if M_Engine > torque limit + calibrated offset. 0 = Fuel Cut Off not requested 1 = Fuel Cut Off requested ";


                        break;
                    case "Torque.ST_ExtTrqLim":
                        description = "Ignition influence on torque read from matrix. 0 = Extern Limit Req will be made by air reduction 1 = short time, reduction will only be done by ignition 2 = longer time, reduction by air just for a while 3 = Overtime, Request has durated more than In.t_ExtLimDuration + TorqueCal.t_ThrOverTime";


                        break;
                    case "Torque.M_MaxEngAndGear":
                        description = "Maximum engine and gearbox torque at the actual engine speed. Resolution is 1 Nm.";


                        break;
                    case "Torque.ST_NoiseReduc":
                        description = "Status showing which mode is actual for the noise reduction function. 0 = No reduction. 1 = Reduction is trigged but not activated. 2 = Reduction is requested at calibrated level. 3 = Reduction is requested and ramping.";


                        break;
                    case "Torque.M_Nominal":
                        description = "Nominal engine output torque at a certain enginespeed and inlet airmass. Read from matrix.";


                        break;
                    case "Torque.fi_IgnLim":
                        description = "Ignition angle limit, where earlier spark will reduce the torque, read from matrix.";


                        break;
                    case "TorqueProt.fi_IgnReq":
                        description = "Ignition angle request to Ignition Master to reduce the torque.";


                        break;
                    case "TorqueProt.fi_IgnMin":
                        description = "Min ignition angle request to Ignition Master to reduce the torque. Interpolated from temperature depended table.";


                        break;
                    case "TorqueProt.m_Friction":
                        description = "Airmass corresponding to the torque losses due to extra friction because the engine is not warm and also corresponding diffrence between the actual engine and the engine used when calibration of torqueMap was done. Used for compensation when calculating and limiting engine output torque.";


                        break;
                    case "TorqueProt.M_NoiseReduc":
                        description = "Max engine output torque to keep vehicle noise at a approved limit when accelerating from 50 km/h (or calibrated speed).";


                        break;
                    case "TorqueProt.M_LowLim":
                        description = "By the Torque Master selected lowest torque limit request, corrected with adaption value made at idle.";


                        break;
                    case "TorqueProt.M_LimForIgnRed":
                        description = "Torque limit request for ignition reduction.";


                        break;
                    case "TorqueProt.m_AirTMasLim":
                        description = "The Torque Masters requested airmass to limit engine output torque. Resolution is 1 mg/c.";


                        break;
                    case "TorqueProt.t_AccumIgnRed":
                        description = "Accumulated ignition reduction time. Added when reduction is active and subtracted when no ignition is active. Subtraction can be reduced by a calibrated factor. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.t_NoiseRedTrig":
                        description = "When msCounter reaches this time, the noise reduction limitation will be trigged if the driver pushes the accpedal above the calibrated level. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.t_NoiseRedConst":
                        description = "When msCounter reaches this time, the noise reduction limitation has been trigged and reduced the torque at the calibrated limit for the calibrated time. The ramp will now start. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.t_NoiseRedRamp":
                        description = "When msCounter reaches this time, the noise reduction limitation has been trigged and reduced the torque at the calibrated limit for the calibrated time and the ramp is also finished. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.ms_ShUp":
                        description = "Last system time TCM made a shift up. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.ms_ShDown":
                        description = "Last system time TCM made a shift down. Resolution is 1 ms.";


                        break;
                    case "TorqueProt.X_OutAccPed":
                        description = "Calculated accelerator pedal position. : The same value as Out.X_AccPedal. (Help varaible). Resolution is 0.1 %.";


                        break;
                    case "TorqueProt.X_OutAccPed1":
                        description = "Calculated accelerator pedal position. WITHOUT affect from: - Limitation of Out.X_AccPedal delta - Out.X_AccPedal offset Used when you want to see the affect of Out.X_AccPedal delta limitation and offset. Resolution is 0.1 %.";


                        break;
                    case "TorqueProt.X_OutAccPed2":
                        description = "Calculated accelerator pedal position. WITHOUT affect from: - Out.X_AccPedal offset Used when you want to see the affect of Out.X_AccPedal offset. Resolution is 0.1 %.";


                        break;
                    case "TorqueProt.X_OOutAccPed":
                        description = "Calculated accelerator pedal position. The value of Out.X_AccPedal 10 ms ago. Used for limitation of delta. Resolution is 0.1 %.";


                        break;
                    case "TorqueProt.X_Offset":
                        description = "Out.X_AccPedal offset (included in the Out.X_AccPedal) The offset result of the gear shift support function. Resolution is 0.1 %.";


                        break;
                    case "TorqueProt.nosample":
                        description = "Counter for internal use";


                        break;
                    case "TorqueProt.n_engbuf":
                        description = "Stored old values of In.n_Engine10ms to be used as pointer in convertion of torquemaster to m_Air AND max engine torque";


                        break;
                    case "TorqueProt.n_engfilt":
                        description = "Filtered value of In.n_Engine10ms to be used as pointer in convertion of torquemaster to m_Air AND max engine torque";


                        break;
                    case "TorqueProt.t_gearShift":
                        description = "Time when filtering started";


                        break;
                    case "TorqueProt.t_OverBoostTimer":
                        description = "Shows how long the overboostfunction has been enabled";


                        break;
                    case "TorqueProt.t_CoolingTimer":
                        description = "Shows how long the m_Request has been below the calibration value.";


                        break;
                    case "TorqueProt.M_LowInternal":
                        description = "Torque maximum of internal engine functions, used for calculating Out.M_DTI";


                        break;
                    case "TorqueProt.M_Rotation":
                        description = "Torque needed for engine to change rotationenergy";


                        break;
                    case "TorqueProt.M_Total":
                        description = "Actual torque from engine, where all three components are added, actual air, ignition and moment of inertia. M_Total = TorqueProt.M_Rotation + Torque.M_Nominal - M_OffsetIgn";


                        break;
                    case "TorqueProt.a_FreeRolling":
                        description = "Rolling resistance (measured in acceleration) for the vehicle in current speed";


                        break;
                    case "TorqueProt.M_EngineByAcc":
                        description = "Engine torque measured by acceleration of vehicle";


                        break;
                    case "TorqueProt.M_OffsetIgn":
                        description = "Differance between Torque.M_Nominal and Out.M_Engine";


                        break;
                    case "TorqueProt.M_OffAirEng":
                        description = "Differance between Torque.M_Nominal and Out.M_Engine due to Igntemperaturefi_Offset";


                        break;
                    case "TorqueProt.ST_TorqMastAct":
                        description = "Status showing which function is limiting torque in Torque Master. M = Manual gear box limitation. A = TCM limit request (Extern limit from bus). S = Automatic gearbox Stall limit request. T = TCS (traction control) limit request. E = Max Engine Torque limitation. R = Reverse limit request. N = Noise reduction limit request. D = Misfire diagnose limit request B = Brake limit request P = Diff Protection System limit request";


                        break;
                    case "TorqueProt.ST_LimWheelAct":
                        description = "Status showing which function is reducing airmass in Limit Wheel Master. V = Max Vehicle speed limit request. T = Torque Master limit request.";


                        break;
                    case "TorqueProt.M_IgnInflTorq":
                        description = "Ignition influence on torque read from matrix. Resolution is 0.1 Nm/deg.";


                        break;
                    case "TorqueProt.X_NewActGear":
                        description = "Actual gear. Used for detection of gear shift. New number to make detection of shift up and shift down easier. 2 - Reverse 3 - Neutral 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 3, lock up 9 - Gear 4 10 - Gear 4, lock up";


                        break;
                    case "TorqueProt.X_OldActGear":
                        description = "Actual gear 10 ms ago. Used for detection of gear shift. New number to make detection of shift up and shift down easier. 2 - Reverse 3 - Neutral 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 3, lock up 9 - Gear 4 10 - Gear 4, lock up";


                        break;
                    case "TorqueProt.ST_filter_n_Eng":
                        description = "Indicates if pointer TorqueProt.n_engfilt is filtered or not. 0: filter off, TorqueProt.n_engfilt = In.n_Engine10ms 1: filter on, TorqueProt.n_engfilt = average of In.n_Engine10ms during the last TorqueCal.nosample. (one sample per call of Torquemaster)";


                        break;
                    case "TorqueProt.manualgear":
                        description = "Stored gear since last call of Torquemaster";


                        break;
                    case "TorqueProt.OverBoostMode":
                        description = "Which mode the overboostfunction is in 0 = No overboost 1 = Overboost 2 = Ramping 3 = Overboost not allowed 4 = Not overboosting 5 = Cooling";


                        break;
                    case "TorqueProt.ST_NoIgnitionRetard":
                        description = "Status flag of ignitionretardation: 0 = Ignition retardation allowed 1 = Ignition retardation not allowed";


                        break;
                    case "TorqueCal.ST_IgnOffsEnable":
                        description = "Torque Master Ignition Offset Status. 0 = Ignition Offset Disabled. 1 = Ignition Offset Enabled for all torque functions. 2 = Ignition Offs Enabled for all torque functions except ASR/TCS";


                        break;
                    case "TorqueCal.ST_Loop":
                        description = "Limit Wheel airmass control loop status variable. \"0\" - Limit will not be considered. \"1\" - Open loop. \"2\" - Close loop.";


                        break;
                    case "TorqueCal.X_CoolFactor":
                        description = "Factor for reducing cooling time when subtracting accumulated ignition reduction time, caused by torque limit function. 0 --> subtracted time = time / 1 1 --> subtracted time = time / 2 2 --> subtracted time = time / 4 3 --> subtracted time = time / 8 4 --> subtracted time = time / 16";


                        break;
                    case "TorqueCal.M_OffsFCOStart":
                        description = "Difference between actual engine torque and torque limit calculated by the Torque Master, where Fuel Cut Off will start to be requested. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_OffsFCOStop":
                        description = "Difference between actual engine torque and torque limit calculated by the Torque Master, where Fuel Cut Off will not be requested. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_HysIgnRedOff":
                        description = "Difference between actual engine torque and torque limit calculated by the Torque Master, where Ignition reduction will stop to be is used. It is also used as ign. red. start hysteresis when the TCM has a short torque reduction, because the M_HysIgnRedOn is bigger than this data. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_HysIgnRedOn":
                        description = "Difference between actual engine torque and torque limit calculated by the Torque Master, where Ignition reduction will start to be is used. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.t_DebFuelCut":
                        description = "Debouncing time used to wait for M_Engine overshoot to disappear before Fuel Cut Off is reqested when calculated engine torque is higher than torque limit + M_OffsFCutStart. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_MaxIgnReduc":
                        description = "Maximum time for ignition reduction caused by torque limit function during t_CoolDown time. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_ThrReaction":
                        description = "Reaction time for throttle moving a step corresponding a torque limitation. Used for deceiding if a air reduction should be made or if just a ignition reduction should be made. If In.t_ExtTorqLimDuration is at least twice t_ThrReaction, then air reduction will be made. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_ThrOverTime":
                        description = "If In.t_ExtTorqLimDuration + t_ThrOverTime has passed since started and air reduction is not active, air reduction will be made until ExtTorqLim is finished. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.M_LDA1Lim":
                        description = "Minimum engine torque limit, when the driver has released the accelerator pedal so much that the front wheels are slipping. Low limit. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_LDA2Lim":
                        description = "Minimum engine torque limit, when the driver has released the accelerator pedal so much that the front wheels are slipping. High limit. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_StallLimit":
                        description = "Maximum engine torque limit, when the driver is pushing both the brakepedal and the accelerator pedal at the same time.(Only cars with auto.gearbox). Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.fi_IgnMinTab":
                        description = "Minimum allowed absolute ignition timing when reducing torque, depending on engine temperature. Resolution is 0.1 degree.";


                        break;
                    case "TorqueCal.T_EngSP":
                        description = "Temperature support points for minimum allowed absolute ignition timing table. Resolution is 1 °C.";


                        break;
                    case "TorqueCal.m_FrictionAir":
                        description = "Air demand at nominal idle speed and warm engine, calibrated in testcell on the same engine as the torqueMap calibration is done. It is used for compensation when calculating and limiting torque. Resolution is 1 mg/c.";


                        break;
                    case "TorqueCal.M_ManGearLim":
                        description = "Maximum engine torque limit for each gear in the manual gearbox. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_CabGearLim":
                        description = "Maximum engine torque limit on manual Convertible cars for each gear. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.m_AirXSP":
                        description = "Air mass supportpoints for Ignition angle limit influenceing torque table, Ignition- angle influence on torque table and Nominal torque table. Resolution is 1 mg/combustion.";


                        break;
                    case "TorqueCal.m_PedYSP":
                        description = "Air mass supportpoints for (Calc) X_AccPedalMap. Resolution is 1 mg/combustion.";


                        break;
                    case "TorqueCal.n_EngYSP":
                        description = "Engine speed supportpoints for Ignition angle limit influenceing torque table, Ignition- angle influence on torque table, Nominal torque table, Max Engine Torque and Nominal Airmass table. Resolution is 1 rpm.";


                        break;
                    case "TorqueCal.M_EngXSP":
                        description = "Engine torque supportpoints for nominal airmass table. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.fi_IgnLimMap":
                        description = "Data-matrix for the ignition angle limit, where earlier spark will reduce the torque. Resolution is 0,1 degree.";


                        break;
                    case "TorqueCal.M_IgnInflTorqMap":
                        description = "Data-matrix for the ignition influence on torque. Resolution is 0,1 Nm/degree.";


                        break;
                    case "TorqueCal.M_NominalMap":
                        description = "Data-matrix for nominal Torque. Engine speed and airmass are used as support points. The value in the matrix will be the engine output torque when inlet airmass (- friction airmass) is used together with actual engine speed as pointers.";


                        break;
                    case "TorqueCal.X_AccPedalMap":
                        description = "Data-matrix for calculation of approx pedal positions for Out.X_AccPedal. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.m_AirTorqMap":
                        description = "Data-matrix for nominal airmass. Engine speed and torque are used as support points. The value in the matrix + friction airmass (idle airmass) will create the pointed torque at the pointed engine speed. Resolution is 1 mg/c.";


                        break;
                    case "TorqueCal.M_EngMaxTab":
                        description = "Data-table for maximum engine output torque for manual cars. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_EngMaxE85Tab":
                        description = "Data-table for maximum engine output torque for cars running E85. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_EngMaxAutTab":
                        description = "Data-table for maximum engine output torque for automatic cars. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_NoiseRedLim":
                        description = "Maximum engine torque limit, when the driver is pushing the accelerator pedal to a calibrated level after been driving at 50 km/h for a calibrated time (at second gear if manual car), to reduce noise. This value is used for cars with manualgearbox. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_AutNoiseRedLim":
                        description = "Same as TorqueCal.M_NoiseRedLim but for cars with automaticgearbox. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.X_NoiseRedAccP":
                        description = "Acc.Pedal level which will start torque reduction to avoid noise. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.t_NoiseRAt50km":
                        description = "The vehicle speed must be within the calibrated limits during this time, to start a torque reduction to avoid noise after the driver has pressed the acc.pedal to the calibrated level. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_NoiseRedConst":
                        description = "A torque reduction at the calibrated level will durate this long before the ramp starts, to reduce noise. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_NoiseRedRamp":
                        description = "The ramp is this long after a torque reduction to reduce noise. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.v_NoiseRedMax":
                        description = "The vehicle speed shall not exceed this level for a calibrated time, if a torque reduction to reduce noise should be done. Resolution is 0.1 km/h.";


                        break;
                    case "TorqueCal.v_NoiseRedMin":
                        description = "The vehicle speed shall not be below this level for a calibrated time, if a torque reduction to reduce noise should be done. Resolution is 0.1 km/h.";


                        break;
                    case "TorqueCal.n_EngSP":
                        description = "Engine speed supportpoints for reverse gear limitation table on automatic cars. Resolution is 1 rpm.";


                        break;
                    case "TorqueCal.M_ReverseTab":
                        description = "Max torque table for reverse gear limitation on automatic cars. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.n_EngMinSP":
                        description = "Engine speed supportpoints for min ignition angle. Resolution is 1 rpm.";


                        break;
                    case "TorqueCal.M_BrakeLimit":
                        description = "Maximum engine torque limit, when the driver is pressing the brake pedal. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.n_Eng5GearSP":
                        description = "Engine speed supportpoints for Max Engine Torque on fifth gear. Resolution is 1 rpm.";


                        break;
                    case "TorqueCal.M_5GearLimTab":
                        description = "Data-table for maximum engine output torque for manual cars on fifth gear. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.ms_ShUpDelay":
                        description = "Out.X_AccPedal will be frozen during this time after a shift up. This to prevent further shift up close to the first shift up. Only used in automatic cars when driving with cruise control and not overriding cruise with accelerator pedal. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.ms_ShDoDelay":
                        description = "Out.X_AccPedal will be frozen during this time after a shift down. This to prevent further shift down close to the first shift down. Only used in automatic cars when driving with cruise control and not overriding cruise with accelerator pedal. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.ST_XAccLimRes":
                        description = "Too high engine torque at gear shift during RESUME Enables the \"Limitation functionality\" in the Gear Shift Support function that: - freeze Out.X_AccPedal a specified time after gear shift and - slow down changes in Out.X_AccPedal,max Out.X_AccPedal delta also during a RESUME (Cruise.ST_ResumeMode == 1). The function is used for preventing unnecessary gear shift but may cause \"Hard\" gear shift. Only used in automatic cars when driving with cruise control and not overriding cruise with accelerator pedal. 0 = Limitation function NOT active during RESUME 1 = Freeze of Out.X_AccPedal after gear shift during RESUME 2 = Limit change of Out.X_AccPedal during RESUME 3 = 1 + 2";


                        break;
                    case "TorqueCal.X_Step":
                        description = "Max Out.X_AccPedal delta ( % / 10ms ). This to slow down changes in Out.X_AccPedal. Only used in automatic cars when driving with cruise control and not overriding cruise with accelerator pedal. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.X_MaxOffset":
                        description = "Max value for Gear shift support offset. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.X_OffsetStep":
                        description = "Gear shift support offset increment value / 10 ms. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.X_OffsetStep2":
                        description = "Gear shift support offset decrement value / 10 ms. Resolution is 0.1 %.";


                        break;
                    case "TorqueCal.nosample":
                        description = "No of samples that is used for average calc of TorqueProt.n_engfilt";


                        break;
                    case "TorqueCal.t_gearShAct":
                        description = "Time that filtering should be active. Resolution is 100 ms.";


                        break;
                    case "TorqueCal.M_OverBoostTab":
                        description = "Max engine torque at overboost. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_OverBoostOffset":
                        description = "Offset that is subtracted from max engine torque when to enable overboost. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.M_OverBoostRamp":
                        description = "Ramp decrease factor per second at overboost. Resolution is 1 Nm.";


                        break;
                    case "TorqueCal.m_OverBoostLevel":
                        description = "At what m_Request that overboost is allowed to be activated again. Resolution is 1 mg/c.";


                        break;
                    case "TorqueCal.t_OverBoost":
                        description = "Total time that the overboostfunction will be allowed to be activated. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.t_Cooling":
                        description = "At what m_Request that overboost is allowed to be activated again. Resolution is 1 ms.";


                        break;
                    case "TorqueCal.EnableOverBoost":
                        description = "Enables overboost";


                        break;
                    case "TorqueCal.ST_EnableInertia":
                        description = "Enables moment of inertia into the calculation of TorqueProt.M_Nominal (and thereby Out.M_Engine)";


                        break;
                    case "TorqueCal.J_InertiaMan":
                        description = "Moment of inertia for an engine with manual transmission";


                        break;
                    case "TorqueCal.J_InertiaAut":
                        description = "Moment of inertia for an engine with automatic transmission";


                        break;
                    case "TorqueCal.n_Eng1GearSP":
                        description = "Support points for calculating maximum torque on automatic transmission in the first gear";


                        break;
                    case "TorqueCal.M_1GearTab":
                        description = "Maximum torque on automatic transmission in the first gear";


                        break;
                    case "TorqueCal.T_NoIgnRet":
                        description = "No retardation of ignition above this exhaust temperature";


                        break;
                    case "TorqueCal.T_NoIgnHyst":
                        description = "Reenable ignition retardation below TorqueCal.T_NoIgnRet - TorqueCal.T_NoIgnHyst";


                        break;
                    case "TorqueCal.v_TorqueCalcSP":
                        description = "Support pointers for torque calculation by acceleration";


                        break;
                    case "TorqueCal.a_FreeRollingTab":
                        description = "Table for torque calculation by acceleration";


                        break;
                    case "TorqueCal.m_CarWeight":
                        description = "Car mass for torque calculation by acceleration";


                        break;
                    case "Boost.AreaComp":
                        description = "Compensation factor for pointer in area matrix. Interval is Every 100 msec.";


                        break;
                    case "Boost.AirMasterStatus":
                        description = "The boost master controles the status on airmas master with this data. 0 - Boost master not active. 1 - Boost master demands throttle open loop. 2 - Airmass master is free to use closed loop. Interval is Every 100ms.";


                        break;
                    case "Boost.APCError":
                        description = "Indicate if we have detect any APC fault. 0 = OK 1 = Error Interval is 100 msec.";


                        break;
                    case "Boost.AirLimPos":
                        description = "Positive maximum of the airmass for the I-part of the airmass controller Interval is Every ??.";


                        break;
                    case "Boost.AirLimNeg":
                        description = "Negative maximum of the airmass for the I-part of the airmass controller Interval is Every ??.";


                        break;
                    case "Boost.SetValue":
                        description = "Actual set value for boost regulator. SetValue = LoadRequest + MapOffsValue. Update : every 10 msec.";


                        break;
                    case "BoostProt.ST_AdaptAllowed":
                        description = "Indicate if new adaption is allowed, throttle must been closed between each adaption. Update : every 100 msec.";


                        break;
                    case "BoostProt.ST_IPartEnable":
                        description = "Indicate if the I part is enabled on the boost closed loop. Update : every 100 msec.";


                        break;
                    case "BoostProt.ST_PPartEnable":
                        description = "Indicate if the P part is enabled on the boost closed loop. Update : every 100 msec.";


                        break;
                    case "BoostProt.P_LoadLim":
                        description = "Actual Load limit to enable the P Part of boost regulator. If the load request from airmass master is above this value plus the hysteres is the P Part enabled. If the load request from airmass master is below this value is the P Part disabled. Update : every 100 msec.";


                        break;
                    case "BoostProt.I_LoadLim":
                        description = "Load limit tab. to enable the I Part of boost regulator. If the load request from airmass master is above this value plus the hysteres is the I Part enabled and the throttle closed loop is disabled. If the load request from airmass master is below this value is the I Part disabled and the throttle is alowed to run in closed loop.";


                        break;
                    case "BoostProt.LoadRequest":
                        description = "Actual airmass request from airmass master. Update : every 10 msec.";


                        break;
                    case "BoostProt.LoadDiff":
                        description = "Difference between set value load and actual load. Update : every 10 msec.";


                        break;
                    case "BoostProt.RegConValue":
                        description = "Calculated main constant depending on rpm and set load. Update : every 10 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.PFac":
                        description = "Calculate P part for regulator. load diff * P const P = 100. Update : every 10 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.IFac":
                        description = "Calculated I part for regulator. load diff * I const I = I + 1000. Update : every 10 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.DFac":
                        description = "Calculated D part for regulator. OBS! There might be problems with the OBDII diagnose when using this part. load derivata * D const D = 20. Update : every 10 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.PConst":
                        description = "P constant for P part calculation of regulator. f(load diff, rpm). Update : every 100 msec";


                        break;
                    case "BoostProt.IConst":
                        description = "I constant for I part calculation of regulator. f(load diff, rpm). Update : every 100 msec";


                        break;
                    case "BoostProt.DConst":
                        description = "D constant for D part calculation of regulator. f(load derivata, rpm). Update : every 100 msec";


                        break;
                    case "BoostProt.IBuff":
                        description = "Buffer used for I part calculation. Update : every 10 msec.";


                        break;
                    case "BoostProt.PWMCalc":
                        description = "Calculated PWM value. (Main constant + Adaption value + P + I + D). Update : every 10 msec";


                        break;
                    case "BoostProt.GoalPercent":
                        description = "Percent regulator constant including adaption divided with PWM should been. Update : every 100 msec. Resolution is 1 %.";


                        break;
                    case "BoostProt.ActPercent":
                        description = "Percent regulator constant including adaption divided with PWM actuality are. Update : every 100 msec. Resolution is 1 %.";


                        break;
                    case "BoostProt.P_DiffILimReq":
                        description = "Differance between requested load and I-part limit. BoostProt.LoadRequest - (BoostProt.I_LoadLim + hysteres). Update : Calculated every 100 msec when I part are activated.";


                        break;
                    case "BoostProt.ReqDerivata":
                        description = "M_Request derivata. Resolution is 1 mg/c. Interval is 20 ms.";


                        break;
                    case "BoostProt.ReqDerivata100ms":
                        description = "M_Request derivata used in \"to high\" adaption conditions. Resolution is 1 mg/c. Interval is 100 ms.";


                        break;
                    case "BoostProt.OldRequest":
                        description = "M_request, 20 msec. old, used for calculation off m_request derivata.";


                        break;
                    case "BoostProt.OffsetHighAlt":
                        description = "Offset value to PWM out depending on high altitude. Update : every 100 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.OffsetTemp":
                        description = "Offset value to PWM out depending on air temperature. Update : every 100 msec. Resolution is 0.1 %.";


                        break;
                    case "BoostProt.ST_PWM2Perc":
                        description = "Indicate if boost controler order 2 % PWM depending on to low vehicle speed or to low engine speed. 1 => 2 percent 0 => normal operation";


                        break;
                    case "BoostProt.Bypassmapvalue":
                        description = "If the m_Request derivate is negative, this variable is calculated to compare with m_Request when to open the bypass valve (m_Request < Bypassmapvalue) -> Open";


                        break;
                    case "BoostProt.AntiHowlvalue":
                        description = "Anti howl value used in matrix calculation";


                        break;
                    case "BoostProt.NoiseReduction":
                        description = "This value is added to BoostProt.PWMCalc and will be either 0% or 98%. This will make the boostcontroller valve to open completly at low speed. This will eliminate the noise.";


                        break;
                    case "BoostProt.NoiseRedAllowed":
                        description = "This flag indicates when noisereduction is allowed from the boostregulating point of view. When noisereduction is active we have full PWM on the APC and this can't be allowed by the boostregulator during certain circustances because there will be big \"overshoots\" in load then.";


                        break;
                    case "BoostAdap.Adaption":
                        description = "Adaption value for boost control. Interval is Every 100ms.";


                        break;
                    case "BoostCal.n_EngSP":
                        description = "Engine speed suportpoints for: BoostCal.LoadOffsMap, BoostCal.P_LimTab, BoostCal.I_LimTab, BoostCal.RegMap";


                        break;
                    case "BoostCal.P_LimTab":
                        description = "Load limit tab. to enable the P Part of boost regulator. If the load request from airmass master is above this value plus the hysteres is the P Part enabled. If the load request from airmass master is below this value is the P Part disabled. ";


                        break;
                    case "BoostCal.I_LimTab":
                        description = "Load limit tab. to enable the I Part of boost regulator. If the load request from airmass master is above this value plus the hysteres is the I Part enabled and the throttle closed loop is disabled. If the load request from airmass master is below this value is the I Part disabled and the throttle is alowed to run in closed loop. ";


                        break;
                    case "BoostCal.Hysteres":
                        description = "Hysteres value for the P and I part load limit. Resolution is 1 %.";


                        break;
                    case "BoostCal.SetLoadXSP":
                        description = "Load set value suportpoints for BoostCal.RegMap";


                        break;
                    case "BoostCal.RegMap":
                        description = "Main constant matrix. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.IFacMax":
                        description = "Max allowed value for I part of regulator. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.PIDXSP":
                        description = "Support points for P, I and D constants maps. Difference between set value and actual load. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.PIDYSP":
                        description = "Engine speed depended support points for P, I and D constants maps. Resolution is 1 rpm.";


                        break;
                    case "BoostCal.PMap":
                        description = "P constants map for calculation of P part (manuel gearbox). (Set value - p_AirInlet) * P constant P = 100";


                        break;
                    case "BoostCal.IMap":
                        description = "I constants map for calculation of I part (manuel gearbox). (Set value - p_AirInlet) * I constant I = I + 1000";


                        break;
                    case "BoostCal.DMap":
                        description = "D constants map for calculation of D part (manuel gearbox). (p_AirInlet_10_msec_old - p_AirInlet) * D constant D = 20";


                        break;
                    case "BoostCal.m_AirAdapSP":
                        description = "M_AirInlet support points for calculate percent regulator constant including adaption divided with PWM should been. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.PercAdapTab":
                        description = "Percent Table for calculate percent regulator constant including adaption divided with PWM should been. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.AdapAdjustN":
                        description = "Adjust value with normal adaption. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.AdapAdjustH":
                        description = "Adjust value with high adaption. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.AdapAdjustL":
                        description = "Adjust value with low adaption. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.AdapRpmL":
                        description = "Low rpm limit for normal adaption. Resolution is 1 rpm.";


                        break;
                    case "BoostCal.AdapRpmH":
                        description = "Low rpm limit for normal adaption. Resolution is 1 rpm.";


                        break;
                    case "BoostCal.AdaptAirDiff":
                        description = "Max allowed air diff. for normal adaption. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.AdaptTimeN":
                        description = "Time conditions must been fullfield for normal adaption. Resolution is 1 msec.";


                        break;
                    case "BoostCal.AdaptTimeH":
                        description = "Time conditions must been fullfield for high adaption. Resolution is 1 msec.";


                        break;
                    case "BoostCal.AdaptTimeL":
                        description = "Time conditions must been fullfield for low adaption. Resolution is 1 msec.";


                        break;
                    case "BoostCal.MaxOffAdap":
                        description = "Limit for how much m_AirInlet allowed to been over over actual set value for high adaption. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.VehicleSpeedLim":
                        description = "If vehicle speed are belove this limit and throttle angle are belove \"ThrottLim\" sets PWM equal with 2.0%. Resolution is 0.1 km/h.";


                        break;
                    case "BoostCal.m_RequestLim":
                        description = "If m_Request are belowe this limit and vehicle speed are belove \"VehicleSpeedLim\" sets PWM equal with 2.0%. Resolution is 1 mm2.";


                        break;
                    case "BoostCal.TimeOpenBPV":
                        description = "Max allowed time turbo bypass valve could been open. Resolution is 1 msec.";


                        break;
                    case "BoostCal.MaxNegDerHBA":
                        description = "If m_Request delta (BoostProt.ReqDerivata100ms) is below this limit, the High Boost Adaption is disabled. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.MaxPosDerBPV":
                        description = "If m_Request derivata are above this limit are turbo bypass valve opened. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.MaxNegDerBPV":
                        description = "If m_Request derivata are belove this limit are turbo bypass valve opened. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.HighThrLimBPV":
                        description = "Belove this m_Request limit is it possible to open turbo bypass valve. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.LowThrLimBPV":
                        description = "Belove this m_Request limit are turbo bypass valve open. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.HighAltTabSP":
                        description = "p_Air support points for high altitude compensation. Resolution is 0.1 kPa.";


                        break;
                    case "BoostCal.SetLoad2XSP":
                        description = "Support pointer for high alt compensation";


                        break;
                    case "BoostCal.HighAltMap":
                        description = "Matrix for high altitude compensation of regulator constant. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.PWMTempSP":
                        description = "T_AirInlet support points for air compensation. Resolution is 1 °C.";


                        break;
                    case "BoostCal.PWMTempTab":
                        description = "Table for air temperature compensation of regulator constant. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.ST_Enable":
                        description = "Max allowed value for I part for diff.pressure regulator. 1 = Normal function 0 = Boost control disabled, valve position could been changed with variable BoostProt.PWMCalc.";


                        break;
                    case "BoostCal.AdapBasRpmL":
                        description = "Low rpm limit for basic adaption. Resolution is 1 rpm.";


                        break;
                    case "BoostCal.AdapBasRpmH":
                        description = "Low rpm limit for basic adaption. Resolution is 1 rpm.";


                        break;
                    case "BoostCal.AdapTimeB1":
                        description = "Time conditions must been fullfield for positive basic adaption. Resolution is 1 msec.";


                        break;
                    case "BoostCal.AdapTimeB2":
                        description = "Time conditions must been fullfield for negative basic adaption. Resolution is 1 msec.";


                        break;
                    case "BoostCal.ReqOffset":
                        description = "If m_airinlet are above m_request - this offset are min load limit fullfield for negative basic adaption. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.AdapMaxDiffP":
                        description = "Max allowed diff. pressure over throttle for basic adaption. Resolution is 0.1 kPa.";


                        break;
                    case "BoostCal.AdappAirOff":
                        description = "Pressure after throttle must been above athmospere pressure + this offset for negative basic pressure. Resolution is 0.1 kPa.";


                        break;
                    case "BoostCal.AdapBasicP":
                        description = "Adjust value with positiv basic adaption. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.AdapBasicN":
                        description = "Adjust value with negative basic adaption. Resolution is 0.1 %.";


                        break;
                    case "BoostCal.p_DiffILimXSP":
                        description = "Support points for calculation of compensation factor for area matrix pointer. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.p_DiffILimYSP":
                        description = "Support points for calculation of compensation factor for area matrix pointer. Resolution is 1 mg/c.";


                        break;
                    case "BoostCal.p_DiffILimMap":
                        description = "Support points for calculation of compensation factor for area matrix pointer. Resolution is 0.001.";


                        break;
                    case "BoostCal.AntiHowlPresLim":
                        description = "Disable Anti Howl function when ambient pressure is below this value";


                        break;
                    case "BoostCal.AntiHowlPairSP":
                        description = "Ambient air pressure support points for anti howl function";


                        break;
                    case "BoostCal.AntiHowlPresTab":
                        description = "Pressure difference needed for opening of bypass valve without howling. When a negative derivate of m_Request triggers opening of the bypass valve, it is only opened if the inlet air pressure is below In.p_Air - BoostCal.AntiHowlPresTab which causes the valve to be opened with enough pressure to avoid howling. This comparision is made between m_Request and airmass from limphome airmass map pointed by the calculated pressure above and engine speed";


                        break;
                    case "BoostCal.FilterFactor":
                        description = "Filter when calculating D-part of Boostcontroller. The size of this should be of the same magnitude as the sampling time, which is 20ms";


                        break;
                    case "BoostCal.AreaCompFilter":
                        description = "Filer for throttle area compensation function.";


                        break;
                    case "BoostCal.n_AreaCompLow":
                        description = "At which engine speed the area compensation function shall start to ramp in";


                        break;
                    case "BoostCal.n_AreaCompHigh":
                        description = "At which engine speed the area compensation function will be fully ramped";


                        break;
                    case "BoostCal.v_NoiseReduction":
                        description = "Below this value, the noise reduction function will open the boost controller valve completely to eliminate noise";


                        break;
                    case "BoostCal.loadDiff_NoiseRedDeact":
                        description = "Below this value, the noise reduction function will be disabled and the boostcontroller active as normal. The loadDiff is negative if m_Airinlet is greater than m_request. ";


                        break;
                    case "BoostCal.t_WaitAfterShift":
                        description = "During shifting and t_WaitAfterShift ms after, do not allow high boost adaption. The conditions for shifting is that In.t_TCMTrqDuration != 0";


                        break;
                    case "BoostCal.RatioDeltaLim":
                        description = "Above this limit, a gearshift is in progress, so inhibit an adaption";


                        break;
                    case "BoostCal.EnableBoostAdap":
                        description = "Enable/Disable boost adaption";


                        break;
                    case "BstMetCal.BoostMeter":
                        description = "Table for calibration of boost meter. [0] = Value for max position on instrument, manual gearbox. [1] = Value for normal max. pressure, manual gearbox. [2] = Value for normal atmosphere pressure, manual gearbox. [3] = Value for max position on instrument, automatic gearbox. [4] = Value for normal max. pressure, automatic gearbox. [5] = Value for normal atmosphere pressure, automatic gearbox. Resolution is 1 mg/c.";


                        break;
                    case "CatDiagLevProt.actualFuelFac":
                        description = "Indicates the fuelfactor from the cat diagnose.";


                        break;
                    case "CatDiagLevProt.actualFirstTime":
                        description = "Indicates the time that the first fuel factor has been active.";


                        break;
                    case "CatDiagLevProt.actualSecondTime":
                        description = "Indicates the time that the second fuel factor has been active.";


                        break;
                    case "CatDiagLevProt.preConditionOK":
                        description = "Indicates that the precondition for the diag are fulfilled.";


                        break;
                    case "CatDiagLevProt.closedThrotTimer":
                        description = "How long has the pedal been released after the other preconditions are fulfilled.";


                        break;
                    case "CatDiagLevProt.nrOfLambdaSwitches":
                        description = "Indicates the nr of lambda switches done during meanvalue calc. of lambda integrator.";


                        break;
                    case "CatDiagLevProt.m_Av":
                        description = "The average load calculated during the second diag phase.";


                        break;
                    case "CatModProt.T_Catalyst":
                        description = "Unfiltered value indicating the catalytic temperature This value is LP filtered to better model the temp increase and decrease in the cat. The filtered signal is ECMStat.T_Catalyst.";


                        break;
                    case "CatModProt.T_LambdaOffset":
                        description = "Value from table, CatModCal.T_LambdaOffset";


                        break;
                    case "CatModProt.T_LambdaOffsetFilt":
                        description = "CatModProt.T_LambdaOffset that is LP filtered";


                        break;
                    case "CatModProt.T_CatalystFilt":
                        description = "Catalyst temperature after the first LP filter";


                        break;
                    case "CatModProt.n_LoadCnt":
                        description = "Number of combustions that comes from CatModCal.n_CombStart table";


                        break;
                    case "CatModProt.n_HighLoad":
                        description = "Number of combustions sampled when load is higher than a limit";


                        break;
                    case "CatModProt.m_AirInletFilt":
                        description = "Filtered MAF.m_AirInlet.";


                        break;
                    case "obdEvap.ST_CCVMayBeStuck:1":
                        description = "If In.p_FuelTank < pEvapTestCal->MinTankPressure then there is a possibillity that CCV can be stucked. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.ST_ValveLockedByDiagnose:1":
                        description = "Tells purgemaster that evap is using valves for diagnose. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.ST_NeedForSpeed:1":
                        description = "If a test is interruped or if test 2 is finished this flag is set. It will reset after Vehicle speed >0. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.ST_ColdStart:1":
                        description = "If temperature is regared as cold start this flag is set. If temperaturegoes out of limits then it's clered. Cold start definition :if ((Environ.engineStartTemp() > EvapDiagCal.T_LoLim) &&(Environ.engineStartTemp() < EvapDiagCal.T_HiLim) &&(Environ.inletAirStartTemp() > EvapDiagCal.T_LoLim) &&(Environ.inletAirStartTemp() < EvapDiagCal.T_HiLim) &&(Environ.inletAirStartTemp() < (Environ.engineStartTemp() + EvapDiagCal.T_Diff)) &&(Environ.inletAirStartTemp() > (Environ.engineStartTemp() - EvapDiagCal.T_Diff)) &&evapHasBeenOutOfLim == false). Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.ST_IsRunning:1":
                        description = "Shows if diagnose is running. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.Status":
                        description = "Evap diagnose status : 0 = Not running / running but not finished 1 = Ok report xxxx = Fault report. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.DiagState":
                        description = "Shows the evap diagnose all different states : 0 = ignition off 1 = diagnose interrupted 2 = precondition OK 3 = test phase 0 condition during test OK 4 = test phase 0 OK 5 = test phase 1 condition during test OK 6 = test phase 2 OK 7 = test phase 2 condition during test OK 8 = diagnose done, either ok or fault. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.ActiveTest":
                        description = "1 - 0,5 mm test with no vehicle speed 2 - 1mm -> test with vehicle speed 3 - big leak, filler cap. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.LeakageFactor":
                        description = "Shows what kind of leakage 0 = ignition off 10 = No leak, test 1 11 = 0,5 leak test 1 12 = 1,0 leak test 1 13 = Filtered test, too big diff 20 = No leak, test 2 22 = 1,0 leak test 2 23 = Filtered test, too big diff 1011 = big leak in ramp 1 level 1 test 1 1012 = big leak in ramp 1 level 2 test 1 1013 = big leak in ramp 1 level 3 test 1 1021 = big leak in ramp 1 level 1 test 2 1022 = big leak in ramp 1 level 2 test 2 1023 = big leak in ramp 1 level 3 test 2 1031 = big leak in ramp 1 level 1 test 3 1032 = big leak in ramp 1 level 2 test 3 1033 = big leak in ramp 1 level 3 test 3. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.LeakageResult":
                        description = "This variable contains the result from the matrix table. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.BreakPreCondition":
                        description = "1 = obdEvap.ST_NeedForSpeed 2 = In.v_Vehicle < pEvapTestCal->v_loLim || In.v_Vehicle > pEvapTestCal->v_hiLim 3 = obdFuelLevel.V_FuelTankFilt <= EvapDiagCal.V_FuelMin 4 = obdFuelLevel.V_FuelTankFilt > EvapDiagCal.V_FuelMax 5 = Fault.p_FuelTank 6 = obdEvap.p_FuelTankFilt > EvapDiagCal.MaxTankPressure 8 = obdEvap.n_BrakeChanges > pEvapTestCal->nrOfBrakeChangeLim 9 = Purge.Status != 0 10 = obdEvap.ST_ColdStart == false && purgeFirstStartRampOK == false) 11 = (In.U_Batt <= 100) || (In.U_Batt >= 160) 12 = ECMStat.p_Diff >= -200 13 = Purge.AdaptionEvap < pEvapTestCal->PurgeloLim || Purge.AdaptionEvap > pEvapTestCal->PurgehiLim 14 = MAF.m_AirInlet < EvapDiagCal.m_loLim) || MAF.m_AirInlet > EvapDiagCal.m_hiLim) 15 = obdEvap.ST_WaitAfterBreak 17 = FCut.ST_FuelCut = true 18 = obdEvap.p_AirAmbientDelta > pEvapTestCal->pAirAmbientDelta 19 = If obdEvap.p_AirAmbientDelta has been out of limit for active test. This willstop active test for rest of the DCY 20 = vVehicle.hasReportedFault() == true 21 = Out_CMD_Purge.hasReportedFault() == true 22 = Out_PW_Purge.hasReportedFault() == true 23 = BrakeLight.hasReportedFault() == true 24 = tEngine.hasReportedFault() == true 25 = tAirInlet.hasReportedFault() == true 26 = ECMStat.ST_TCSCANBased == true && In_TCS.hasReportedFault == true 27 = obdEvap.ST_FillerCapTestDone == true && obdEvap.ActiveTest == TEST3_FILLERCAP 28 = The start was not a powerup, obdpTankAdap.ST_FirstTimeAfterPowerUp 30 = environment temp to low. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.BreakCondDurTest":
                        description = "2 = In.v_Vehicle < (obdEvap.v_VehicleSpeedPrecondition - pEvapTestCal->v_Diff) In.v_Vehicle > (obdEvap.v_VehicleSpeedPrecondition + pEvapTestCal->v_Diff) 3 = obdFuelLevel.V_FuelTankFilt <= EvapDiagCal.V_FuelMin 4 = obdFuelLevel.V_FuelTankFilt >= EvapDiagCal.V_FuelMax 5 = Fault.p_FuelTank 6 = obdEvap.p_FuelTankFilt >= EvapDiagCal.MaxTankPressure 8 = obdEvap.n_BrakeChanges >= pEvapTestCal->nrOfBrakeChangeLim 11 = (In.U_Batt <= 100) || (In.U_Batt >= 160) 12 = ECMStat.p_Diff >= -200 and ramp 0/1 13 = Purge.HCCont > (obdEvap.HCContPrecondition + pEvapTestCal->HCContDiff) 14 = obdEvap.m_Delta > EvapDiagCal.m_Delta 16 = !FuelLevel.isFuelLevelConfirmed() 17 = FCut.ST_FuelCut = true 18 = obdEvap.p_AirAmbientDelta > pEvapTestCal->pAirAmbientDelta 19 = If obdEvap.p_AirAmbientDelta has been out of limit for active test. This willstop active test for rest of the DCY 20 = obdEvap.p_FuelTankFilt < pEvapTestCal->MinTankPressure 101 = Pressure out of lim 102 = Fuellevelripple 103 = obdEvap.Ramp0 > pEvapTestCal->ramp0HiLim 105 = Fuellevelripple during ramp2 evaluation small pos direction 106 = Fuellevelripple during ramp2 evaluation small neg direction 108 = If Lambda.LambdaInt diff of obdEvap.LambdaPrecondition 150 -> 200 = Big leak errors detected, needed 2 for error report when ignition off 254 = OBDAdapEvap.Evap2BigResDiff > 0 255 = obdEvap.n_TooMuchVapour >= pEvapTestCal->n_TooMuchVapourLim";


                        break;
                    case "obdEvap.Ramp0":
                        description = "Shows the evaporation in ramp0. The CCV valve and purge valve is closed for a calib time. The derivate becomes the ramp 0 value in pa/s. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.t_Ramp1_Level1":
                        description = "Time for ramp1 to complete level1. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.t_Ramp1_Level2":
                        description = "Time for ramp1 to complete level2. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.t_Ramp1_Level3":
                        description = "Time for ramp1 to complete level3. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.n_BrakeChanges":
                        description = "Saves nr of times that brake signal has been changed. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.n_TooMuchVapour":
                        description = "If obdEvap.Ramp0 > pEvapTestCal->ramp0HiLim this variable will be increased. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_FuelTankFilt":
                        description = "Tank pressure signal, low pass filtrated. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.n_BigLeakErrorCnt":
                        description = "Number of tests that discovered big leak. If > 2 then report fault (BIG_LEAK) at ignition off. Will be cleard when a OK report. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.v_VehicleSpeedPrecondition":
                        description = "When precondition is fulfilled, a speed limit is saved used for condition during test. Resolution is 0.1. Interval is background.";


                        break;
                    case "obdEvap.HCContPrecondition":
                        description = "When precondition is fulfilled, a Purge.HCCont limit is saved used for condition during test, compared with hi/lo and diff limit. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.PurgePrecondition":
                        description = "When precondition is fulfilled, a Purge.AdaptionEvap limit. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.LambdaPrecondition":
                        description = "When precondition is fulfilled, a mean value of lambda int limit is saved used for ramp1, . Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.TotTabRamp2":
                        description = "Average calculation of total ramp2. Including each evaluation in ramp2.";


                        break;
                    case "obdEvap.DiffR2Result":
                        description = "Diff between each evaluation in Ramp2EvalResult buffer.";


                        break;
                    case "obdEvap.p_AirAmbientDelta":
                        description = "Delta pAirAmbient max and min from obdEvappAirAmbientStack is updated every 3 min.";


                        break;
                    case "obdEvap.p_AirAmbStack":
                        description = "Is updated every 3 min with In.p_AirAmbient.";


                        break;
                    case "obdEvap.p_PreviousPressure":
                        description = "Last read pressure in fuellevel ripple";


                        break;
                    case "obdEvap.m_DeltaMax":
                        description = "Maximum load diff from MAF Quick change. Is used for development @@@ UNIT:mg/c";


                        break;
                    case "obdEvap.LambdaMaxNegDiff":
                        description = "The lowest mean value of lambda int is saved in this variable. Is used for development @@@. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.HCContDiff":
                        description = "The biggest diff between obdEvap.HCContPrecondition and Purge.HCContduring test. Is used for development @@@. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdEvap.v_DiffPosMax":
                        description = "The biggest positive delta of vehicle speed from obdEvap.v_VehicleSpeedPrecondition Is used for development @@@. Resolution is 0.1. Interval is background.";


                        break;
                    case "obdEvap.v_DiffNegMax":
                        description = "The biggest negative diff of vehicle speed from obdEvap.v_VehicleSpeedPrecondition Is used for development @@@. Resolution is 0.1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxPosRamp0":
                        description = "Max positve pressure reading during ramp0 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxNegRamp0":
                        description = "Max negative pressure reading during ramp0 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxPosRamp1":
                        description = "Max positve pressure reading during ramp1 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxNegRamp1":
                        description = "Max negative pressure reading during ramp1 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxPosRamp2":
                        description = "Max positve pressure reading during ramp2 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_MaxNegRamp2":
                        description = "Max negative pressure reading during ramp2 Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdEvap.p_SwitchPoint":
                        description = "The lowest pressure when ramp2 starts Is used for development @@@. Resolution is 1. Interval is background.";


                        break;
                    case "obdCCV.ST_CMD_CCV:1":
                        description = "Order activation of CCV (Close Canister Valve). Resolution is 1. Interval is background.";


                        break;
                    case "obdCCV.ST_DiagDone:1":
                        description = "CCV diagnose done (Close Canister Valve). Resolution is 1. Interval is background.";


                        break;
                    case "obdCCV.ST_ActiveDiag:1":
                        description = "CCV diagnose is running (Close Canister Valve). Resolution is 1. Interval is background.";


                        break;
                    case "obdCCV.n_CleanCounter":
                        description = "CCV (Close Canister Valve) cleaning function counter. Toggles valve for approx. 100 ms four times on/off (8). Resolution is 1. Interval is background.";


                        break;
                    case "obdPurge.ST_DiagDone:1":
                        description = "Purge diagnose is done. Resolution is 1. Interval is background.";


                        break;
                    case "obdPurge.ST_NeedForSpeed:1":
                        description = "Run Purgediagnose only one standing still sequence, when require vehicle speed > 0. Resolution is 1. Interval is background.";


                        break;
                    case "obdPurge.Ramp0":
                        description = "Shows the evaporation in ramp0. The CCV valve and purge valve is closed for a calib time. The derivate becomes the ramp 0 value in pa/s. Resolution is 0.01. Interval is background.";


                        break;
                    case "obdPurge.ST_ActiveDiag":
                        description = "Purge diagnose rationality state 0 = Not active 1 = Active 2 = Fault determined, but waiting to report. Resolution is 1. Interval is background.";


                        break;
                    case "obdPurge.BreakPreCondition":
                        description = "1 = In.v_Vehicle > 0 2 = obdPurge.ST_NeedForSpeed 5 = obdPurge.ST_DiagDone 6 = obdCCV.DiagActive 7 = evapEnvironTempToLow 8 = Environ.inletAirStartTemp() < EvapDiagCal.T_LoLim 9 = Environ.inletAirStartTemp() > EvapDiagCal.T_HiLim 10 = Environ.engineStartTemp() < EvapDiagCal.T_LoLim 11 = Environ.engineStartTemp() > EvapDiagCal.T_HiLim 12 = obdEvap.n_BrakeChanges > pEvapTestCal->nrOfBrakeChangeLim 13 = (In.U_Batt <= 100) || (In.U_Batt >= 160) 14 = ECMStat.p_Diff > -200 15 = Purge.Status != 0 16 = Out_CMD_Purge.hasReportedFault 18 = obdEvap.p_AirAmbientDelta > pEvapTestCal->pAirAmbientDelta 19 = obdpTankAdap.ST_FirstTimeAfterPowerUp == false. Resolution is 1. Interval is background.";


                        break;
                    case "obdPurge.BreakCondDurTest":
                        description = "3 = obdFuelLevel.V_FuelTankFilt < EvapDiagCal.V_FuelMin 4 = obdFuelLevel.V_FuelTankFilt > EvapDiagCal.V_FuelMax. Resolution is 1. Interval is background.";


                        break;
                    case "obdSAI.DiagState":
                        description = "Shows the actual state in state mashine for main and intrusive test1 = precondition for main not fulfilled2 = precondition for main fulfilled3 = Main test is running4 = Main test has reported ok, no more tries5 = Main test has reported fault, diagnose done11 = precondition for Intrusive test not fulfilled12 = precondition for Intrusive test fulfilled13 = condition during Intrusive test not fulfilled, wait for next try14 = condition during Intrusive test fulfilled15 = Intrusive test is running21 = Waiting for next try22 = Next try is about to take place30 = diagnose done, no more tries40 = Intrusive test has reported ok, diagnose done41 = Intrusive test has reported fault, diagnose done50 = precondition for workshop not fulfilled51 = precondition for workshop fulfilled52 = workshop test running53 = workshop test completed";


                        break;
                    case "obdSAI.ST_IntBreakPreCond":
                        description = "1 = MAF.m_AirInletIgn >= SAIDiagCal.m_AirHigh2 = MAF.m_AirInletIgn <= SAIDiagCal.m_AirLow3= In.n_Engine >= SAIDiagCal.n_EngHigh4 = In.n_Engine <= SAIDiagCal.n_EngLow5 = In.v_Vehicle < SAIDiagCal.v_Vehicle or SAIDiagCal.v_MainHasFailed6 = In.T_Engine <= SAIDiagCal.T_Eng7 = AdpFuel.ST_PurgeAllow != 18 = Lambda.LambdaInt >= SAIDiagCal.LambdaHigh9 = Lambda.LambdaInt <= SAIDiagCal.LambdaLow10 = N/A11 = SAI.ST_SAIRequest == true12 = N/A13 = obdSAI.n_IntAborted >= SAIDiagCal.n_IntAborted14 = obdEvapIsRunning == true or if evap has been active for the last 30s.15 = preConditionTimer.hasElapsed(SAIDiagCal.t_PreCondOK) == false) 16 = N/A17 = obdSAI.ST_IntrTestComplete == true";


                        break;
                    case "obdSAI.ST_BreakCondDurTest":
                        description = "1 = Lambda.Status != 02 = AdpFuel.ST_PurgeAllow != 13 = MAF.m_AirInletIgn > obdSAI.m_PreCondition + SAIDiagCal.m_PosDiff4 = MAF.m_AirInletIgn < obdSAI.m_PreCondition - SAIDiagCal.m_NegDiff5 = In.n_Engine > obdSAI.n_PreCondition + SAIDiagCal.n_PosDiff6 = In.n_Engine < obdSAI.n_PreCondition - SAIDiagCal.n_NegDiff";


                        break;
                    case "obdSAI.ST_MainBreakPreCond":
                        description = "1 = In.n_Engine < SAIDiagCal.n_EngLowMain2 = In.n_Engine > SAIDiagCal.n_EngHighMain3 = MAF.m_AirInletFuel < SAIDiagCal.m_AirLowMain4 = MAF.m_AirInletFuel > SAIDiagCal.m_AirHighMain5 = Fault.U_O2SensFront != 06 = Fault.U_O2SensRear != 07 = SAI.ST_ReqLeanClamp == false8 = N/A9 = ECMStat.ST_PedalReleased == false && SAIDiagCal.CheckPedal == true17 = obdSAI.ST_MainTestComplete == true";


                        break;
                    case "obdSAI.ST_WSBreakPreCond":
                        description = "1 = MAF.m_AirInletIgn >= SAIDiagCal.m_WSHAirHigh2 = MAF.m_AirInletIgn <= SAIDiagCal.m_WSHAirLow3= In.n_Engine >= SAIDiagCal.n_WSHEngHigh4 = In.n_Engine <= SAIDiagCal.n_WSHEngLow5 = ECMStat.ST_PedalReleased == false6 = In.T_Engine <= SAIDiagCal.T_WSHEng7 = N/A8 = Lambda.LambdaInt >= SAIDiagCal.WSHLambdaHigh9 = Lambda.LambdaInt <= SAIDiagCal.WSHLambdaLow10 = Lambda.Status != 011 = SAI.ST_SAIRequest == true12 = N/A13 = Purge.Valve == 014 = obdEvapIsRunning == true15 = preConditionTimer.hasElapsed(SAIDiagCal.t_WSPreCondOK) == false) ";


                        break;
                    case "obdSAI.n_IntAborted":
                        description = "Number of aborted intrusive tests in condition during test. This will not be resetedbefore power down.";


                        break;
                    case "obdSAI.ST_MainTestComplete":
                        description = "Is set to true when Main test has reported ok or it's aborted. It's not cleared until power down. Is used to stop further main tests until power up.";


                        break;
                    case "obdSAI.ST_IntrTestComplete":
                        description = "Is set to true when intrusive test has reported ok or it's aborted. It's not cleared until power down. Is used to stop further intrusive tests until power up.";


                        break;
                    case "obdSAI.Status":
                        description = "SAI diagnose status : 0 = Not running / running but not finished 1 = Ok report xxxx = Fault report. Resolution is 1. Interval is background.";


                        break;
                    case "obdSAI.m_AirAverage":
                        description = "Avereage load during intrusive/workshop test";


                        break;
                    case "obdSAI.TabValue":
                        description = "Result from table that contains limits of lambda for intrsuive test.Used for deciding if test was ok/faulty";


                        break;
                    case "obdSAI.LambdaDiff":
                        description = "The max diff of lambda integrator during intrusive/workshop test";


                        break;
                    case "obdSAI.t_IntTest":
                        description = "Max time for intrusive test.";


                        break;
                    case "obdSAI.n_RPMDiff":
                        description = "The max diff of engine speed. It can be either +/-. When enter intrsuive testa engine speed refereance is saved and if engine speed decreases, the result will be negative else vica verse.";


                        break;
                    case "obdSAI.m_LoadDiff":
                        description = "The max diff of load. It can be either +/-. When enter intrsuive testa load refereance is saved and if load decreases, the result will be negative else vica verse.";


                        break;
                    case "obdSAI.m_PreCondition":
                        description = "Load when precondition was fulfilled.Used in condition during test.";


                        break;
                    case "obdSAI.n_PreCondition":
                        description = "Engine speed when precondition was fulfilled.Used in condition during test.";


                        break;
                    case "obdSAI.Lambdastart":
                        description = "When enter intrusive/workshop test, a lambda start value is saved. Is used formax lambda evaluation.";


                        break;
                    case "obdSAI.Lambdamax":
                        description = "The maximum Lambda value during intrusive/workshop test.";


                        break;
                    case "obdSAI.WSDiffNoFunc":
                        description = "Threshold read from table to decide if the SAI workshop test.";


                        break;
                    case "obdSAI.WSDiffRedFunc":
                        description = "Threshold read from table to decide if the SAI workshop test.";


                        break;
                    case "obdSAI.n_AreaCombCnt":
                        description = "Combustion counter used for area calculation. If this counter + a calib start combustion counter is > ECMStat.ms_Counter then start to calc intergrator area.";


                        break;
                    case "obdSAI.n_AreaLastCombCnt":
                        description = "Combustion counter used for area calculation. Delta f combustion from one sample to another.";


                        break;
                    case "obdSAI.ST_AreaCalcDone":
                        description = "If area calculation is completed that is called from Lambdacontroller. This indicated fordiagnose when to evaluate result. Due to it must communicate between C and C++;";


                        break;
                    case "Missf.lastXPos":
                        description = "xpos remembered from last detected misfire to be used in misfire counter maps. Interval is Per combust.";


                        break;
                    case "Missf.lastYPos":
                        description = "ypos remembered from last detected misfire to be used in misfire counter maps. Interval is Per combust.";


                        break;
                    case "Missf.outOfLimDelay":
                        description = "Indicates which the nr of combsutions after start before misfire diag is started. This delay is caused by environmental conditions. (Low ambient pressure and low start engine temperature)";


                        break;
                    case "Missf.whichFilterActive":
                        description = "Indicates which filter is active. If several filters are active at the same time the first activated filter is shown. Detect value = 1 PAirInletDiff = 2 Transient = 3 PurgeDiag = 4 Low load = 5 FuelCut = 6 Starttemp = 7 Hi altitude = 8 Loadlim after FCut = 9 AC on = 10 Pedal trig on idle = 11 Inside start mode = 12 RPMDiff active area = 13";


                        break;
                    case "Missf.nrofStartMisf":
                        description = "Indicates the nr of misf during the first 1000revs from eng. start and 850 rpm.";


                        break;
                    case "Missf.ST_FTPActive":
                        description = "Indicates if the load and rpm is within cal limits. Interval is Background.";


                        break;
                    case "Missf.nrCVSErrorBlocks":
                        description = "Counts the nr of blocks of combustion where the misfire rate is over limit. After 3 blocks error is reported. Valid for CVS misf diag. Interval is every block.";


                        break;
                    case "Missf.nrTempErrorBlocks":
                        description = "Counts the nr of blocks of combustion where the misfire rate is over limit. After 3 blocks error is reported. Valid for Temp misf diag. Interval is every block.";


                        break;
                    case "Missf.startDelay":
                        description = "The delay in combustions after start, before the detect signal is evaluated and the transient filter is activated. Interval is Background (100ms).";


                        break;
                    case "Missf.startDelayDone":
                        description = "The delay in combustions after start, before the detect signal is evaluated and the transient filter is activated, is finished. Interval is Background (100ms).";


                        break;
                    case "Missf.misfStarted":
                        description = "This flag indicates when misfire detection starts. The criterias for this is rpm above 650. Interval is Background (100ms).";


                        break;
                    case "Missf.DetectionActive":
                        description = "Misfire detection active Interval is Background (100ms).";


                        break;
                    case "Missf.Det1HighCount":
                        description = "Incremented for every combustion there detect signal is above SyncCal.t_DetectLimit. Interval is every combustion.";


                        break;
                    case "Missf.Det2HighCount":
                        description = "Incremented for every combustion there detect signal is above SyncCal.t_DetectLimit. Interval is every combustion.";


                        break;
                    case "Missf.nrOfFilteredMisfire":
                        description = "Number of misfire that have been filtered (except rpmdiff and detectlevellowlim) Interval is At every missfire detection.";


                        break;
                    case "Missf.M_Limit":
                        description = "Torque limitation ordered by the misfire diagnose. Resolution is 1 Nm.";


                        break;
                    case "Missf.nrOfRPMDiffFilteredMisf":
                        description = "Counts the nr of times the rpm diff filter has filtered a misfire indication.";


                        break;
                    case "Missf.nrOfCountedMisfire":
                        description = "Counts the nr of misfire that has not been filtered or rpm diff filtered.";


                        break;
                    case "Missf.ST_Det1HighCount":
                        description = "Indicates to diagnos that for SyncCal.t_DetectLimit nr of combustions has the detect signal 1 been constant high. Resolution is 1.";


                        break;
                    case "Missf.ST_Det2HighCount":
                        description = "Indicates to diagnos that for SyncCal.t_DetectLimit nr of combustions has the detect signal 2 been constant high. Resolution is 1.";


                        break;
                    case "MissfProt.n_Comb1":
                        description = "Temporary variable used in the detectsiganl diag block counting.";


                        break;
                    case "MissfProt.n_Comb2":
                        description = "Temporary variable used in the detectsiganl diag block counting.";


                        break;
                    case "MissfProt.t_FilterActive":
                        description = "In thisd array, every misfire filter indicates its start time when it is activated.";


                        break;
                    case "MissfProt.EmissionAdditive":
                        description = "Weight value used to increase misfire emission tot counter. Interval is Background.";


                        break;
                    case "MissfProt.OverheatAdditive":
                        description = "Weight value used to increase misfire overheat tot counter. Interval is Background.";


                        break;
                    case "MissfProt.XPos":
                        description = "xpos used in misfire counter maps. Continously updated. Interval is Background.";


                        break;
                    case "MissfProt.YPos":
                        description = "ypos used in misfire counter maps.Continously updated. Interval is Background.";


                        break;
                    case "MissfProt.lastCyl":
                        description = "Cyl nr remembered from last detected misfire to be used in misfire counter maps. Interval is Per combust.";


                        break;
                    case "MissfProt.DetectLevelCyl":
                        description = "Actual Detectlevel stored for each cylinder. Only used for development. Cyl AdressOffset 1 0 2 2 3 4 4 6 5 8 6 10 Interval is Every second revolution.";


                        break;
                    case "MissfProt.DetectAvLevelCyl":
                        description = "Actual average Detectlevel stored for each cylinder. Only used for development. Cyl AdressOffset 1 0 2 2 3 4 4 6 5 8 6 10 Interval is Every second revolution.";


                        break;
                    case "MissfAdap.MissfCntMap":
                        description = "This map includes number of missfire detections on specified load points. Interval is At every missfire detection.";


                        break;
                    case "MissfAdap.MissfCntCyl":
                        description = "Number of missfire detections on every specific cylinder. Interval is At every missfire detection.";


                        break;
                    case "MissfAdap.MissfTotCntCat":
                        description = "Number of Total Cat Overheat missfire detections on all cylinders. Interval is At every missfire detection.";


                        break;
                    case "MissfAdap.MissfTotCntEmis":
                        description = "Number of Total Emission Degradation missfire detections on all cylinders. Interval is At every missfire detection.";


                        break;
                    case "MissfAdap.AvDetect1Level":
                        description = "Average detectlevel on igndetect1 during 256 unfiltered combustions on the first detectsignal.";


                        break;
                    case "MissfAdap.AvDetect2Level":
                        description = "Average detectlevel on igndetect1 during 256 unfiltered combustions on the second detectsignal.";


                        break;
                    case "MissfAdap.T_EngOff":
                        description = "Saves the In.T_Engine when engine is stopping. Is used for hot fuel start error limit.";


                        break;
                    case "MissfCal.n_CombAvDetect":
                        description = "Calculate average value of detectlevel during n_CombAvDetect combustiions. If zero function is not active.";


                        break;
                    case "MissfCal.DetectLoadLevel":
                        description = "Load above this limit will activate the misfire detection.";


                        break;
                    case "MissfCal.CatOverheatFactor":
                        description = "Weight factors for increasing CatOverheatCnt. The map position depend on enginespeed and inlet manifold pressure.";


                        break;
                    case "MissfCal.CVSErrorLim":
                        description = "Limit for setting CVS misfire fault. Example: 3% misfire = 60 misfire in this limit.";


                        break;
                    case "MissfCal.m_AirXSP":
                        description = "Load support points for the misfire count map.";


                        break;
                    case "MissfCal.n_EngYSP":
                        description = "Engine speed support points for the misfire count map.";


                        break;
                    case "MissfCal.T_EngSP":
                        description = "Engine start temp support points in the startDelay table.";


                        break;
                    case "MissfCal.startDelayTAB":
                        description = "Contains the delay in combustions for activating the detect table and the transient and rpm filters.";


                        break;
                    case "MissfCal.p_AirAmbOutOfLimSP":
                        description = "Ambient pressure support point table for delay misfire when out of environmental conditions.";


                        break;
                    case "MissfCal.T_EngOutOfLimSP":
                        description = "Engine start temp support point table for delay misfire when out of environmental conditions.";


                        break;
                    case "MissfCal.outOfLimDelayMAT":
                        description = "Contains the delay in combustions for activating the misfire detection.";


                        break;
                    case "MissfCal.n_EngRPMDiffYSP":
                        description = "RPM support points for the misfire rpm diff filter.";


                        break;
                    case "MissfCal.LoadRPMDiffXSP":
                        description = "Load support points for the misfire rpm diff filter.";


                        break;
                    case "MissfCal.RPMDiffLimMAP":
                        description = "Map for rpm diff filter lim";


                        break;
                    case "MissfCal.RPMLimRPMDiff":
                        description = "The RPM must not exceed this value . If so the RPMDiff evaluation is ignored.";


                        break;
                    case "MissfCal.LoadLimRPMDiff":
                        description = "The load must not exceed this value . If so the RPMDiff evaluation is ignored.";


                        break;
                    case "MissfCal.LowFuelVolFuelLim":
                        description = "Fuel Level limit for reporting lowfuel together with the Misfire errorcode.";


                        break;
                    case "MissfCal.ACFilterON":
                        description = "Switch on/off misfire AC filter";


                        break;
                    case "MissfCal.PurgeDiagFilterON":
                        description = "Switch on/off misfire filter dependant on purge being activated by diagnose.";


                        break;
                    case "MissfCal.TransientFilterON":
                        description = "Switch on/off misfire transient filter";


                        break;
                    case "MissfCal.pAirInletDiffFilterON":
                        description = "Switch on/off misfire pairinletdiff filter";


                        break;
                    case "MissfCal.nrOfACFilterCombust":
                        description = "Nr of combustion to filter after AC switch on/off";


                        break;
                    case "MissfCal.nrOfPurgeDiagFilterCombust":
                        description = "Nr of combustion to filter after purge being controlled by diagnose.";


                        break;
                    case "MissfCal.nrOfTransientFilterCombust":
                        description = "Nr of combustion to filter after transient.";


                        break;
                    case "MissfCal.nrOfFuelCutFilterCombust":
                        description = "Nr of combustion to filter after fuelcut.";


                        break;
                    case "MissfCal.EngTempSP":
                        description = "Nr of combustion to filter after transient.";


                        break;
                    case "MissfCal.transientSizeLim":
                        description = "Larger transient then this value will trigger transient filetr";


                        break;
                    case "MissfCal.pAirInletDiffSizeLim":
                        description = "Larger pAirInletDiff then this value will trigger pAirInletDiff filter";


                        break;
                    case "MissfCal.LoadAfterFCutLim":
                        description = "If this load limit is exceeded after the fuel is activated again after a fuelcut, the fuelcut filter is set to 10 combustion. This is to always be sure to filter the misfires that often occur after fuelcut.";


                        break;
                    case "MissfCal.M_nrOfOKTempBlockLim":
                        description = "Nr of blocks without misfire in the misfiretemp diagnose, before the FaultIn.MisfireTemp flag is cleared and the torque system action is inhibited.";


                        break;
                    case "MissfCal.L_nrOfOKTempBlockLim":
                        description = "Nr of blocks without misfire in the misfiretemp diagnose, before the FaultIn.MisfireTemp flag is cleared and the lambda regulation system action is inhibited.";


                        break;
                    case "MissfCal.nrOfMisfLambda":
                        description = "Nr of misfires in a bock before the flag FaultIn.MisfireLAmbda is set and the lambda regulation goes into open loop.";


                        break;
                    case "MissfCal.n_EngineSP":
                        description = "Support points for engine speed. Resolution is 1 rpm.";


                        break;
                    case "MissfCal.M_LimTab":
                        description = "Torque limitation when misfire diagnose has detected a fault . Resolution is 1 Nm.";


                        break;
                    case "MissfCal.TorqueLowLim":
                        description = "If Out.M_Engine is below this lim, the misfire indications are filtered. Resolution is 1 Nm.";


                        break;
                    case "MissfCal.n_CombAftSync":
                        description = "Number of combustions after sync the misfire filter due to transient and pressure is disabled if not acc pedal is pressed. Resolution is 1 combustion. Interval is Every combustion.";


                        break;
                    case "MissfCal.m_AirLimLambdaOff":
                        description = "Table that contains load limits for the lambda cloop decuopling when misfire occur. Resolution is 1 rpm.";


                        break;
                    case "MissfCal.m_AirHiLimFTP":
                        description = "Hi load lim for indicating the FTP area. Resolution is 1.";


                        break;
                    case "MissfCal.n_EngHiLimFTP":
                        description = "Hi rpm lim for indicating the FTP area. Resolution is 1.";


                        break;
                    case "MissfCal.ST_PedalTriggFiltActive":
                        description = "Activates the pedal released trigg on the transient filters. Resolution is 1.";


                        break;
                    case "MissfCal.t_DelayMisfStart":
                        description = "Delays the Missfire start from nominell engine speed - 150. Resolution is 1.";


                        break;
                    case "MissfCal.T_EngXSP":
                        description = "Engine temp support points for detect load level map";


                        break;
                    case "MissfCal.CVSErrorLimStart":
                        description = "Limit for setting CVS misfire fault the first 1000 revs. Example: 3% misfire = 60 misfire in this limit.";


                        break;
                    case "MissfCal.O2AdjMFErrLim":
                        description = "The number of misfire / block that increase the O2 sens rear adjustment block counter. Resolution is 1.";


                        break;
                    case "MissfCal.O2AdjBlockErrLim":
                        description = "The number of block there MissfAdap.MissfTotCntCat > MissfCal.O2AdjMFErrLim and a new set of calibration for O2 sens rear adjustment. Resolution is 1.";


                        break;
                    case "MissfCal.O2AdjMFOKLim":
                        description = "The number of misfire / block that decrease the O2 sens rear adjustment block counter. Resolution is 1.";


                        break;
                    case "MissfCal.O2AdjBlockOKLim":
                        description = "The number of block there MissfAdap.MissfTotCntCat < MissfCal.O2AdjMFOKLim and the ordinary set of calibration for O2 sens rear adjustment restablished. Resolution is 1.";


                        break;
                    case "MissfCal.U_AdapMinLim":
                        description = "Adaption Min limit. When the cat sond voltage is below this limit, the lambda adaption (rich constant) will be updated. Resolution is 1 mV.";


                        break;
                    case "MissfCal.U_AdapMaxLim":
                        description = "Adaption Max limit. When the cat sond voltage is abow this limit, the lambda adaption (lean constant) will be updated. Resolution is 1 mV.";


                        break;
                    case "MissfCal.LeanStep":
                        description = "Lambda lean step adjustment table. \"Fast trim\" (affects the lambda close loop lean step in order to balance catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01%.";


                        break;
                    case "MissfCal.RichStep":
                        description = "Lambda rich step adjustment table.° Fast trim° (affects the lambda close loop rich step in order to balance the catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01%.";


                        break;
                    case "MissfCal.T_EngOffLim":
                        description = "Limit for hot fuel start. Limit is compared with MissfAdap.T_EngOff.";


                        break;
                    case "MissfCal.T_hotStartLim":
                        description = "Limit for hot fuel start. Limit is compared with obdStarttemperature";


                        break;
                    case "MissfCal.T_hotAirLim":
                        description = "Limit for hot fuel start. Limit is compared with In.T_AirInlet.";


                        break;
                    case "MissfCal.CVSErrorLimHotStart":
                        description = "Limit for setting CVS misfire fault the first 1000 revs with hot fuel start criteria. ";


                        break;
                    case "OBDAdap.ImmoHistory":
                        description = "Stored status bytes from immobilizer function";


                        break;
                    case "OBDAdap.p_FuelTankComp":
                        description = "Used as zero pressure reference when adapting the actualin.p_fueltank.";


                        break;
                    case "OBDAdap.p_AirInletComp":
                        description = "Difference between p_AirInlet and p_Air at startup used for calibration of p_AirInlet";


                        break;
                    case "OBDAdap.p_AirBefThrottleComp":
                        description = "Difference between p_AirBefThrottle and p_Air at startup used for calibration of p_AirBefThrottle";


                        break;
                    case "OBDAdap.p_AirAdaptionDone":
                        description = "Indicates if a p_air sensor adaption has been done at least once.";


                        break;
                    case "OBDAdap.p_AirQuickAdaptionDone":
                        description = "Indicates if a p_air sensor adaption without accureate t_engine has been done at least once.";


                        break;
                    case "OBDAdap.p_InletPressureError":
                        description = "Indicates if the p_AirInlet diagnose has detected an error during the pressure comparison during ignition off.";


                        break;
                    case "OBDAdap.p_BefThrotPressureError":
                        description = "Indicates if the p_AirBefThrot diagnose has detected an error during the pressure comparison during ignition off.";


                        break;
                    case "OBDAdap.p_AmbientPressureError":
                        description = "Indicates if the p_Air diagnose has detected an error during the pressure comparison during ignition off.";


                        break;
                    case "OBDAdap.compPInletIgnOffDone":
                        description = "Indicates if the pressure comparison has been done during ign of.";


                        break;
                    case "OBDAdap.compPBefIgnOffDone":
                        description = "Indicates if the pressure comparison has been done during ign of.";


                        break;
                    case "OBDAdap.compPAmbIgnOffDone":
                        description = "Indicates if the pressure comparison has been done during ign of.";


                        break;
                    case "OBDAdap.MaxCat":
                        description = "The maximum value indicating catalytic converter destruction caused by misfire is saved in this variable. ";


                        break;
                    case "OBDAdap.MaxEmis":
                        description = "The maximum value indicating emission degradation caused by misfire is saved in this variable. ";


                        break;
                    case "OBDAdap.CatRpm":
                        description = "Engine speed when misfire, dangerous to the cat is detected. (This is done in background)";


                        break;
                    case "OBDAdap.CatTemp":
                        description = "Engine temp when misfire, dangerous to the cat is detected. (This is done in background)";


                        break;
                    case "OBDAdap.CatLoad":
                        description = "Load when misfire, dangerous to the cat is detected. (This is done in background)";


                        break;
                    case "OBDAdap.EmisRpm":
                        description = "Engine speed when misfire, bad for the emissions, is detected. (This is done in background)";


                        break;
                    case "OBDAdap.EmisTemp":
                        description = "Engine temp when misfire, bad for the emissions, is detected. (This is done in background)";


                        break;
                    case "OBDAdap.EmisLoad":
                        description = "Load when misfire, bad for the emissions, is detected. (This is done in background)";


                        break;
                    case "OBDAdap.ThrLimpHomeNr":
                        description = "Last reported throttle limphome number.";


                        break;
                    case "OBDAdap.CatDevDiffFilt":
                        description = "Filtered deviation difference";


                        break;
                    case "OBDAdap.CatEvalValue":
                        description = "Evaluation value for R4 cat diag.";


                        break;
                    case "OBDAdap.CatEvalValueRest":
                        description = "Rest value from the LP filtering of the evaluation value for R4 cat diag.";


                        break;
                    case "OBDAdap.LevEvalValueRest":
                        description = "Rest value from the LP filter of Lev result";


                        break;
                    case "OBDAdap.LevEvalValue":
                        description = "Lev evaluation value.";


                        break;
                    case "OBDAdap.LevResult":
                        description = "Result from lev diag.";


                        break;
                    case "OBDAdap.obdMISFCVS_n_Engine":
                        description = "The engine speed is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdMISFCVS_m_AirInlet":
                        description = "The engine load is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdMISFCVS_T_Engine":
                        description = "The engine temp is saved when the Misfire CVS diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdMISFTEMP_n_Engine":
                        description = "The engine speed is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdMISFTEMP_m_AirInlet":
                        description = "The engine load is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdMISFTEMP_T_Engine":
                        description = "The engine temp is saved when the Misfire Temp diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTMFT_n_Engine":
                        description = "The engine speed is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTMFT_m_AirInlet":
                        description = "The engine load is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTMFT_T_Engine":
                        description = "The engine temp is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTAFT_n_Engine":
                        description = "The engine speed is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTAFT_m_AirInlet":
                        description = "The engine load is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdLTAFT_T_Engine":
                        description = "The engine temp is saved when the LongTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdSTFT_n_Engine":
                        description = "The engine speed is saved when the ShortTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdSTFT_m_AirInlet":
                        description = "The engine load is saved when the ShortTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip.";


                        break;
                    case "OBDAdap.obdSTFT_T_Engine":
                        description = "The engine temp is saved when the ShortTerm FuelTrim diagnose reports error. The data is used to determine whether we have entered the same drive condition or not during the next trip. ";


                        break;
                    case "OBDAdap.p_TestInlet":
                        description = "Contains the ign.off and ing.on test data of the inlet pressure sensor.";


                        break;
                    case "OBDAdap.p_TestBefThrottle":
                        description = "Contains the ign.off and ing.on test data of the bef throttle pressure sensor.";


                        break;
                    case "OBDAdap.p_TestAir":
                        description = "Contains the ign.off and ing.on test data of the ambient pressure sensor.";


                        break;
                    case "OBDAdap.faultyBrakeCounter":
                        description = "Counts the number of fulty brakedowns in the brakelight diag. This result is kept as adaption data to be able to send to the scantool to indicate the latest testresult.";


                        break;
                    case "OBDAdap.offsetTime":
                        description = "Measures the offset time in the ptank diag. This result is kept as adaption data to be able to send to the scantool to indicate the latest testresult. ";


                        break;
                    case "OBDAdap.n_3cylCorrection":
                        description = "This variable counts the number of automatic corrections (force fuel sync) at 3-cyl starts.";


                        break;
                    case "OBDAdap.O2SensFreqFltCnt":
                        description = "Result after low pass filter of combustion counter in freq diagnose";


                        break;
                    case "OBDAdap.FreqFiltRest":
                        description = "Rest after low pass filter of combustion counter in freq diagnose";


                        break;
                    case "OBDAdap.MisfCVSErrorLastDriveCycle":
                        description = "Indicates if the misfire cvs diag reported error the last driving cycle.";


                        break;
                    case "OBDAdap.MisfTempErrorLastDriveCycle":
                        description = "Indicates if the misfire temps diag reported error the last driving cycle.";


                        break;
                    case "OBDAdap.FuelLevResult":
                        description = "Contains the 5 latest results from the fuellevel sensor diag. Contains the measured fuel consumption during the last 5 runs of the diag.";


                        break;
                    case "OBDAdap.FAdapWhenQAirError":
                        description = "Contains the mul fuel adap from when qairdiag reported error.";


                        break;
                    case "OBDAdap.MIU_ErrCnt":
                        description = "Total number of unfiltered devicedriver faultindications on MIU node, The counter increase each time after the devicedriver have indicated \"no fault\".";


                        break;
                    case "OBDAdap.TCM_ErrCnt":
                        description = "Total number of unfiltered devicedriver faultindications on TCM node, The counter increase each time after the devicedriver have indicated \"no fault\".";


                        break;
                    case "OBDAdap.SAI_Do_Intrusive_Test":
                        description = "Flag to indicate for SAIDIAG to do an intrusive test. Is either performed now or at next drivingcycle.";


                        break;
                    case "OBDAdap.triggerVarNr":
                        description = "Indicates which variable in the plott, loaded in the ECU, that should be used to trigger on.";


                        break;
                    case "OBDAdap.triggerPosFlank":
                        description = "Indicates if the trigger should take place on a positive or negative flank of the chosen variable.";


                        break;
                    case "OBDAdap.triggerValue":
                        description = "Indicates which value on the chosen variable that will trigger the plott to stop.";


                        break;
                    case "OBDAdap.TCS_ErrCnt":
                        description = "Total number of unfiltered devicedriver faultindications on TCS node, The counter increase each time after the devicedriver have indicated \"no fault\".";


                        break;
                    case "OBDAdap.triggerDelay":
                        description = "Delays trigger (in ms) to stop the plott.";


                        break;
                    case "OBDAdap.O2SensFCmbCnt":
                        description = "Number of combustion in Sond Freq Diag. Used in Scantool";


                        break;
                    case "OBDAdap.SAIMainDiagIntA":
                        description = "The area of Lambda.Int during main test";


                        break;
                    case "OBDAdap.SAIIntrResult":
                        description = "The last result of the Intrusive test 1: OK 0: Failure";


                        break;
                    case "OBDAdap.SAIIntrIntDiff":
                        description = "The difference between Lambda.LambdaInt before and after the intrusive test minus the evaluated value from the table SAIDiagCal.m_AirSP.";


                        break;
                    case "OBDAdap.SAIIntrm_air":
                        description = "Mean value of MAF.m_AirInletFuel during the intrusive test";


                        break;
                    case "OBDAdap.MILdistance":
                        description = "The accumulated driven distance in km with lit MIL.";


                        break;
                    case "OBDAdap.T_CoolSystemRes":
                        description = "Shows the ActualIn.T_Engine when faulty TCooling system diagnose. This result is kept as adaption data to be able to send to the scantool to indicate the latest testresult.";


                        break;
                    case "OBDAdap.V_FuelTankFilt":
                        description = "The filtrated fuel level at ignition off. On ign. on the VolFuelTankFilt is updated with this variable if VolFuelTankFilt is <= 10 L. Resolution is 0.1. Interval is 0 ms.";


                        break;
                    case "OBDAdap.FuelLevelError":
                        description = "Fuel level diagnose error";


                        break;
                    case "OBDAdap.ST_ActiveDiagSys":
                        description = "Show the active diagnose system that is choosed. 0 = OBD2 1 = EOBD 2 = LOBD";


                        break;
                    case "OBDAdap.BoostFault":
                        description = "When Boost control diagnose reports a fault, information about wich conditionthat caused fault is saved. This is used to determine if the diagnose can report ok.For example, when boost is in closed loop and fault is reported, bit 0 isset in this variable and it will not be reseted before conditions for ok with boostin closed loop is active. Meanwhile no ok report will be made.0 = Nofaultbit 0 = Fault when boost is in closed loopbit 1 = Fault when throttle is in closed loop";


                        break;
                    case "OBDAdapEvap.EvapStack":
                        description = "When Evap test 1,3,4 has succeded will put it's evaluation value into this stack. Resolution is 1. Interval is background.";


                        break;
                    case "OBDAdapEvap.Evap2BigResDiff":
                        description = "This counter will increase if the leakageresult i evapdiagnose is a bigger diff than 2 compared to the lastresult in EvapStack and the result will not be insertedto the stack. Next time a diagnose has performed the resultwill automaticly be inserted due to this counter > 0.It will be set to 0 when a value is inserted into the stack. Interval is kground.";


                        break;
                    case "OBDAdapEvap.StackResult":
                        description = "Average value from OBDAdapEvap.EvapStack Interval is kground.";


                        break;
                    case "OBDAdapEvap.LeakageResult":
                        description = "Saves the obdEvap.LeakageResult for scantool evalutation, If there is a big leakthe result is 1000. Interval is kground.";


                        break;
                    case "OBDAdapEvap.N_OutOfLimTemp":
                        description = "Every time that precondition has been fullfiled except the temperature limit, this counter will be increased. When counter >= 3 the diagnose will report readiness.It's cleared when diagnose reports either fault or ok; Interval is kground.";


                        break;
                    case "OBDAdapRes.mulfueladap":
                        description = "When first mul fueladap is done every drive cycle the mul fuel adap is saved.";


                        break;
                    case "OBDAdapRes.addfueladap":
                        description = "When first mul fueladap is done every drive cycle the add fuel adap is saved.";


                        break;
                    case "OBDAdapRes.knkadaphiwin":
                        description = "When first mul fueladap is done every drive cycle the knock adap in hi window is saved.";


                        break;
                    case "OBDAdapRes.knkadaplowin":
                        description = "When first mul fueladap is done every drive cycle the knock adap in lo window is saved.";


                        break;
                    case "OBDAdapRes.idleneutraladap":
                        description = "When first mul fueladap is done every drive cycle the idle adap in neutral is saved.";


                        break;
                    case "OBDAdapRes.idledriveadap":
                        description = "When first mul fueladap is done every drive cycle the idle adap in drive is saved.";


                        break;
                    case "OBDAdapRes.boostadap":
                        description = "When first mul fueladap is done every drive cycle the boost adap is saved.";


                        break;
                    case "OBDAdapRes.starttime":
                        description = "When first mul fueladap is done every drive cycle the ECMStat.t_Starttime is saved.";


                        break;
                    case "OBDAdapRes.misfatstart":
                        description = "When first mul fueladap is done every drive cycle the number of misfire at start is saved.";


                        break;
                    case "OBDAdapRes.airmTEng":
                        description = "Engine temp when airmass compare diag reports ok or error.";


                        break;
                    case "OBDAdapRes.airmTAir":
                        description = "Air inlet temp when airmass compare diag reports ok or error.";


                        break;
                    case "OBDAdapRes.qairCompThr":
                        description = "Mean value of the diff between throttle airmass and HFM airmass. For qairinlet diagnose.";


                        break;
                    case "OBDAdapRes.qairCompHiThr":
                        description = "Mean value of the diff between throttle airmass and HFM airmass. From the hi flow part of measurement. For qairinlet diagnose.";


                        break;
                    case "OBDAdapRes.qairAmbAir":
                        description = "In.p_AirAmbient when qairinlet diag reports ok or fault.";


                        break;
                    case "OBDAdapRes.amp_Bypass":
                        description = "Greatest pressure before throttle amplitude during the trip.";


                        break;
                    case "OBDAdapRes.m_boostActAir":
                        description = "Load in mg/c when boost diag reports ok or error.";


                        break;
                    case "OBDAdapRes.BoostAdap":
                        description = "Adaption % PWM on APC valve.";


                        break;
                    case "OBDAdapRes.m_boostSet":
                        description = "Load set value for boost regulator when boost diag reports ok or error.";


                        break;
                    case "OBDAdapRes.t_LambdaStart":
                        description = "The time in ms. it takes to enter closed loop.";


                        break;
                    case "OBDAdapRes.t_StartTempState":
                        description = "Indicates start temperature. 1 = temperature less than -7 degrees. 2 = temperature greater than -7 and less than 10 degrees. 3 = temperature greater than 10 degrees.";


                        break;
                    case "OBDAdapRes.n_IdleSpeed":
                        description = "Actual engine speed when idle diag reports ok or error.";


                        break;
                    case "OBDAdapRes.n_IdleNom":
                        description = "Nominal idle engine speed when idle diag reports ok or error.";


                        break;
                    case "OBDAdapRes.BlockAdaption":
                        description = "The AD value from the throttle pot. when the throttle is closed.";


                        break;
                    case "OBDAdapRes.U_HiSensPost":
                        description = "The highest rear sensor signal measured during the trip.";


                        break;
                    case "OBDAdapRes.U_DeadSensPost":
                        description = "The rear sensor signal when fuelcut has been active. Measured once per trip.";


                        break;
                    case "OBDAdapRes.t_LowSensPost":
                        description = "The longest time during the trip that the rear sensor signal has been below lim for setting rear sensor low faultcode.";


                        break;
                    case "OBDAdapRes.U_SensPre":
                        description = "Probe sensor signal before catalyst converter";


                        break;
                    case "OBDAdapRes.Flank_pTank":
                        description = "Contains the number of flankshifts on the p_fueltank siganl when the p_fueltank signal ripples with an amplitude above limit.";


                        break;
                    case "OBDAdapRes.Flank_SensFrq":
                        description = "Number of lamba integrator switches since lambda controler have been restared depending on engine stop.";


                        break;
                    case "OBDAdapRes.Comb_SensFrq":
                        description = "Number of combustions since engine was started.";


                        break;
                    case "OBDAdapRes.T_EngStart":
                        description = "The engine coolant temperature at ignition on.";


                        break;
                    case "OBDAdapRes.T_EngActual":
                        description = "The engine actual coolant temperature when the diagnose reports ok or error.";


                        break;
                    case "OBDAdapRes.evapLeakFact":
                        description = "Contains the evap. leakage factor when the evap diag reports ok or error.";


                        break;
                    case "OBDAdapRes.evapAirStartTemp":
                        description = "Contains the inlet air start temp for the trip when evap diag reported ok or error.";


                        break;
                    case "OBDAdapRes.evapEngStartTemp":
                        description = "Contains the engine start temp for the trip when evap diag reported ok or error.";


                        break;
                    case "OBDAdapRes.catEvalValue":
                        description = "Filtered deviation difference";


                        break;
                    case "OBDAdapRes.catv6loadAv":
                        description = "Average load during v6 catalyst diagnose.";


                        break;
                    case "OBDAdapRes.catv6catTemp":
                        description = "Catalyst temp during v6 cat. diagnose.";


                        break;
                    case "OBDAdapRes.catv6Result":
                        description = "V6 Cat diagnose result.";


                        break;
                    case "OBDAdapRes.missfCnt":
                        description = "Max number of misfire during a block, this driving cycle.";


                        break;
                    case "OBDAdapRes.missf1000":
                        description = "Number of misf during 1000revs from eng. start from 850 rpm.";


                        break;
                    case "OBDAdapRes.lambdaAtMaxTime":
                        description = "Longest time when the lambda integrator is in max/min position during this trip. This value is set when the shortterm diag reports ok or error.";


                        break;
                    case "OBDAdapRes.mulFuelAdap":
                        description = "Multicative fueladaption value when long term diag reports ok or error.";


                        break;
                    case "OBDAdapRes.addFuelAdap":
                        description = "Additative fueladaption value when long term diag reports ok or error.";


                        break;
                    case "OBDAdapRes.p_AmbAirAmb":
                        description = "Contains the ign.off or ing.on test data from the ambient pressure sensor.";


                        break;
                    case "OBDAdapRes.p_AmbAirInl":
                        description = "Contains the ign.off or ing.on test data from the inlet pressure sensor.";


                        break;
                    case "OBDAdapRes.p_AmbAirBef":
                        description = "Contains the ign.off or ing.on test data from the bef throttle pressure sensor.";


                        break;
                    case "OBDAdapRes.adap_mul":
                        description = "Contains the mul fuel adaption. This value is set when qairinlet diag reports ok or error. ";


                        break;
                    case "OBDAdapRes.adap_add":
                        description = "Contains the add fuel adaption. This value is set when qairinlet diag reports ok or error. ";


                        break;
                    case "OBDAdapRes.n_CombSync":
                        description = "Number of combustions since engine was started. This flag is cleared when the engine is restarting to syncronice ignition and is used for sync diagnose.";


                        break;
                    case "OBDAdapRes.T_Sync":
                        description = "Engine start temp when engine sync diag reports ok or fault.";


                        break;
                    case "OBDAdapRes.I_HeatPre":
                        description = "Actual current through the front probe.";


                        break;
                    case "OBDAdapRes.I_HeatPost":
                        description = "Actual current through the reare probe.";


                        break;
                    case "OBDAdapRes.p_AirInlDiff":
                        description = "Difference between inlet manifold air pressure after throttle and external air pressure. For pbefhose diag.";


                        break;
                    case "OBDAdapRes.p_AirBefDiff":
                        description = "Difference between air pressure before throttle and external air pressure.For pbefhose diag.";


                        break;
                    case "OBDAdapRes.lambAdapRich":
                        description = "Adapted value to add to lean const.";


                        break;
                    case "OBDAdapRes.lambAdapLean":
                        description = "Adapted value to add to Rich const.";


                        break;
                    case "OBDAdapRes.TAirAtMaxTime":
                        description = "Longest time when the T_AirInlet error criteria is fullfilld during this trip. This value is set when the T_AirInlet diag reports ok or error.";


                        break;
                    case "OBDAdapRes.A_Throttle":
                        description = "Throttle adaption, AreaAdap.A_Throttle";


                        break;
                    case "OBDAdapRes.T_AtTempChange":
                        description = "ActualIn.T_Engine at obdTEngTempChange == 1. If no temp change value will be 9999;";


                        break;
                    case "OBDAdapRes.n_TEngDeadComb":
                        description = "obdTengDeadCombustion at obdTEngTempChange == 1. If no temp change value will be 0;";


                        break;
                    case "OBDAdapRes.T_CoolRuntime":
                        description = "Runtime when TCoolingSystem Diagnose reports OK/Fault.";


                        break;
                    case "OBDAdapRes.T_CoolCombust":
                        description = "Internal combustion counter obdTEngCombust when TCoolingSystem Diagnose reports OK/Fault.";


                        break;
                    case "OBDAdapRes.T_CoolAirActual":
                        description = "The AirInlet actual coolant temperature when the diagnose reports ok or error.";


                        break;
                    case "OBDAdapRes.T_CoolEngActual":
                        description = "The Engine actual coolant temperature when the diagnose reports ok or error.";


                        break;
                    case "OBDCal.MILEnabled":
                        description = "With this bit set, diagnosis will control MIL";


                        break;
                    case "OBDCal.prelFaultCountDown":
                        description = "When this flag is set, preliminary faults will not be erased upon an OK report. Instead the faults' faultcounter will be decremented.";


                        break;
                    case "OBDCal.evapEquipmentExist":
                        description = "This flag indicates if the fueltankpressure sensor and the canister close valve exist in the car.";


                        break;
                    case "OBDCal.evapTestTimeLim":
                        description = "Maximum time the mode8 evaptest can be active. After this time the purge and purgediag are released.";


                        break;
                    case "OBDCal.StopPlotWhenFault":
                        description = "With this bit set, the default plot will be stopped after 200 ms delay when a diagnose reports fault.";


                        break;
                    case "OBDCal.StopPlotDelayTime":
                        description = "The time in ms before the default plot is to be stopped (delaytime) after a diagnose has reported a fault.";


                        break;
                    case "OBDCal.EnableOBD2Limit":
                        description = "If this flag is set, outofOBD2 limits will be set when ambient pressure is below 78 kPa or enigne or air temp is below -7 C.";


                        break;
                    case "OBDCal.T_AirLoOBDLim":
                        description = "If the airinlet temp is below this limit the out of diag flag will be set.";


                        break;
                    case "OBDCal.T_EngLoOBDLim":
                        description = "If the engine temp is below this limit the out of diag flag will be set.";


                        break;
                    case "OBDCal.p_AirLoOBDLim":
                        description = "If the pressure ambient is below this limit the out of diag flag will be set.";


                        break;
                    case "OBDCal.T_AirHiOBDLim":
                        description = "If the airinlet temp is above this limit the out of diag flag will be reset.";


                        break;
                    case "OBDCal.T_EngHiOBDLim":
                        description = "If the engine temp is above this limit the out of diag flag will be reset.";


                        break;
                    case "OBDCal.p_AirHiOBDLim":
                        description = "If the pressure ambient is above this limit the out of diag flag will be reset.";


                        break;
                    case "OBDCal.LOBDEnabled":
                        description = "This bit activates ROW (RestOfWorld) addition for OBD2-tests when set.";


                        break;
                    case "OBDCal.EOBDEnabled":
                        description = "This bit activates EU addition for OBD2-tests when set.";


                        break;
                    case "EvapDiagCal.ramp0LoPurgeLim":
                        description = "If the ramp0 is below this value during the special purge diagPURGE_ERROR will be issued.";


                        break;
                    case "EvapDiagCal.Ramp1allFuelLevelRipple":
                        description = "This change in the fueltank pressure, opposite to the expectedpressure ramp, is allowed. If the pressure ramp is expectedto be positive the pressure is allowed to decrease this amountbetween two readings. THIS ONLY VALID FOR RAMP1";


                        break;
                    case "EvapDiagCal.p_Ramp1MaxDiff":
                        description = "This change in the fueltank pressure is allowed. (independant ofexpected direction of the pressure ramp).";


                        break;
                    case "EvapDiagCal.purgeDiagAllowedRipple":
                        description = "This limit is only used during the purgediag. This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings.";


                        break;
                    case "EvapDiagCal.purgeDiagMaxPDiff":
                        description = "This limit is only used during the purgediag.This change in the fueltank pressure is allowed. (independant ofexpected direction of the pressure ramp).";


                        break;
                    case "EvapDiagCal.T_HiLim":
                        description = "The max temp for performing a evap test.";


                        break;
                    case "EvapDiagCal.T_LoLim":
                        description = "The min temp for performing a evap test.";


                        break;
                    case "EvapDiagCal.T_Diff":
                        description = "The max/min allowed temp diff between air and engine temp to performa evap test. Air temp is higher than eng temperature";


                        break;
                    case "EvapDiagCal.Test1Ramp2ResSP":
                        description = "X-axel in matris for leakagefactor for ramp2 evaluation. Onlyfor test 1";


                        break;
                    case "EvapDiagCal.V_Test1FuelSP":
                        description = "Y-axel in matris for leakagefactor for ramp2 evaluation. Only for test 1";


                        break;
                    case "EvapDiagCal.LeakFacTest1MAT":
                        description = "Leakage matrix that contains a ramp2 value with a certain volume offuel that gives a leakage factor to put into the stack";


                        break;
                    case "EvapDiagCal.Test2Ramp2ResSP":
                        description = "X-axel in matris for leakagefactor for ramp2 evaluation. Onlyfor test 2";


                        break;
                    case "EvapDiagCal.V_Test2FuelSP":
                        description = "Y-axel in matris for leakagefactor for ramp2 evaluation. Onlyfor test 2";


                        break;
                    case "EvapDiagCal.LeakFacTest2MAT":
                        description = "Leakage matrix that contains a ramp2 value with a certain volume offuel that gives a leakage factor to put into the stack";


                        break;
                    case "EvapDiagCal.Ramp0allFuelLevelRipple":
                        description = "This change in the fueltank pressure, opposite to the expectedpressure ramp, is allowed. If the pressure ramp is expectedto be positive the pressure is allowed to decrease this amountbetween two readings. THIS ONLY VALID FOR RAMP0";


                        break;
                    case "EvapDiagCal.p_Ramp0MaxDiff":
                        description = "This change in the fueltank pressure is allowed. (independant ofexpected direction of the pressure ramp).THIS ONLY VALID FOR RAMP0";


                        break;
                    case "EvapDiagCal.Ramp2allFuelLevelRipple":
                        description = "This change in the fueltank pressure, opposite to the expectedpressure ramp, is allowed. If the pressure ramp is expectedto be positive the pressure is allowed to decrease this amountbetween two readings. THIS ONLY VALID FOR RAMP2";


                        break;
                    case "EvapDiagCal.p_Ramp2MaxDiff":
                        description = "This change in the fueltank pressure is allowed. (independant ofexpected direction of the pressure ramp).THIS ONLY VALID FOR RAMP2";


                        break;
                    case "EvapDiagCal.n_TooMuchVapourLim":
                        description = "The number of interrupted vapour tests before vehicle speed is demanded.";


                        break;
                    case "EvapDiagCal.T_StartExecCtrl":
                        description = "If ExecCntrlOption.EvapColdStart is enabled the purge startlim needsto be lower. This calib is used as a diff from PurgeCal.T_EngineLim.(PurgeCal.T_EngineLim - (ExecCntrlOption.EvapColdStart ? EvapDiagCal.T_StartExecCtrl : 0)) UNIT:C";


                        break;
                    case "EvapDiagCal.m_Delta":
                        description = "Every second during test a load delta is measured. Test will abort if the load diffexceeds this limit. UNIT:mg/c";


                        break;
                    case "EvapDiagCal.maxPosR2Diff":
                        description = "Max positive diff in percent between last and actual ramp2, Only for test4";


                        break;
                    case "EvapDiagCal.maxNegR2Diff":
                        description = "Max negative diff in percent between last and actual ramp2, Only for test4";


                        break;
                    case "EvapDiagCal.MaxTankPressure":
                        description = "Maximum allowed tank overpressure";


                        break;
                    case "EvapDiagCal.m_loLim":
                        description = "Lower load limit for precondition";


                        break;
                    case "EvapDiagCal.m_hiLim":
                        description = "Higher load limit for precondition";


                        break;
                    case "EvapDiagCal.ramp0LoLim":
                        description = "If the ramp0 is below this value PURGE_ERROR will beissued on test 1, else test is aborted.";


                        break;
                    case "EvapDiagCal.HCContFiltFac":
                        description = "Filter factor for HC adaption during tank diagnosis. Resolution is 1.";


                        break;
                    case "EvapDiagCal.RampTimeUp":
                        description = "Ramp speed of purge flow at tank diagnosis. Resolution is 0.1 s.";


                        break;
                    case "EvapDiagCal.V_FuelMax":
                        description = "The max volume in fuel tank to allow test.";


                        break;
                    case "EvapDiagCal.V_FuelMin":
                        description = "The min volume in fuel tank to allow test.";


                        break;
                    case "EvapTestCal1.MinTankPressure":
                        description = "Minimum allowed tank underpressure";


                        break;
                    case "EvapTestCal1.nrOfBrakeChangeLim":
                        description = "Max nr of brake changes";


                        break;
                    case "EvapTestCal1.PurgeloLim":
                        description = "Minimum allowed purge adaption in precondition.";


                        break;
                    case "EvapTestCal1.Level1PressureMeasurement":
                        description = "The high pressure level where the time is measured.";


                        break;
                    case "EvapTestCal1.Level2PressureMeasurement":
                        description = "The middle pressure level where the time is measured.";


                        break;
                    case "EvapTestCal1.Level3PressureMeasurement":
                        description = "The low pressure level where the time is measured.";


                        break;
                    case "EvapTestCal1.LambdaIntLim":
                        description = "Below this limit in lambda.lambdaint the normal evap testshould be halted.";


                        break;
                    case "EvapTestCal1.HCContDiff":
                        description = "Maximum allowed purge adaption during normal evap test.";


                        break;
                    case "EvapTestCal1.v_loLim":
                        description = "Lower vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal1.v_hiLim":
                        description = "Higher vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal1.ramp0HiLim":
                        description = "The maximum allowed ramp for the vapour measurement during normal start.";


                        break;
                    case "EvapTestCal1.TimeForExtraPressureIncrease":
                        description = "The time for extra decrease of the tank pressure.";


                        break;
                    case "EvapTestCal1.PurgeTimeForStabilePressure":
                        description = "The time for a stabile pressure after purge valve is closed.";


                        break;
                    case "EvapTestCal1.t_ramp2Eval":
                        description = "Maximum time to wait before ramp2 evaluation";


                        break;
                    case "EvapTestCal1.t_Level1":
                        description = "Time for level 1 in ramp1";


                        break;
                    case "EvapTestCal1.t_Level2":
                        description = "Time for level 2 in ramp1";


                        break;
                    case "EvapTestCal1.t_Level3":
                        description = "Time for level 3 in ramp1";


                        break;
                    case "EvapTestCal1.t_breakWaitTime":
                        description = "If preconditionduring test is not OK, wait this time until next try.";


                        break;
                    case "EvapTestCal1.PreconditionTime":
                        description = "Time for precondition to be fulfilled.";


                        break;
                    case "EvapTestCal1.PurgeDiagFlow":
                        description = "PWM signal sent to the Purge valve.0 = closed valve1000 = open valve";


                        break;
                    case "EvapTestCal1.maxnrOfRamp2Eval":
                        description = "Number of evaluations in ramp2";


                        break;
                    case "EvapTestCal1.pAirAmbientDelta":
                        description = "Delta pAirAmbient max and min from obdEvappAirAmbientStack";


                        break;
                    case "EvapTestCal1.v_Diff":
                        description = "Speed limit for maximum allowed vehicle speed change during test. UNIT:km/h";


                        break;
                    case "EvapTestCal2.MinTankPressure":
                        description = "Minimum allowed tank underpressure";


                        break;
                    case "EvapTestCal2.nrOfBrakeChangeLim":
                        description = "Max nr of brake changes";


                        break;
                    case "EvapTestCal2.PurgeloLim":
                        description = "Minimum allowed purge adaption in precondition.";


                        break;
                    case "EvapTestCal2.Level1PressureMeasurement":
                        description = "The high pressure level where the time is measured.";


                        break;
                    case "EvapTestCal2.Level2PressureMeasurement":
                        description = "The middle pressure level where the time is measured.";


                        break;
                    case "EvapTestCal2.Level3PressureMeasurement":
                        description = "The low pressure level where the time is measured.";


                        break;
                    case "EvapTestCal2.LambdaIntLim":
                        description = "Below this limit in lambda.lambdaint the normal evap testshould be halted.";


                        break;
                    case "EvapTestCal2.HCContDiff":
                        description = "Maximum allowed purge adaption during normal evap test.";


                        break;
                    case "EvapTestCal2.v_loLim":
                        description = "Lower vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal2.v_hiLim":
                        description = "Higher vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal2.ramp0HiLim":
                        description = "The maximum allowed ramp for the vapour measurement during normal start.";


                        break;
                    case "EvapTestCal2.TimeForExtraPressureIncrease":
                        description = "The time for extra decrease of the tank pressure.";


                        break;
                    case "EvapTestCal2.PurgeTimeForStabilePressure":
                        description = "The time for a stabile pressure after purge valve is closed.";


                        break;
                    case "EvapTestCal2.t_ramp2Eval":
                        description = "Maximum time to wait before ramp2 evaluation";


                        break;
                    case "EvapTestCal2.t_Level1":
                        description = "Time for level 1 in ramp1";


                        break;
                    case "EvapTestCal2.t_Level2":
                        description = "Time for level 2 in ramp1";


                        break;
                    case "EvapTestCal2.t_Level3":
                        description = "Time for level 3 in ramp1";


                        break;
                    case "EvapTestCal2.t_breakWaitTime":
                        description = "If preconditionduring test is not OK, wait this time until next try.";


                        break;
                    case "EvapTestCal2.PreconditionTime":
                        description = "Time for precondition to be fulfilled.";


                        break;
                    case "EvapTestCal2.PurgeDiagFlow":
                        description = "PWM signal sent to the Purge valve.0 = closed valve1000 = open valve";


                        break;
                    case "EvapTestCal2.maxnrOfRamp2Eval":
                        description = "Number of evaluations in ramp2";


                        break;
                    case "EvapTestCal2.pAirAmbientDelta":
                        description = "Delta pAirAmbient max and min from obdEvappAirAmbientStack";


                        break;
                    case "EvapTestCal2.v_Diff":
                        description = "Speed limit for maximum allowed vehicle speed change during test. UNIT:km/h";


                        break;
                    case "EvapTestCal3.MinTankPressure":
                        description = "Minimum allowed tank underpressure";


                        break;
                    case "EvapTestCal3.nrOfBrakeChangeLim":
                        description = "Max nr of brake changes";


                        break;
                    case "EvapTestCal3.PurgeloLim":
                        description = "Minimum allowed purge adaption in precondition.";


                        break;
                    case "EvapTestCal3.Level1PressureMeasurement":
                        description = "The high pressure level where the time is measured.";


                        break;
                    case "EvapTestCal3.Level2PressureMeasurement":
                        description = "The middle pressure level where the time is measured.";


                        break;
                    case "EvapTestCal3.Level3PressureMeasurement":
                        description = "The low pressure level where the time is measured.";


                        break;
                    case "EvapTestCal3.LambdaIntLim":
                        description = "Below this limit in lambda.lambdaint the normal evap testshould be halted.";


                        break;
                    case "EvapTestCal3.HCContDiff":
                        description = "Maximum allowed purge adaption during normal evap test.";


                        break;
                    case "EvapTestCal3.v_loLim":
                        description = "Lower vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal3.v_hiLim":
                        description = "Higher vehicle speed limit for precondition";


                        break;
                    case "EvapTestCal3.ramp0HiLim":
                        description = "The maximum allowed ramp for the vapour measurement during normal start.";


                        break;
                    case "EvapTestCal3.TimeForExtraPressureIncrease":
                        description = "The time for extra decrease of the tank pressure.";


                        break;
                    case "EvapTestCal3.PurgeTimeForStabilePressure":
                        description = "The time for a stabile pressure after purge valve is closed.";


                        break;
                    case "EvapTestCal3.t_ramp2Eval":
                        description = "Maximum time to wait before ramp2 evaluation";


                        break;
                    case "EvapTestCal3.t_Level1":
                        description = "Time for level 1 in ramp1";


                        break;
                    case "EvapTestCal3.t_Level2":
                        description = "Time for level 2 in ramp1";


                        break;
                    case "EvapTestCal3.t_Level3":
                        description = "Time for level 3 in ramp1";


                        break;
                    case "EvapTestCal3.t_breakWaitTime":
                        description = "If preconditionduring test is not OK, wait this time until next try.";


                        break;
                    case "EvapTestCal3.PreconditionTime":
                        description = "Time for precondition to be fulfilled.";


                        break;
                    case "EvapTestCal3.PurgeDiagFlow":
                        description = "PWM signal sent to the Purge valve.0 = closed valve1000 = open valve";


                        break;
                    case "EvapTestCal3.maxnrOfRamp2Eval":
                        description = "Number of evaluations in ramp2";


                        break;
                    case "EvapTestCal3.pAirAmbientDelta":
                        description = "Delta pAirAmbient max and min from obdEvappAirAmbientStack";


                        break;
                    case "EvapTestCal3.v_Diff":
                        description = "Speed limit for maximum allowed vehicle speed change during test. UNIT:km/h";


                        break;
                    case "pTankDiagCal.measurementTime":
                        description = "During this time the pressuredifference is measured.";


                        break;
                    case "pTankDiagCal.maxNrOfFlankShifts":
                        description = "Maximum allowed flankshifts with an amplitude above maxPressureDiff during the measurement time.";


                        break;
                    case "pTankDiagCal.maxPressureDiff":
                        description = "Maximum allowed tankpressure-reading-difference.";


                        break;
                    case "FuelLevelCal.distance":
                        description = "Driving distance between fuel level checkpoints. Resolution is 1 km.";


                        break;
                    case "FuelLevelCal.decrease":
                        description = "Minimum fuel level decrease between fuel level \"Checkpoints\". Resolution is 0.1 litre.";


                        break;
                    case "FuelLevelCal.VolFuelTankFiltCoef":
                        description = "FilterCoef for lp filter of vol_fueltank";


                        break;
                    case "FuelLevelCal.StartVolFuelTankFiltCoef":
                        description = "FilterCoef for lp filter of vol_fueltank after start";


                        break;
                    case "FuelLevelCal.SpeedLimStartFiltCoef":
                        description = "Vehi speed lim for not using the startfiltcoef when filtering the fuel level.";


                        break;
                    case "FuelLevelCal.LoadLoLimStartFiltCoef":
                        description = "M_airinlet low lim for not using the startfiltcoef when filtering the fuel level.";


                        break;
                    case "FuelLevelCal.LoadHiLimStartFiltCoef":
                        description = "M_airinlet high lim for not using the startfiltcoef when filtering the fuel level.";


                        break;
                    case "FuelLevelCal.TimeLimStartFiltCoef":
                        description = "Time lim for the load and speed conditions for not using the startfiltcoef when filtering the fuel level.";


                        break;
                    case "FuelLevelCal.FuelLevelRippleLim":
                        description = "The ActualIn.Vol_FuelTank signal must not vary more than this limit if the start filt coef should be deactivated.";


                        break;
                    case "FuelLevelCal.maxFuel":
                        description = "Max fuel level for not double the distance for evaluation.";


                        break;
                    case "FuelLevelCal.V_ActivityCheck":
                        description = "Volume difference to have to say that the fuellevelsensor is not stuck.";


                        break;
                    case "FuelLevelCal.v_diff":
                        description = "Max decrease in v_vehicle during the precondition time for taking a fuellevel reference.";


                        break;
                    case "PAirInletDiagCal.fuelCutPressureLimit":
                        description = "The maximum allowed pressure during released pedal test.";


                        break;
                    case "PAirInletDiagCal.rpmLim":
                        description = "The minimum allowed rpm for doing the released pedal test.";


                        break;
                    case "PAirInletDiagCal.loadLim":
                        description = "The maximum allowed load for doing the released pedal test.";


                        break;
                    case "PAirInletDiagCal.Inlet_AmbientPDevLim":
                        description = "The maximum allowed pressure deviation between the ambient pressure sensor and the inlet pressure sensor.";


                        break;
                    case "PAirInletDiagCal.Ambient_BefThrotPDevLim":
                        description = "The maximum allowed pressure deviation between the ambient pressure sensor and the before throttle pressure sensor.";


                        break;
                    case "PAirInletDiagCal.noOfPressureReadings":
                        description = "The number of times the PAirInlet sensor is read before it is considered OK or not OK.";


                        break;
                    case "PAirInletDiagCal.noOfFuelCutPressureReadings":
                        description = "The number of times the PAirInlet sensor is read during fuel cut, before it is considered OK or not OK.";


                        break;
                    case "PAirAmbientDiagCal.AmbientPDevLim":
                        description = "Maximum allowed pressure deviation between the ambient pressure sensor and the other two air pressure sensors.";


                        break;
                    case "PAirAmbientDiagCal.Inlet_BefThrotPDevLim":
                        description = "Maximum allowed pressure deviation between the inlet pressure sensor and the before throttle pressure sensor.";


                        break;
                    case "PAirAmbientDiagCal.noOfPressureReadings":
                        description = "How many times the pressure comparison must be done to be able to state the ambient pressure sensor to be OK or notOK.";


                        break;
                    case "PAirBefThrotDiagCal.BefThrot_AmbientPDevLim":
                        description = "Maximum allowed pressure deviation between the before throttle pressure sensor and the ambient air pressure sensor.";


                        break;
                    case "PAirBefThrotDiagCal.Ambient_InletPDevLim":
                        description = "Maximum allowed pressure deviation between the ambient pressure sensor and the inlet air pressure sensor.";


                        break;
                    case "PAirBefThrotDiagCal.noOfPressureReadings":
                        description = "How many times the pressure comparison must be done to be able to state the ambient pressure sensor to be OK or notOK.";


                        break;
                    case "PBefHoseDiagCal.n_EngLim":
                        description = "Min rpm for starting the test.";


                        break;
                    case "PBefHoseDiagCal.P_DiffInletLim":
                        description = "Min p diff between actualin.p_airinlet and actualin.p_air for starting the test.";


                        break;
                    case "PBefHoseDiagCal.P_DiffBefLim":
                        description = "Min p diff between actualin.p_befthrottle and actualin.p_air for starting the test.";


                        break;
                    case "PBefHoseDiagCal.errorTimeLim":
                        description = "Time for error report";


                        break;
                    case "TEngDiagCal.n_CombSP":
                        description = "Engine combustion support points to get correct amount of m_air from table. Due to interpolation routine can't handle 32 bits, the combustion counter can't be > 32000. Therefor local comb counter is = ECMStat.n_Combustion / 2. Resolution is 0.50 (50%). Interval is background.";


                        break;
                    case "TEngDiagCal.T_AirInletSP":
                        description = "Inlet air temp support points to get correct amount of m_air from table. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.m_AirperDegManual":
                        description = "Correction of m_air to build limphome curve for watertemp on manual cars. Is built from y-axel combustion and x-axel T_AirInlet. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.m_AirperDegAutomatic":
                        description = "Correction of m_air to build limphome curve for watertemp on automatic cars. Is built from y-axel combustion and x-axel T_AirInlet. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.n_CombFactTAB":
                        description = "Correction for warm start, increase local combustion counter for y-axel (TEngDiagCal.n_CombSP) depending of start temp to get result from this table. Resolution is 0.50 (50%). Interval is background.";


                        break;
                    case "TEngDiagCal.T_startSP":
                        description = "Start temp that is used to get correction factor for local combustion counter. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.m_LoadFacSP":
                        description = "Switch points for TEngDiagCal.m_LoadFac table that gets correction factor for m_air/comb due to high/low loads. Resolution is 0.01. Interval is background.";


                        break;
                    case "TEngDiagCal.m_LoadFacTAB":
                        description = "M_LoadFac includes a correction factor for m_air/comb due to high/low loads. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.n_deadDiffLim":
                        description = "When engine start temp (obdStartTemp) differs more than this limit, the Tengine signal is alive, else it's dead. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.n_deadCombLim":
                        description = "Number of combustions that is needed before we can decide if the TEngine signal has change enought to say it's alive. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.QCMeanErrLim":
                        description = "The quick change limit, if the mean value from stack is bigger than this value, report fault quick change. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.QCErrLim":
                        description = "The quick change limit, if diff from last loop is bigger than this value, insert diff into stack. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.T_startComp":
                        description = "Engine start compensation due to temperature decrease a couple of degrees at engine start. Resolution is 1. Interval is background.";


                        break;
                    case "TEngDiagCal.X_AutGearFac":
                        description = "If a gear is on a automatic cars and vehicle speed = 0, the this factor will limit the airmassPerdegree. 10 = 1,0. Resolution is 0.1. Interval is background.";


                        break;
                    case "TEngDiagCal.T_MaxLimphome":
                        description = "Max temperature for limphome calculation. This limit is used stop limphome value. Resolution is 1.0. Interval is background.";


                        break;
                    case "TEngDiagCal.T_LimForMaxLimp":
                        description = "If limphome temp is above this limit and a fault either on temp sensor or cooling system is reported, limphome temp is set to max due to force cooling fan to start. This will prevent engine to overheat. Resolution is 1.0. Interval is background.";


                        break;
                    case "TCoolDiagCal.T_WarmStart":
                        description = "Shut off the Temp Cooling System diagnose if the Engine Temperature is above this limit. It's a warm start. Resolution is 1. Interval is background.";


                        break;
                    case "TCoolDiagCal.T_hiLim":
                        description = "Limit - TCoolDiagCal.T_negDiff or + TCoolDiagCal.T_posDiff for Temp Cooling System diagnose to check if Engine Temperature is higher than LimpIn.T_Engine. Resolution is 1. Interval is background.";


                        break;
                    case "TCoolDiagCal.T_negDiff":
                        description = "Max allowed negative diff from TCoolDiagCal.T_hiLim to report fault in Temp Cooling System diagnose. Resolution is 1. Interval is background.";


                        break;
                    case "TCoolDiagCal.T_posDiff":
                        description = "Max allowed positive diff from TCoolDiagCal.T_hiLim to report fault in Temp Cooling System diagnose. Resolution is 1. Interval is background.";


                        break;
                    case "CatDiagCal.runTime":
                        description = "Indicates for how long the engine must run before the catalyst can be evaluated.";


                        break;
                    case "CatDiagCal.LoadFiltCoef":
                        description = "Coefficient in filter for the delta load precondition.";


                        break;
                    case "CatDiagCal.AfStartTimerMin":
                        description = "Indicates limit in airflow to increment the starttimer.";


                        break;
                    case "CatDiagCal.AutAfStartTimerMin":
                        description = "For automatic cars! Indicates limit in airflow to increment the starttimer.";


                        break;
                    case "CatDiagCal.PosDeltaLoadLim":
                        description = "Indicates the maximum positive delta in load signal for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.NegDeltaLoadLim":
                        description = "Indicates the maximum negative delta in load signal for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.CoolTempLim":
                        description = "Indicates the minimum engine water temp for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.LoadHi":
                        description = "Indicates the maximum load for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.AutLoadHi":
                        description = "For automatic cars! Indicates the maximum load for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.LoadLo":
                        description = "Indicates the minimum load for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.AutLoadLo":
                        description = "For automatic cars! Indicates the minimum load for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.LoadTimerLo":
                        description = "Indicates the minimum load for not counting the lowload timer.";


                        break;
                    case "CatDiagCal.AutLoadTimerLo":
                        description = "For automatic cars! Indicates the minimum load for not counting the lowload timer.";


                        break;
                    case "CatDiagCal.LoadTimerHi":
                        description = "Indicates the minimum load for decreasing the lowload timer.";


                        break;
                    case "CatDiagCal.AutLoadTimerHi":
                        description = "For automatic cars! Indicates the minimum load for decreasing the lowload timer.";


                        break;
                    case "CatDiagCal.RpmHi":
                        description = "Indicates the maximum rpm for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.AutRpmHi":
                        description = "For automatic cars! Indicates the maximum rpm for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.RpmLo":
                        description = "Indicates the minimum rpm for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.AutRpmLo":
                        description = "For automatic cars! Indicates the minimum rpm for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.RpmTimerLo":
                        description = "Indicates the minimum rpm for not counting the low load timer.";


                        break;
                    case "CatDiagCal.AutRpmTimerLo":
                        description = "For automatic cars! Indicates the minimum rpm for not counting the low load timer.";


                        break;
                    case "CatDiagCal.RpmTimerHi":
                        description = "Indicates the minimum rpm for decreasing the low load timer.";


                        break;
                    case "CatDiagCal.AutRpmTimerHi":
                        description = "For automatic cars! Indicates the minimum rpm for decreasing the low load timer.";


                        break;
                    case "CatDiagCal.LowLoadTimerLim":
                        description = "Indicates the value for the low load timer to reach, for decreasing the hltimer.";


                        break;
                    case "CatDiagCal.AutLowLoadTimerLim":
                        description = "For automatic cars! Indicates the value for the low load timer to reach, for decreasing the hltimer.";


                        break;
                    case "CatDiagCal.DecrStepLowLoad":
                        description = "The step with which the low load timer is decremented.";


                        break;
                    case "CatDiagCal.StartTimerLim":
                        description = "Indicates the value for the start timer to reach, for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.HlTimerLim":
                        description = "Indicates the value for the hl timer to reach, for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.HlTimerStep":
                        description = "Indicates the value with which the hltimer is decresed, when low load has occured during a calibratable time.";


                        break;
                    case "CatDiagCal.IdleTimerLim":
                        description = "Indicates the value for the idle timer to reach, for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.FcTimerLim":
                        description = "Indicates the value for the fuel cut timer to reach, for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.LimReadyTimer":
                        description = "Indicates the value for the ready timer to reach, for evaluating the catalyst.";


                        break;
                    case "CatDiagCal.Ox2FiltCoef":
                        description = "Filter coeficient oxygen sens.2 .";


                        break;
                    case "CatDiagCal.RpmTab":
                        description = "Rpm site for calibration maps.";


                        break;
                    case "CatDiagCal.LoadTab":
                        description = "Load site for calibration maps.";


                        break;
                    case "CatDiagCal.HiMapOx1CycleTime":
                        description = "Map for retrieving hi limit of cycle time depending on load and rpm.";


                        break;
                    case "CatDiagCal.LoMapOx1CycleTime":
                        description = "Map for retrieving lo limit of cycle time depending on load and rpm.";


                        break;
                    case "CatDiagCal.Ox1DutHiLim":
                        description = "Indicates maximum value of the duty cycle.";


                        break;
                    case "CatDiagCal.Ox1DutLoLim":
                        description = "Indicates minimum value of the duty cycle.";


                        break;
                    case "CatDiagCal.Ox2DevMaxMap":
                        description = "Calibration data for cat evaluation. This calibration value is used to reduce the maximum deviation of the filtrated absolute signal of the oxygen sensor 2.";


                        break;
                    case "CatDiagCal.Stage1Threshold":
                        description = "This is the value that the evalvalue must not exceed to be able to report ok.";


                        break;
                    case "CatDiagCal.AutStage1Threshold":
                        description = "For automatic cars! This is the value that the evalvalue must not exceed to be able to report ok.";


                        break;
                    case "CatDiagCal.RestartLim":
                        description = "This is the value that the catdevdiffilt must not exceed to be able to report ok.";


                        break;
                    case "CatDiagCal.ABSFiltCoef":
                        description = "Filter coeficient for filtering ABS signal.";


                        break;
                    case "CatDiagCal.DevDiffFiltCoef":
                        description = "Filter coeficient for filtering modified ox2 signal once again.";


                        break;
                    case "CatDiagCal.EvalFiltCoef":
                        description = "Filter coeficient for filtering result from catalyst diagnose run.";


                        break;
                    case "CatDiagCal.HlAirFlowMin":
                        description = "Indicates the minimum air flow to increment the high load timer.";


                        break;
                    case "CatDiagCal.AutHlAirFlowMin":
                        description = "For automatic cars! Indicates the minimum air flow to increment the high load timer.";


                        break;
                    case "CatDiagCal.Ox2ProcessTimerLim":
                        description = "Indicates the accumulated time, needed to process data, before the evaluation can be performed.";


                        break;
                    case "CatDiagCal.Ox2SignalLim":
                        description = "The Ox2 signal must not be below this limit to long. That indicates that there is no more oxygen buffered in the cat as a result of a not perfect lambda regulation.";


                        break;
                    case "CatDiagCal.Ox2SignalTimeLim":
                        description = "The Ox2 signal must not be below a limit more than this time. If so the cat diagnose is shut off until the OX2 signa is above limit again.";


                        break;
                    case "CatDiagCal.StableTimeLim":
                        description = "Indicates the time that the conditions except dutycycle and periodtime must be OK during a cal. time. (CatDiagCal.StableTimeLim)";


                        break;
                    case "O2SensFreqCal.PreNoComb1":
                        description = "O2 Sensor Freq Pre Cat. No of combustions before evaluation.";


                        break;
                    case "O2SensFreqCal.PreNoComb2":
                        description = "O2 Sensor Freq Pre Cat. No of combustions to trigg a new evaluation and the limit to set fault on the filtered combustion counter.";


                        break;
                    case "O2SensFreqCal.PreMinFlanks":
                        description = "O2 Sensor Pre Cat. Min no of sensor signal flanks for OK criteria";


                        break;
                    case "O2SensFreqCal.TimeToStartTest":
                        description = "Engine must have run this time before doing the test.";


                        break;
                    case "O2SensFreqCal.lambdaLim":
                        description = "Lambda integrator limit. Used for both +/- limit.";


                        break;
                    case "O2SensFreqCal.n_EngineMin":
                        description = "Minimum n_Engine during test. Resolution is 1.";


                        break;
                    case "O2SensFreqCal.n_EngineMax":
                        description = "Maximum n_Engine during test. Resolution is 1.";


                        break;
                    case "O2SensFreqCal.t_CondTrueTimer":
                        description = "Condition must be true for this calibrated time before diagnose starts. Resolution is 1 ms.";


                        break;
                    case "O2SensFreqCal.m_AirLowLimit":
                        description = "MAF.m_AirInletIgn must exceed this limit. Resolution is 1 mg/c.";


                        break;
                    case "O2SensFreqCal.m_AirHighLimit":
                        description = "MAF.m_AirInletIgn must not exceed this limit. Resolution is 1 mg/c.";


                        break;
                    case "O2SensFreqCal.PosDeltaLoadLim":
                        description = "Indicates the maximum positive delta in load signal to evaluate the sond.";


                        break;
                    case "O2SensFreqCal.NegDeltaLoadLim":
                        description = "Indicates the maximum negative delta in load signal to evaluate the sond.";


                        break;
                    case "O2SensFreqCal.m_CntUpAut":
                        description = "Load limit to increase counter. Automatic gearbox";


                        break;
                    case "O2SensFreqCal.m_CntDwAut":
                        description = "Load limit to decrease counter. Automatic gearbox";


                        break;
                    case "O2SensFreqCal.m_CntUpMan":
                        description = "Load limit to increase counter. Manual gearbox";


                        break;
                    case "O2SensFreqCal.m_CntDwMan":
                        description = "Load limit to decrease counter. Manual gearbox";


                        break;
                    case "O2SensFreqCal.LoadCntDown":
                        description = "Step at negative counting";


                        break;
                    case "O2SensFreqCal.LoadCntLim":
                        description = "One condition for freq diag to activated";


                        break;
                    case "O2SensFreqCal.FreqFltCo":
                        description = "Filter coeff for Low Pass filter on freq diag comustion counter";


                        break;
                    case "O2SensFreqCal.MaxLeanConstAdap":
                        description = "If the lean shift adaption reach this limit will a diagnostic fault be trigged.";


                        break;
                    case "O2SensFreqCal.MaxRichConstAdap":
                        description = "If the rich shift adaption reach this limit will a diagnostic fault be trigged.";


                        break;
                    case "O2SPreCal.T_O2SFrontTemp":
                        description = "O2 Sensor front Cat. Support points for start temperature Used for time to wait before test of dead sensor.";


                        break;
                    case "O2SPreCal.t_O2SFrontTime":
                        description = "O2 Sensor front Cat. Support points for start time. Used for time to wait before test of dead sensor.";


                        break;
                    case "O2SPreCal.u_ShortCut":
                        description = "The low limit for front sensor signal is shorted to heater ground.";


                        break;
                    case "O2SPreCal.t_LowToHeatErrorLim":
                        description = "If the front sensor signal is shorted to heater ground for more than this time ms error low signal is reported.";


                        break;
                    case "O2SensPostCal.t_LambdaLim":
                        description = "The min time that lambda closed loop must be active to allow special fuelcut and test of dead and low rear sensor signal.";


                        break;
                    case "O2SensPostCal.t_FCutFromStart":
                        description = "The min time since engine start to allow special fuelcut and test of dead rear sensor.";


                        break;
                    case "O2SensPostCal.t_FCutLim":
                        description = "The min time with active fuelcut to evaluate the rear sensor signal in the rear sensor dead test.";


                        break;
                    case "O2SensPostCal.U_DeadLim":
                        description = "The max voltage on the rear sensor when the dead sensor test is performed. Above or equal to this lim and fault is reported.";


                        break;
                    case "O2SensPostCal.t_HeatPostDeadLim":
                        description = "The time the post sensor heater must be active before the dead test is performed.";


                        break;
                    case "O2SensPostCal.T_EngLim":
                        description = "The min engine temp to allow rear sensor signal low test.";


                        break;
                    case "O2SensPostCal.t_LowToHeatErrorLim":
                        description = "If the rear sensor signal is shorted to heater ground for more than this time ms error low signal is reported.";


                        break;
                    case "O2SensPostCal.t_LowErrorLim":
                        description = "If the rear sensor signal is below a cal value (O2SensPostCal.U_LowLim) more than this time error low signal is reported.";


                        break;
                    case "O2SensPostCal.n_FCutLow":
                        description = "The min engine rpm allowed for special fuelcut for rear sensor diagnose when FCut is active.";


                        break;
                    case "O2SensPostCal.n_FCutHigh":
                        description = "The min engine rpm allowed for special fuelcut for rear sensor diagnose when FCut is not active.";


                        break;
                    case "O2SensPostCal.m_FCutLow":
                        description = "The min engine load allowed for special fuelcut for rear sensor diagnose when FCut is active.";


                        break;
                    case "O2SensPostCal.m_FCutHigh":
                        description = "This engine load must be exceeded to allow a new fuelcut.";


                        break;
                    case "O2SensPostCal.v_FCutLow":
                        description = "The min vehicle speed allowed for special fuelcut for rear sensor diagnose when FCut is active.";


                        break;
                    case "O2SensPostCal.v_FCutHigh":
                        description = "The min vehicle speed allowed for special fuelcut for rear sensor diagnose when FCut is not active.";


                        break;
                    case "O2SensPostCal.t_FCutPedRel":
                        description = "The time to wait after pedal has been released before the special fuel cut for rear sensor diagnose is allowed.";


                        break;
                    case "O2SensPostCal.LoadFiltCoef":
                        description = "Filter coefficient used for low-pass filtering of the load signal to create a delta load signal.";


                        break;
                    case "O2SensPostCal.PosDeltaLoadLim":
                        description = "The max increase in load allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.NegDeltaLoadLim":
                        description = "The max decrease in load allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.CoolTempLim":
                        description = "The min engine cool temp allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.RpmLo":
                        description = "The min engine rpm allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.RpmHi":
                        description = "The max engine rpm allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.LoadLo":
                        description = "The min engine load allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.LoadHi":
                        description = "The max engine load allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.FuelFacMin":
                        description = "The min Purge FuelFac allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.FuelFacMax":
                        description = "The max Purge FuelFac allowed for adap from rear 02 sensor.";


                        break;
                    case "O2SensPostCal.stableTimerLim":
                        description = "The stable timer must exceed this lim before adap from rear 02 sensor is allowed.";


                        break;
                    case "O2SensPostCal.u_ShortCut":
                        description = "The low limit for rear sensor signal is shorted to heater ground.";


                        break;
                    case "O2SensPostCal.LambdaMax":
                        description = "The maximum allowed Lambda.LambdaInt to run O2SensPost Low Diagnose. Resolution is 0.01.";


                        break;
                    case "O2SensPostCal.LambdaMin":
                        description = "The minimum allowed Lambda.LambdaInt to run O2SensPost Low Diagnose. Resolution is 0.01.";


                        break;
                    case "LongTermDiagCal.LongTermAddAdapLim":
                        description = "Long term fuel trim test. Set error if the variable AdpFuelAdap.AddFuelAdapt reaches +- this value.";


                        break;
                    case "DetSigDiagCal.n_CombHi":
                        description = "Number of combustions with constant high detect signal to set fault flag Missf.ST_Det1HighCount or Missf.ST_Det2HighCount to indicate for detect signal diagnoses to report fault when ignition is turned off.";


                        break;
                    case "DetSigDiagCal.n_LowOkLim":
                        description = "To report OK on Detect signal diagnose there need to be a certain nr of high detects per block. A block is DetSigDiagCal.n_CombDetBlock. The OK limit is between n_LowOkLim and n_HighOkLim. Low lim is the quote of : (nr of combust in a block * 2(nr of det signals)) / nr of cyl - a tolerans for transient filter.";


                        break;
                    case "DetSigDiagCal.n_HighOkLim":
                        description = "To report OK on Detect signal diagnose there need to be a certain nr of high detects per block. A block is DetSigDiagCal.n_CombDetBlock. The OK limit is between n_LowOkLim and n_HighOkLim. High lim is the quote of : (nr of combust in a block * 2(nr of det signals)) / nr of cyl";


                        break;
                    case "DetSigDiagCal.n_CombDetBlock":
                        description = "Number of combustions there is in a detect block.";


                        break;
                    case "BoosDiagCal.m_FaultDiff":
                        description = "Min differece between requested boost pressure and actual boost pressure to report fault during boost regulation.";


                        break;
                    case "BoosDiagCal.m_ThrErrDiff":
                        description = "Min differece between m_Request and m_AirInlet to report fault during throttle regulation.";


                        break;
                    case "BoosDiagCal.APCErrTime":
                        description = "Time until fault is reported in boost regulation. Resolution is 1 ms.";


                        break;
                    case "BoosDiagCal.ThrErrTime":
                        description = "Time until fault is reported in throttle regulation. Resolution is 1 ms.";


                        break;
                    case "BoosDiagCal.p_BefLimit":
                        description = "The test is performed if pressure before throttle is above this value. Resolution is 0.1 kPa.";


                        break;
                    case "BoosDiagCal.iPartLimit":
                        description = "The test is performed if the I-part of closed throttle regulation is below this value.";


                        break;
                    case "BoosDiagCal.m_OkMinReq":
                        description = "Minimum m_Request for OK test. Resolution is 1 mg/c.";


                        break;
                    case "BoosDiagCal.p_BefOkLimit":
                        description = "Maximum pressure before throttle to report OK. Resolution is 0.1 kPa.";


                        break;
                    case "BoosDiagCal.m_OkDiff":
                        description = "Maximum diff between m_Request and m_AirInlet to report OK. Resolution is 1 mg/c.";


                        break;
                    case "BoosDiagCal.APCOkTime":
                        description = "Time with fulfilled OK condition until OK is reported. Resolution is 1 ms.";


                        break;
                    case "BoosDiagCal.n_MinEngOk":
                        description = "Min RPM for OK test";


                        break;
                    case "BoosDiagCal.n_MaxEngOk":
                        description = "Max RPM for OK test";


                        break;
                    case "BoosDiagCal.IFacMaxAPC":
                        description = "If I-part in boost closed loop exceeds this value, fault can be reported. Resolution is 0.1 %.";


                        break;
                    case "BoosDiagCal.ErrMaxMReq":
                        description = "When APC error is detected the m_Request should be limited to this value. Resolution is 1 mg/c.";


                        break;
                    case "BoosDiagCal.m_ReqDiff":
                        description = "If m_Request delta (BoostProt.ReqDerivata100ms) is below this limit, APC faultindication is disabled.";


                        break;
                    case "BoosDiagCal.APCErrTime2":
                        description = "Time until fault is reported in boost regulation if m_Request delta (BoostProt.ReqDerivata100ms) recently has been below BoosDiagCal.m_ReqDiff. Resolution is 1 ms.";


                        break;
                    case "SpeedDiagCal.accumPeriod":
                        description = "During this period the nosignal time is accumulated. When this time elapses the nosignal time is reset.";


                        break;
                    case "SpeedDiagCal.loadLim":
                        description = "Lower load limit to detect no speed signal.";


                        break;
                    case "SpeedDiagCal.RPMLim":
                        description = "Lower RPM limit to detect no speed signal.";


                        break;
                    case "SpeedDiagCal.T_EngLim":
                        description = "Lower T_Engine limit to detect no speed signal.";


                        break;
                    case "IdleDiagCal.maxLowOffset":
                        description = "Maximum negative differece between engine RPM and nominal engine RPM.";


                        break;
                    case "IdleDiagCal.maxHighOffset":
                        description = "Maximum positive differece between engine RPM and nominal engine RPM.";


                        break;
                    case "IdleDiagCal.errTime":
                        description = "Time to report fault if idle speed out of limits.";


                        break;
                    case "IdleDiagCal.m_MaxAtLow":
                        description = "Max airmass to report LOW idle speed. Resolution is 1 mg/c.";


                        break;
                    case "IdleDiagCal.n_EngDiff":
                        description = "If the engine speed change more than +/- this limit during fault evaluation will the fault timer be cleared. Resolution is 1 rpm.";


                        break;
                    case "BypassCal.samples":
                        description = "Number of samples taken before analysis. These are taken each 10ms. Approximately 6 samples for each wave since this normally has a frequency of 14-18 Hz. NOTE: values over 128 are not allowed.";


                        break;
                    case "BypassCal.filtCoeff":
                        description = "Filter coefficient used for low-pass filtering of the pressure-before-throttle wave. Resolution is 1/1000.";


                        break;
                    case "BypassCal.okDrops":
                        description = "Number of times the manifold pressure must drop a calibrated amount to report OK.";


                        break;
                    case "BypassCal.okHigh":
                        description = "Manifold pressure much change from this offset above ambient air pressure to a lower value a number of times to report OK. Resolution is 0.1 kPa.";


                        break;
                    case "BypassCal.okLow":
                        description = "Manifold pressure much change from a higher value to this value (which is a relative offset to ambient air pressure) a number of times to report OK. Resolution is 0.1 kPa.";


                        break;
                    case "BypassCal.limAmp":
                        description = "Amplitude threshold for error. Resolution is 0.1 kPa.";


                        break;
                    case "BypassCal.intervals":
                        description = "Number of intervals the sample time should be divided into. NOTE: this should be a factor of the number of samples. Ex: samples=36 intervals=one of (2, 3, 4, 6, 9, 12, 18)";


                        break;
                    case "BypassCal.waitForSamp":
                        description = "Delay time before sampling when the preconditions have been fulfilled. Resolution is 1 ms.";


                        break;
                    case "BypassCal.okAmp":
                        description = "OK will be reported after 3 consecutive samples below this amplitude. Resolution is 0.1 kPa.";


                        break;
                    case "BypassCal.pAirDer":
                        description = "Initial manifold airpressure drop during 10ms. Resolution is 0.1 kPa.";


                        break;
                    case "BypassCal.releaseTime":
                        description = "Max time between inlet pressure drop and released pedal. Resolution is 1 ms.";


                        break;
                    case "BypassCal.p_MinBefStart":
                        description = "Min value for pressure before throttle at the time the test starts. NOTE: during the test, when the samples are taken, the pressure is allowed to drop below this limit. Resolution is 0.1 KPa.";


                        break;
                    case "QAirDiagCal.SampleInterval":
                        description = "Every xx sample taken there is a check that the meanvalue of the difference between HFM signal and simulated HFM signal is not above lim. The nr of samples between these checks are decided in this data.";


                        break;
                    case "QAirDiagCal.QuickChangeLim":
                        description = "Every xx sample taken there is a check that the meanvalue of the difference between HFM signal and simulated HFM signal is not above this lim.";


                        break;
                    case "QAirDiagCal.hiWindowLim":
                        description = "Above this lim the hi meanvalue is calculated.";


                        break;
                    case "QAirDiagCal.errorLimB":
                        description = "Min diff when muladap is less than lim.";


                        break;
                    case "QAirDiagCal.errorLimD":
                        description = "Max diff when muladap is more than lim";


                        break;
                    case "QAirDiagCal.errorLimE":
                        description = "Max diff when muladap is between limits.";


                        break;
                    case "QAirDiagCal.errorLimF":
                        description = "Min diff when muladap is between limits.";


                        break;
                    case "QAirDiagCal.adapLimA":
                        description = "Min muladap for error report.";


                        break;
                    case "QAirDiagCal.adapLimC":
                        description = "Max muladap for error report.";


                        break;
                    case "QAirDiagCal.devPInlet":
                        description = "Max pAirinlet difference for steady state. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.devAThrottle":
                        description = "Max throttle area difference for steady state. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.maxLoad":
                        description = "Max pAirinlet during test. Resolution is 0.1 kPa.";


                        break;
                    case "QAirDiagCal.minLoad":
                        description = "Min pAirinlet during test. Resolution is 0.1 kPa.";


                        break;
                    case "QAirDiagCal.firstSteady":
                        description = "Airmass steady state time before start of test when preconditions fulfilled. Resolution is 1 sec.";


                        break;
                    case "QAirDiagCal.bypassSteady":
                        description = "Airmass steady state time before start of test when preconditions fulfilled. Resolution is 1 sec.";


                        break;
                    case "QAirDiagCal.minRPM":
                        description = "Min RPM for diagnose. Resolution is 1 rpm.";


                        break;
                    case "QAirDiagCal.maxRPM":
                        description = "Max RPM for diagnose. Resolution is 1 rpm.";


                        break;
                    case "QAirDiagCal.T_MinForTest":
                        description = "Minimum engine temp for test. Resolution is 1 °C.";


                        break;
                    case "QAirDiagCal.T_MaxForTest":
                        description = "Maximum engine temp for test. Resolution is 1 °C.";


                        break;
                    case "QAirDiagCal.maxPDiff":
                        description = "Max allowed quote between pbefthrottle and pinlet for running the diagnose. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.minPDiff":
                        description = "Min allowed quote between pbefthrottle and pinlet for running the diagnose. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.maxArea":
                        description = "Max allowed quote between pbefthrottle and pinlet for running the diagnose. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.minArea":
                        description = "Min allowed quote between pbefthrottle and pinlet for running the diagnose. Resolution is 1 %.";


                        break;
                    case "QAirDiagCal.timeToStart":
                        description = "Accum time that vehicle speed must be above AirmDiagCal.speedToStart before diagnose runs. Resolution is 1 ms.";


                        break;
                    case "QAirDiagCal.speedToStart":
                        description = "Vehicle speed must be above this lim for a cal time (AirmDiagCal.timeToStart) before diagnose runs. Resolution is 0.1 km/h.";


                        break;
                    case "QAirDiagCal.devRPMmin":
                        description = "Minimum RPM for check performed by device driver.";


                        break;
                    case "QAirDiagCal.devRPMtime":
                        description = "Minimum RPM for device driver check must last for this time until the check is done. Resolution is 1 ms.";


                        break;
                    case "QAirDiagCal.devFaultTime":
                        description = "Faults reported from device driver must last this time until fault is reported. Resolution is 1 ms.";


                        break;
                    case "QAirDiagCal.n_samplesForEval":
                        description = "Nr of samples taken of the diff signal between calc. airmass from throttle and the HFM signal. When these samples have been taken, the meanvalue of the diff signal is calculated and evaluated.";


                        break;
                    case "QAirDiagCal.AdapLimLambdaOLoop":
                        description = "Mul fuel adap limit used to determine when to use the special lambda open loop limit. When the mul fuel adap is negative that indicated a faulty MAF. To not disable lambda closed cloop to easy because of the faulty HFM signal the special lambda open loop limit is used.";


                        break;
                    case "QAirDiagCal.AdapLimUseFAdap":
                        description = "Mul fuel adap limit used to determine when to use the multiplicative fuel adap when fuel is in open loop and the adaption is negative.";


                        break;
                    case "O2HeatPreCal.I_LowLim":
                        description = "Diagnostic limit for the front sond heat current. If the current is below this this limit will a fault be set. Resolution is 1 mA.";


                        break;
                    case "O2HeatPreCal.I_HighLim":
                        description = "Diagnostic limit for the front sond heat current. If the current is abowe this this limit will a fault be set. Resolution is 1 mA.";


                        break;
                    case "O2HeatPostCal.I_LowLim":
                        description = "Diagnostic limit for the rear sond heat current. If the current is below this this limit will a fault be set. Resolution is 1 mA.";


                        break;
                    case "O2HeatPostCal.I_HighLim":
                        description = "Diagnostic limit for the rear sond heat current. If the current is abowe this this limit will a fault be set. Resolution is 1 mA.";


                        break;
                    case "KnockDiagCal.nrOfCombust":
                        description = "The number of consecutive combustions that the In.U_KnockDiag should be below limit for reporting error.";


                        break;
                    case "KnockDiagCal.errorLevel":
                        description = "The limit that the In.U_KnockDiag signal must be below for reporting error. Resolution is 1 mV.";


                        break;
                    case "BrLghtDiagCal.v_LowLim":
                        description = "Vehicle speed low limit for diag. Resolution is 0.1 km/h.";


                        break;
                    case "BrLghtDiagCal.v_HighLim":
                        description = "Vehicle speed high limit for diag. Resolution is 0.1 km/h.";


                        break;
                    case "BrLghtDiagCal.t_LowLim":
                        description = "Low limit timer for diag. Resolution is 1 s.";


                        break;
                    case "BrLghtDiagCal.t_HighLim":
                        description = "High limit timer for diag. Resolution is 1 s.";


                        break;
                    case "SAIDiagCal.IntLim":
                        description = "The area for the Lambda integrator during Lean Clamp is used in diagnose. This is the limit where fault is set. Resolution is 1 rpm.";


                        break;
                    case "SAIDiagCal.n_EngLow":
                        description = "Rpm lower limit to allow intrusive SAI test. First of two windows. Resolution is 1 rpm.";


                        break;
                    case "SAIDiagCal.n_EngHigh":
                        description = "Rpm upper limit to allow intrusive SAI test. First of two windows. Resolution is 1 rpm.";


                        break;
                    case "SAIDiagCal.m_AirLow":
                        description = "Load lower limit to allow intrusive SAI test. First of two windows. Resolution is 1 mg/c.";


                        break;
                    case "SAIDiagCal.m_AirHigh":
                        description = "Load upper limit to allow intrusive SAI test. First of two windows. Resolution is 1 mg/c.";


                        break;
                    case "SAIDiagCal.t_PreCondOK":
                        description = "Time that either of the two windows in intrusive diag should be \"TRUE\" before Diag is proceeding. Resolution is 1 ms.";


                        break;
                    case "SAIDiagCal.t_IntTestDura":
                        description = "Time that intrusive diag is forcing SAI pump and valve before evaluation is done. Resolution is 1 ms.";


                        break;
                    case "SAIDiagCal.IntrIntLimit":
                        description = "Diag limit for intrusive SAI test. Resolution is 0.01 %.";


                        break;
                    case "SAIDiagCal.n_EngLowMain":
                        description = "Lower window of the engine speed to enable the main SAI diagnos";


                        break;
                    case "SAIDiagCal.n_EngHighMain":
                        description = "Higher window of the engine speed to enable the main SAI diagnos";


                        break;
                    case "SAIDiagCal.m_AirLowMain":
                        description = "Lower window of the load to enable the main SAI diagnos";


                        break;
                    case "SAIDiagCal.m_AirHighMain":
                        description = "Higher window of the load to enable the main SAI diagnos";


                        break;
                    case "SAIDiagCal.LambdaHigh":
                        description = "Higher window of the lambdaintegrator to enable intrusive SAI diagnos";


                        break;
                    case "SAIDiagCal.LambdaLow":
                        description = "Lower window of the lambdaintegrator to enable intrusive SAI diagnos";


                        break;
                    case "SAIDiagCal.v_Vehicle":
                        description = "Vehicle speed must be equal or greater that this parameter to enable the intrusive SAI diagnos";


                        break;
                    case "SAIDiagCal.T_Eng":
                        description = "Temperature that must be exceeded to enable the intrusive SAI diagnos";


                        break;
                    case "SAIDiagCal.N_CombStart":
                        description = "The number of combustions after hardware check has reported ok that the measurement of the \"Area of the curve\" will begin";


                        break;
                    case "SAIDiagCal.N_CombDuration":
                        description = "The number of combustions that will be measurement";


                        break;
                    case "SAIDiagCal.m_AirSP":
                        description = "Support pointers for reporting fault on intrusive SAI diagnos";


                        break;
                    case "SAIDiagCal.m_AirTab":
                        description = "Table for deciding if the difference in lambdaintegrator is large enough to report fault";


                        break;
                    case "SAIDiagCal.CheckPedal":
                        description = "Check if pedal is relased in main and intrusive test";


                        break;
                    case "SAIDiagCal.WSHLambdaHigh":
                        description = "Upper limit of the lambdaintegrator to enable workshop diagnose of SAO";


                        break;
                    case "SAIDiagCal.WSHLambdaLow":
                        description = "Lower limit of the lambdaintegrator to enable workshop diagnose of SAI";


                        break;
                    case "SAIDiagCal.T_WSHEng":
                        description = "Temperature that must be exceeded to enable workshop diagnose of SAI";


                        break;
                    case "SAIDiagCal.n_WSHEngLow":
                        description = "Rpm lower limit to allow workshop diagnose of SAI. Resolution is 1 rpm.";


                        break;
                    case "SAIDiagCal.n_WSHEngHigh":
                        description = "Rpm upper limit to allow workshop diagnose of SAI. Resolution is 1 rpm.";


                        break;
                    case "SAIDiagCal.m_WSHAirLow":
                        description = "Load lower limit to allow workshop diagnose of SAI. Resolution is 1 mg/c.";


                        break;
                    case "SAIDiagCal.m_WSHAirHigh":
                        description = "Load upper limit to allow workshop diagnose of SAI. Resolution is 1 mg/c.";


                        break;
                    case "SAIDiagCal.t_WSPreCondOK":
                        description = "Time that conditions in workshop diagnose of SAI should be \"TRUE\" before Diag is proceeding. Resolution is 1 ms.";


                        break;
                    case "SAIDiagCal.t_WSTestDura":
                        description = "Time that workshop diagnose of SAI diag is runnig SAI pump before evaluation is done. Resolution is 1 ms.";


                        break;
                    case "SAIDiagCal.m_WSHAirTab1":
                        description = "Table of lambda integartor differences as a function of average load during test. If lambdadiff is less than this table SAI pump is not working";


                        break;
                    case "SAIDiagCal.m_WSHAirTab2":
                        description = "Table of lambda integartor differences as a function of average load during test. If lambdadiff is less than this table SAI pump is working with reduced capacity";


                        break;
                    case "SAIDiagCal.m_WSHAirSP":
                        description = "Support points for Work Shop Test of SAI";


                        break;
                    case "SAIDiagCal.t_IntRepeat":
                        description = "Minimum time between two following intrusive tests. Resolution is 1 s.";


                        break;
                    case "SAIDiagCal.n_IntAborted":
                        description = "Max allowed number of aborted intrusive test°s. If more, the sai diagnose is shut of and will not start before next power up.";


                        break;
                    case "SAIDiagCal.m_PosDiff":
                        description = "Max positive load diff from obdSAI.m_PreCondition during intrusive test";


                        break;
                    case "SAIDiagCal.m_NegDiff":
                        description = "Max negative load diff from obdSAI.m_PreCondition during intrusive test";


                        break;
                    case "SAIDiagCal.n_PosDiff":
                        description = "Max positive engine speed diff from obdSAI.n_PreCondition during intrusive test";


                        break;
                    case "SAIDiagCal.n_NegDiff":
                        description = "Max negative engine speed diff from obdSAI.n_PreCondition during intrusive test";


                        break;
                    case "SAIDiagCal.v_MainHasFailed":
                        description = "Vehicle speed must be equal or greater that this parameter to enablethe intrusive SAI diagnos when main test has failed. This due to be able tofind fault on a CVS run. The normal limit is SAIDiagCal.v_Vehicle and thatis vaild until main test has failed. UNIT:km/h. Resolution is .1 km/h.";


                        break;
                    case "nEngineDiagCal.U_BattLim":
                        description = "Power dip limit to decide if cranking or not.";


                        break;
                    case "nEngineDiagCal.p_AirInletLim":
                        description = "Underpressure limit in inlet during cranking.";


                        break;
                    case "obdpTank.ST_preCondRatOK":
                        description = "When all preconditions is fullfilled for rationality test, this is set. It will enable the fuel pressure sensor signal filter. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.ST_preCondElOK":
                        description = "When all preconditions is fullfilled for device check, this is set. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.n_BrakeChanges":
                        description = "Each time brake pedal signal is changed, this variable this be increased. Whenvehicle speed > 0 it will be cleared. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.ST_ReportedError":
                        description = "Show the current reported fault in pTank0 - no error detected 5 - PTANK LOW 6 - PTANK HI 7 - PTANK RANGE. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.ST_TestDone":
                        description = "When test either reported ok or fault this variable will be set. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.p_MeasurementResult":
                        description = "Result from fuel tank pressure measurement. It can be :0 OKAY1 NOTOK4 INTERRUPTED. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.Status":
                        description = "pTank diagnose status :0 = Not running / running but not finished1 = Ok reportxxxx = Fault report. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.p_FuelTankFilt":
                        description = "Low pass filtered fuel tank pressure signal. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.p_FuelTankDiff":
                        description = "Diff between ActualIn.p_FuelTank and obdpTank.p_FuelTankFilt each backgroundloop. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.n_FlankShift":
                        description = "When (obdpTank.p_MaxTank - obdpTank.p_MinTank) > pTankDiagCal.maxPressureDiffthis counter is increased. As long this counter is below pTankDiagCal.maxNrOfFlankShiftspTankMeasurement check reports ok else fault. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.p_MaxTank":
                        description = "This variable is used to get the highest pressure during flank shift. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTank.p_MinTank":
                        description = "This variable is used to get the lowest pressure during flank shift. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTankAdap.ST_AdapDone":
                        description = "Shows status of the adaption,1 ADAPTION_SAVED2 ADAPTION_REPORTED. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTankAdap.ST_FirstTimeAfterPowerUp":
                        description = "When ECU boots this variable will be set to 1 and cleared at ignition. Resolution is 1. Interval is background and when ECU boots.";


                        break;
                    case "obdpTankAdap.p_NewAdap":
                        description = "This variable shows the adapted fuel tank pressure value. It will be put intoOBDAdap.p_FuelTankComp. Resolution is 1. Interval is background.";


                        break;
                    case "obdpTankAdap.Status":
                        description = "pTankAdap diagnose status :0 = Not running / running but not finished1 = Ok reportxxxx = Fault report. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.StartFilt":
                        description = "Is set at ignition off so next start will force low pass filter to go onstart parameters. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.ST_TestDone":
                        description = "Show when test has finished ok or faulty. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.ST_ActivityCheckOK":
                        description = "When fuel level diff from start is bigger than FuelLevelCal.V_ActivityCheckthis variable is set. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.ST_CheckDone":
                        description = "10 s after start and if fuel level is 10 l more than last reference (probably filled fuel during ignition off). Update reference with current fuel volume else use saved reference. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.Distance":
                        description = "Driving distance since the fuel level was last checked. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.Decrease":
                        description = "Show the volume that has fuel level has decreased when driving distance isbigger than calib. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.V_FuelTankFilt":
                        description = "Low pass filtered ActualIn.V_FuelTank. Active when vehicle speed is above 40.0 km/h. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.V_FuelTankRef":
                        description = "Reference for low pass filter of ActualIn.V_FuelTank. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.V_Diff":
                        description = "Diff between two consecutive volfuellevel readings. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.V_Max":
                        description = "Max volfuellevel readings. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.V_Prev":
                        description = "Previous volfuellevel reading. Resolution is 0,1. Interval is background.";


                        break;
                    case "obdFuelLevel.DistanceFromStart":
                        description = "Driving distance from start. Resolution is 1. Interval is background.";


                        break;
                    case "obdFuelLevel.DistanceFromFault":
                        description = "When a fault is set on Fuel Level diagnose, this distance counter starts because if there is a fault, limphome value is set to 50L and then the Evap leakage test starts. If the real volume is full, fuel covers the purge tubes and it's impossible to suck the system down with purge and BIG_LEAK will be reported. Therefor a distance of 25 kilometers is required before Evap diagnose can report BIG_LEAK. Resolution is 1. Interval is background.";


                        break;
                    case "ADC.ST_Error:1":
                        description = "592 and 339 don't read same value of pedal sensor 1. Interval is every 40 msec.";


                        break;
                    case "ADC2.ST_Error:1":
                        description = "592 and 339 don't read same value of pedal sensor 1. Interval is every 40 msec.";


                        break;
                    case "Ser339.ST_Error:1":
                        description = "339 have detected serial communication fault during a longer period (debouncing time). Interval is every 40 msec.";


                        break;
                    case "Ser339_2.ST_Error:1":
                        description = "339 have detected serial communication fault during a longer period (debouncing time). Interval is every 40 msec.";


                        break;
                    case "PowInh.ST_Error:1":
                        description = "Power stage inhibit test faulty.";


                        break;
                    case "PowInh.ST_HBridgeOff:1":
                        description = "Indicate if H-bridge are turned off during inhibit test. ON = H-bridge turned off OFF = H-bridge not turned off";


                        break;
                    case "PowInh.ST_PwmLimEnable:1":
                        description = "ON = PWM limitation requested OFF = PWM limitation NOT requested";


                        break;
                    case "PowInh.ST_ClosedThrReq:1":
                        description = "ON = Closed throttle requested (Out.AD_Throttle = 0) OFF = Closed throttle not requested";


                        break;
                    case "PowInh.ST_TestPhase":
                        description = "Test phase: 0 = Test has NOT started yet. Engine still running 1 = H-bridge inhibited but measurement not started 2 = Measuring with H-bridge inhibited 3 = H-bridge still inhibited and Out.AD_Throttle = 0 4 = H-bridge enabled but measurement not started 5 = Measuring with H-bridge enabled 6 = Evaluation of measurements 7 = Measurement ended or interrupted";


                        break;
                    case "CurrToHi.ST_Error:1":
                        description = "Current to high in mechanical limphome.";


                        break;
                    case "TqToHi.ST_Error:1":
                        description = "Airmass have been above allowed limit for a longer period during limphome.";


                        break;
                    case "CheckSum.ST_Error:1":
                        description = "Checksum of pedal or area map faulty.";


                        break;
                    case "MonStim.ST_Error:1":
                        description = "Monitor of 592 check.";


                        break;
                    case "MonStim.Carry":
                        description = "Indicate to next function if carry are equal with 1. ";


                        break;
                    case "MonStim.State":
                        description = "Indicate which modules who are alowed to run. 0 = 10 msec. routines. 1 = 40 msec. routines. 2 = 50 msec. routines. 3 = 100 msec. routines. 4 = Time to update final result.";


                        break;
                    case "MonStim.Calc":
                        description = "Calculation value for monitor check of 339 software.";


                        break;
                    case "MonStim.EndResult":
                        description = "Final calculation value for monitor check of 339 software.";


                        break;
                    case "MonStim.Stimulation":
                        description = "Stimulation value from 592 for monitor check of 339 software.";


                        break;
                    case "MonStim.S":
                        description = "Calculation value after each modul to check.";


                        break;
                    case "SafetySw.ST_Error:1":
                        description = "Pedal released but throttle above switchpoint. Fault nr 33.";


                        break;
                    case "SafetySw.ST_LimError:1":
                        description = "Throttle request > max allowed throttle request when pedal is released. When this condition is true will the max allowed throttle request be used instead of the normal throttle request (No limphome for this fault). Fault nr 32.";


                        break;
                    case "Tamper.ST_Error":
                        description = "If fuel cut should been off depending on tampering protection.";


                        break;
                    case "ComData.Fr592StatusCCL":
                        description = "Bit 7 in this byte indicates if the throttle is in limphome mode.";


                        break;
                    case "ComData.Fr592MonStim":
                        description = "TBD";


                        break;
                    case "ComData.Fr592MonAnsw":
                        description = "TBD";


                        break;
                    case "ComData.Fr592Failure":
                        description = "Error status from 592:";


                        break;
                    case "ComData.To592MonStim":
                        description = "TBD";


                        break;
                    case "ComData.To592MonAnsw":
                        description = "TBD";


                        break;
                    case "ComData.To592Reaction":
                        description = "Commands to 592: bit 7 - Turn off throttle bit 6 - Turn on throttle bit 5 bit 4 - Clear errors";


                        break;
                    case "ComData.Fr592RamData1":
                        description = "Data read from 592 ram, specified by the address in \"ComProt.To592RamAdr1\".";


                        break;
                    case "ComData.Fr592RamData2":
                        description = "Data read from 592 ram, specified by the address in \"ComProt.To592RamAdr2\".";


                        break;
                    case "ComData.Fr592RamWord":
                        description = "Data word read from 592 ram, specified by the address in \"ComProt.To592RamAdr1\" and \"ComProt.To592RamAdr2\" ComProt.Fr592RamWord = ComProt.Fr592RamData1*256 + ComProt.Fr592RamData2 ";


                        break;
                    case "ComData.To592RamAdr1":
                        description = "This data include the address that should be read from the 592 ram. The result will be copied to \"ComProt.Fr592RamData1\".";


                        break;
                    case "ComData.To592RamAdr2":
                        description = "This data include the address that should be read from the 592 ram. The result will be copied to \"ComProt.Fr592RamData2\".";


                        break;
                    case "ThrErr.DemandStatus":
                        description = "Status information if ordinary throttle demand value to 592 should been used. 0 = Normal demand value are used. 1 = Demand value equal with 0, H-bridge disabled and limphome spring released. 3 = Demand value equal with 0, H-bridge enabled and limphome spring released.";


                        break;
                    case "ThrErr.ST_PwmLimOrdered":
                        description = "Indicate to PWM limit master that PWM limitation is ordered by Thrlimp.";


                        break;
                    case "ThrErr.ST_FuelCutOrdered":
                        description = "Fuel cut ordered by ThrLimp to make the system safe. ";


                        break;
                    case "ThrErr.ST_CCNotAllowed":
                        description = "Indicate to Cruise controller that fault #27 is active (CC off error)";


                        break;
                    case "ThrErr.ST_WiperCleaner":
                        description = "Flag to indicate a positive throttle sensor sum error. This flag is used to trigg off the WiperCleaner function. If 592 indicate throttle sensors sum fault in this case long debouncing time shall be used. See description for ThrErrCal.t_ThrSumInfo and ThrErrCal.t_ThrSumLimp.";


                        break;
                    case "ThrErr2.ST_WiperCleaner":
                        description = "Flag to indicate a positive throttle sensor sum error. This flag is used to trigg off the WiperCleaner function. If 592 indicate throttle sensors sum fault in this case long debouncing time shall be used. See description for ThrErr2Cal.t_ThrSumInfo and ThrErr2Cal.t_ThrSumLimp.";


                        break;
                    case "ThrErrProt.PedSensLim:1":
                        description = "Pedal sensor limit fault . Error 1.";


                        break;
                    case "ThrErrProt.Ped2SensLim:1":
                        description = "Pedal sensor limit fault. Error 2.";


                        break;
                    case "ThrErrProt.PedSensSum:1":
                        description = "Pedal sensors sum fault. Error 3.";


                        break;
                    case "ThrErrProt.AdapSumErr:1":
                        description = "Pedal sensors sum exceeds adapted sum. Error 4.";


                        break;
                    case "ThrErrProt.PedMutAff:1":
                        description = "Mutal pedal sensor signal affection. Error 5.";


                        break;
                    case "ThrErrProt.DkSensLim:1":
                        description = "Throttle sensor D1 out of spec. Error 7.";


                        break;
                    case "ThrErrProt.DkSens2Lim:1":
                        description = "Throttle sensor D2 out of spec. Error 8.";


                        break;
                    case "ThrErrProt.ThrSensSum:1":
                        description = "Throttle sensors sum fault. Error 9.";


                        break;
                    case "ThrErrProt.FullPWMClose:1":
                        description = "100 % PWM in closing direction. Error 15.";


                        break;
                    case "ThrErrProt.FullPWMOpen:1":
                        description = "100 % PWM in opening direction. Error 14.";


                        break;
                    case "ThrErrProt.FullPWMToLH:1":
                        description = "100 % PWM in opening direction. Error 35 or 39.";


                        break;
                    case "ThrErrProt.P2SwitchErr:1":
                        description = "Pedal sensor P2 switching faulty. Error 6.";


                        break;
                    case "ThrErrProt.StackOver:1":
                        description = "Stack overrun. Error 11.";


                        break;
                    case "ThrErrProt.ROMCheck:1":
                        description = "ROM check failed. Error 12.";


                        break;
                    case "ThrErrProt.SerCom:1":
                        description = "Error in the serial communication 339 -> 592. Error 16.";


                        break;
                    case "ThrErrProt.SwMonOf339Fail:1":
                        description = "Software monitoring of 339 failed. Error 17.";


                        break;
                    case "ThrErrProt.SpringForce:1":
                        description = "No return spring force. Error 18.";


                        break;
                    case "ThrErrProt.RomErrCounter":
                        description = "ROM error in 592 must been detected 4 times before error in 339 is set. This counter are used for this.";


                        break;
                    case "ThrErrProt.StackErrCounter":
                        description = "Stack overflow error in 592 must been detected 4 times before error in 339 is set. This counter are used for this.";


                        break;
                    case "ThrErrProt.ST_ThrStartup":
                        description = "Bit 7 in this byte indicates if the throttle is in limphome mode.";


                        break;
                    case "ThrErrProt.ST_LimpHome":
                        description = "Bit 7 in this byte indicates if the throttle is in limphome mode.";


                        break;
                    case "ThrErrProt.TimerDetLimp":
                        description = "Timer for total time system have detect 100 % PWM in opening direction. RESULOTION: 1 sec.";


                        break;
                    case "ThrErrProt.ST_LimSpr":
                        description = "Detection of released limphome spring. ON = Spring relesead. OFF = Spring not released.";


                        break;
                    case "ThrErrProt.PedAdapStored":
                        description = "Indicate that the pedal adaption fault is valid. The 592 have stored a valid adaption in the 339.";


                        break;
                    case "ThrErrProt.AD_OldAccPed":
                        description = "In.AD_PedalPot1 is stored to be used in the ADC comparison test delayed 20ms.";


                        break;
                    case "ThrErrProt.ST_DKShortCut":
                        description = "Detection of short cut to +12V in H-bridge. ON = Shortcut OFF = No shortcut.";


                        break;
                    case "ThrErrProt.AD_ThrotDiff":
                        description = "The difference between the actual and requested throttle position.";


                        break;
                    case "ThrErrProt.t_PWMClose70":
                        description = "Filter time used";


                        break;
                    case "ThrErrProt.t_PWMClose60":
                        description = "Filter time used";


                        break;
                    case "ThrErrProt.t_PWMClose50":
                        description = "Filter time used";


                        break;
                    case "ThrErrProt.t_PWMClose40":
                        description = "Filter time used";


                        break;
                    case "ThrErrProt.t_PWMClose30":
                        description = "Filter time used";


                        break;
                    case "ThrErrProt.m_AirFreeze":
                        description = "Frozen In.m_AirInlet value used to detect jerking engine. If (ThrErrCal.m_AirMaxDelta > ThrErrCal.m_AirDeltaLim) or (ThrErrCal.m_AirMinDelta < -ThrErrCal.m_AirDeltaLim) it is possible that the engine is jerking. Resolution is 1.";


                        break;
                    case "ThrErrProt.m_AirMaxDelta":
                        description = "Maximum airmass delta during evaluation time. Resolution is 1.";


                        break;
                    case "ThrErrProt.m_AirMinDelta":
                        description = "Minimum airmass delta during evaluation time. Resolution is 1.";


                        break;
                    case "ThrErrProt.AD_ThrP1Fr":
                        description = "Frozen In.AD_ThrottlePot1 value used to detect fault in throttle potentimeter 1.. Resolution is 1.";


                        break;
                    case "ThrErrProt.AD_ThrP1MaxDelta":
                        description = "Maximum throttle position 1 delta during evaluation time. Resolution is 1.";


                        break;
                    case "ThrErrProt.AD_ThrP1MinDelta":
                        description = "Minimum throttle position 1 delta during evaluation time. Resolution is 1.";


                        break;
                    case "ThrErrProt.OutAD_ThrFr":
                        description = "Frozen Out.AD_Throttle value used to detect fault in throttle potentimeter 1.. Resolution is 1.";


                        break;
                    case "ThrErrProt.Pot1DiagCnt":
                        description = "Diagnose counter for error tracking of throttle potentimeter 1 ( In.AD_ThrottlePot1 ). 0 - Engine speed limit active 1 - Engine speed OK 2 - Out.AD_Throttle is stable 3 - Steady state within specified time 4 - The actual airmass is close enough to requested airmass 5 - Throttle pos 1 delta out of boundary 6 - Engine jerking, (airmass change) 7 - Fault must be in throttle pos 1, No other faults in detected by wiper cleaner function and no fault in MAF sensor and no fault on throttle. Resolution is 1.";


                        break;
                    case "ThrErrProt.t_msFreeze":
                        description = "Frozen time. Resolution is 1 ms.";


                        break;
                    case "ThrErr2Prot.PedSensSum:1":
                        description = "Pedal sensors sum fault. Error 3.";


                        break;
                    case "ThrErr2Prot.AdapSumErr:1":
                        description = "Pedal sensors sum exceeds adapted sum. Error 4.";


                        break;
                    case "ThrErr2Prot.PedMutAff:1":
                        description = "Mutal pedal sensor signal affection. Error 5.";


                        break;
                    case "ThrErr2Prot.ThrSensSum:1":
                        description = "Throttle sensors sum fault. Error 9.";


                        break;
                    case "ThrErr2Prot.StackOver:1":
                        description = "Stack overrun. Error 11.";


                        break;
                    case "ThrErr2Prot.ROMCheck:1":
                        description = "ROM check failed. Error 12.";


                        break;
                    case "ThrErr2Prot.RomErrCounter":
                        description = "ROM error in 592 must been detected 4 times before error in 339 is set. This counter are used for this.";


                        break;
                    case "ThrErr2Prot.StackErrCounter":
                        description = "Stack overflow error in 592 must been detected 4 times before error in 339 is set. This counter are used for this.";


                        break;
                    case "ThrErr2Prot.ST_LimpHome":
                        description = "Bit 7 in this byte indicates if the throttle is in limphome mode.";


                        break;
                    case "PowInhProt.ST_NewTest:1":
                        description = "Indicate if new power stage inhibit test is allowed. ON = Allowed OFF = Not allowed";


                        break;
                    case "PowInhProt.N_Readings":
                        description = "The number of readings of current during one test when H-bridge is inhibited.";


                        break;
                    case "PowInhProt.N_Readings2":
                        description = "the number of readings of current during one test when H-bridge is NOT inhibited.";


                        break;
                    case "PowInhProt.I_Sum":
                        description = "The sum of readings of current during one test when H-bridge is inhibited.";


                        break;
                    case "PowInhProt.I_Sum2":
                        description = "The sum of readings of current during one test when H-bridge is NOT inhibited.";


                        break;
                    case "PowInhProt.I_Average":
                        description = "The average current during one test when H-bridge is inhibited.";


                        break;
                    case "PowInhProt.I_Average2":
                        description = "The average current during one test when H-bridge is NOT inhibited.";


                        break;
                    case "TqToHiProt.Q_AirInletMax":
                        description = "Max allowed Q_AirInlet when system is in limphome. Resolution is 0.01 g/s.";


                        break;
                    case "Ser339Prot.SerialStatus":
                        description = "Status byte for serial communication to 592. 0 = Problem with both rx & tx. Current tx status is actually unknown, but there was a problem before rx failed. 1 = Problem with tx. 2 = Problem with rx, tx status unknown. 3 = OK.";


                        break;
                    case "PowInhAdap.ErrCounter":
                        description = "Number of power stage inhibit test fault, without any correct test.";


                        break;
                    case "ThrLimpAdap.ST_ThrottleLimpHome":
                        description = "Adaptive storage for the actual limphome condition.";


                        break;
                    case "ThrLimpAdap.ST_PWMClose30":
                        description = "Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 30 (AD value).";


                        break;
                    case "ThrLimpAdap.ST_PWMClose40":
                        description = "Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 40 (AD value).";


                        break;
                    case "ThrLimpAdap.ST_PWMClose50":
                        description = "Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 50 (AD value).";


                        break;
                    case "ThrLimpAdap.ST_PWMClose60":
                        description = "Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 60 (AD value).";


                        break;
                    case "ThrLimpAdap.ST_PWMClose70":
                        description = "Adaptive storage for detection of difference between actual and requested throttle position during 500 ms is larger than 70 (AD value).";


                        break;
                    case "ThrLimpAdap.n_ThrPotClean":
                        description = "This variable is counting the number of times that the throttle potentiometer Wiper Cleaner function has been activated.";


                        break;
                    case "ThrLimpAdap.n_ThrPot1Fault":
                        description = "This variable is counting the number of times that the throttle potentiometer 1 control routine detects fault on ActualIn.AD_ThrottlePot1. .";


                        break;
                    case "ThrErrCal.PedalDeltaLimit":
                        description = "Pedal derivata limit for choise time before 339 indicate error. Resolution is 0.1.";


                        break;
                    case "ThrErrCal.ThrDeltaLimit":
                        description = "Throttle derivta limit for choise time before 339 indicate error. Resolution is 0.1.";


                        break;
                    case "ThrErrCal.PedSensLim":
                        description = "Pedal sensor limit fault. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.Ped2SensLim":
                        description = "Pedal sensor 2 limit fault. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.PedSensSum":
                        description = "Pedal sensors sum fault. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.AdapSumErr":
                        description = "Pedal sensors sum exceeds adapted sum. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.PedMutAff":
                        description = "Mutal pedal sensor signal affection. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.P2SwitchErr":
                        description = "Pedal sensor P2 switching faulty. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.DkSensLim":
                        description = "Throttle sensor D1 out of spec. Time 592 detect error before 339 indicate error. First data are used if AD_ThrottleActual are above ThrADLimit, second data if AD_ThrottleActual are above ThrADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.DkSens2Lim":
                        description = "Throttle sensor D2 out of spec. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.ThrSensSum":
                        description = "Throttle sensors sum fault. Time 592 detect error before 339 indicate error. First data are used if AD_ThrottleActual are above ThrADLimit, second data if AD_ThrottleActual are above ThrADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.FullPWMClose":
                        description = "100 % PWM in closing direction. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.FullPWMOpen":
                        description = "100 % PWM in opening direction. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.StackOver":
                        description = "Stack overrun. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.ROMCheck":
                        description = "ROM check failed. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.SerCom":
                        description = "Serial communication failed. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.SwMon339":
                        description = "Software monitoring of 339 failed. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.SpringForce":
                        description = "No return spring force. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.I_Lim100PerOpen":
                        description = "If current are belove this value when error 100 % PWM in opening direction are detected are throttle going in limphome.";


                        break;
                    case "ThrErrCal.n_FCutAtLH":
                        description = "If the engine speed is above this rpm and the system is in limp home due to pedal poti or ADC comparison errors fuel cut is ordered.";


                        break;
                    case "ThrErrCal.n_NoFCutAtLH":
                        description = "If the engine speed is below this rpm and the system is in limp home due to pedal poti or ADC comparison errors fuel cut is NOT ordered.";


                        break;
                    case "ThrErrCal.t_FullPWMNoI":
                        description = "100% PWM in opening direction without current. When the 592 report 100% PWM in opening direction and the current in H-bridge is too low the 339 will wait this time before the fault is reported. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.t_HBShortCut":
                        description = "Shortcut to 12V in H-bridge. When the 592 report \"DK Shortcut\" the 339 will wait this time before the fault \"Shortcut in H-bridge\" is reported. Resolution is 1 msec.";


                        break;
                    case "ThrErrCal.AD_ThrotDiff":
                        description = "Increased robustness to avoid 100% PWM in closing direction The difference between the requested and actual throttle position (AD value) must greater than this value in combination with \"100% PWM in closing direction\" reported by the MCP during the filter time before the Main CPU report an error, 100% PWM inclosing direction, and enter limp home. Resolution is 1 AD.";


                        break;
                    case "ThrErrCal.t_ThrSumLimp":
                        description = "The filter time for throttle sum error shall be made a function of criticality. In case the throttle is not opening during debounce the filter time shall be long, else the filter tims shall be short, ThrErrCal.ThrSensSum[]. During the long debouncing time there shall be two calibratable timeouts, ThrErrCal.t_ThrSumLimp and ThrErrCal.t_ThrSumInfo, the first generating a diagnostic info DTC P1231 without system action, the second generating DTC P1230 and ETC mechanical limp home. Resolution is 1 ms.";


                        break;
                    case "ThrErrCal.t_ThrSumInfo":
                        description = "The filter time for throttle sum error shall be made a function of criticality. In case the throttle is not opening during debounce the filter time shall be long, else the filter tims shall be short, ThrErrCal.ThrSensSum[]. During the long debouncing time there shall be two calibratable timeouts, ThrErrCal.t_ThrSumLimp and ThrErrCal.t_ThrSumInfo, the first generating a diagnostic info DTC P1231 without system action, the second generating DTC P1230 and ETC mechanical limp home. Resolution is 1 ms.";


                        break;
                    case "ThrErrCal.ThrPotSumDiff":
                        description = "If (ActualIn.AD_ThrottlePot1 + ActualIn.AD_ThrottlePot2) > (1164 - ThrErrCal.ThrPotSumDiff) the flag ThrErr.ST_WiperCleaner, which triggs off the Wiper- Cleaner function, gets set. If 592 indicate throttle sensors sum fault in this case long debouncing time shall be used. See description for ThrErrCal.t_ThrSumInfo and ThrErrCal.t_ThrSumLimp. Resolution is 1.";


                        break;
                    case "ThrErrCal.m_AirDeltaLim":
                        description = "Delta limit to detect bad comfort (jerking). Used together with ThrErrProt.m_AirFreeze. Resolution is 1.";


                        break;
                    case "ThrErrCal.AD_ThrP1MaxLimit":
                        description = "Maximum throttle position 1 delta limit for fault. Resolution is 1.";


                        break;
                    case "ThrErrCal.n_EngineLim":
                        description = "No evaluation in engine speeds greater than ThrErrProt.n_EngineLim. The reason is saving CPU capacity and high engine speed. Resolution is 1.";


                        break;
                    case "ThrErrCal.t_Steady":
                        description = "The time to detect steady state. Resolution is 1 ms.";


                        break;
                    case "ThrErrCal.m_AirDiff":
                        description = "Maximal airmass difference between actual airmass and requested airmass. Resolution is 1.";


                        break;
                    case "ThrErrCal.OutAD_ThrMaxD":
                        description = "Maximum throttle delta limit for stable condition. Resolution is 1.";


                        break;
                    case "ThrErrCal.ErrorCntLim":
                        description = "Limit where faultcode 1230 is reported, ThrLimpAdapT.n_ThrPot1Fault >= ThrErrCal.ErrorCntLim set the faultcode. Resolution is 1.";


                        break;
                    case "ThrErr2Cal.PedalDeltaLimit":
                        description = "Pedal derivata limit for choise time before 339 indicate error. Resolution is 0.1.";


                        break;
                    case "ThrErr2Cal.ThrDeltaLimit":
                        description = "Throttle derivta limit for choise time before 339 indicate error. Resolution is 0.1.";


                        break;
                    case "ThrErr2Cal.PedSensSum":
                        description = "Pedal sensors sum fault. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.AdapSumErr":
                        description = "Pedal sensors sum exceeds adapted sum. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.PedMutAff":
                        description = "Mutal pedal sensor signal affection. Time 592 detect error before 339 indicate error. First data are used if AD_AccPedal1 are above PedalADLimit, second data if AD_AccPedal1 are above PedalADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.ThrSensSum":
                        description = "Throttle sensors sum fault. Time 592 detect error before 339 indicate error. First data are used if AD_ThrottleActual are above ThrADLimit, second data if AD_ThrottleActual are above ThrADLimit. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.StackOver":
                        description = "Stack overrun. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.ROMCheck":
                        description = "ROM check failed. Time 592 detect error before 339 indicate error. Resolution is 1 msec.";


                        break;
                    case "ThrErr2Cal.t_ThrSumLimp":
                        description = "The filter time for throttle sum error shall be made a function of criticality. In case the throttle is not opening during debounce the filter time shall be long, else the filter tims shall be short, ThrErr2Cal.ThrSensSum[]. During the long debouncing time there shall be two calibratable timeouts, ThrErr2Cal.t_ThrSumLimp and ThrErr2Cal.t_ThrSumInfo, the first generating a diagnostic info DTC P1231 without system action, the second generating DTC P1230 and ETC mechanical limp home. Resolution is 1 ms.";


                        break;
                    case "ThrErr2Cal.t_ThrSumInfo":
                        description = "The filter time for throttle sum error shall be made a function of criticality. In case the throttle is not opening during debounce the filter time shall be long, else the filter tims shall be short, ThrErr2Cal.ThrSensSum[]. During the long debouncing time there shall be two calibratable timeouts, ThrErr2Cal.t_ThrSumLimp and ThrErr2Cal.t_ThrSumInfo, the first generating a diagnostic info DTC P1231 without system action, the second generating DTC P1230 and ETC mechanical limp home. Resolution is 1 ms.";


                        break;
                    case "ThrErr2Cal.ThrPotSumDiff":
                        description = "If (In.AD_ThrottlePot1 + In.AD_ThrottlePot2) > (1164 - ThrErr2Cal.ThrPotSumDiff) the flag ThrErr2.ST_WiperCleaner, which triggs off the Wiper- Cleaner function, gets set. If 592 indicate throttle sensors sum fault in this case long debouncing time shall be used. See description for ThrErr2Cal.t_ThrSumInfo and ThrErr2Cal.t_ThrSumLimp. Resolution is 1.";


                        break;
                    case "Ser339Cal.ErrTime":
                        description = "Time with serial error on 339 before limphome. Resolution is 1 msec.";


                        break;
                    case "Ser339Cal2.ErrTime":
                        description = "Time with serial error on 339 before limphome. Resolution is 1 msec.";


                        break;
                    case "ADCCal.FilterConst":
                        description = "Filter constant for calculation of pedal signal 1 & 2. PEDAL = PEDAL(n-1) * FilterConst + In.AD_AccPedal FilterConst + 1";


                        break;
                    case "ADCCal.MaxDiff":
                        description = "Max. allowed differance between pedal 1 sensor read by 339 and 692. Resolution is 1.";


                        break;
                    case "ADCCal.MaxTime":
                        description = "If difference of pedal signal 1 are to high longer than this time are system going in limphome. Resolution is 0 - 65535 msec.";


                        break;
                    case "ADC2Cal.FilterConst":
                        description = "Filter constant for calculation of pedal signal 1 & 2. PEDAL = PEDAL(n-1) * FilterConst + In.AD_AccPedal FilterConst + 1";


                        break;
                    case "ADC2Cal.MaxDiff":
                        description = "Max. allowed differance between pedal 1 sensor read by 339 and 692. Resolution is 1.";


                        break;
                    case "ADC2Cal.MaxTime":
                        description = "If difference of pedal signal 1 are to high longer than this time are system going in limphome. Resolution is 0 - 65535 msec.";


                        break;
                    case "PowInhCal.Number":
                        description = "Number of failed test before limphome.";


                        break;
                    case "PowInhCal.I_AbsLimit":
                        description = "Max allowed absolute current when H-bridge is turned off. A current above indicate that it's NOT possible to inhibit the H-Bridge. Resolution is 1 mA.";


                        break;
                    case "PowInhCal.I_RelLimit":
                        description = "Min allowed current difference when H-bridge is turned off and when it's turned on. A relative current below indicate that it's NOT possible to inhibit the H-Bridge. Resolution is 1 mA.";


                        break;
                    case "PowInhCal.t_TestPhase1":
                        description = "Load-sounding \"Power stage inhibit test\" Test phase 1 period for Power Stage inhibit test. Resolution is 1 msec.";


                        break;
                    case "PowInhCal.t_TestPhase2":
                        description = "Load-sounding \"Power stage inhibit test\" Test phase 2 period for Power Stage inhibit test. Resolution is 1 msec.";


                        break;
                    case "PowInhCal.t_TestPhase3":
                        description = "Load-sounding \"Power stage inhibit test\" Test phase 3 period for Power Stage inhibit test. Resolution is 1 msec.";


                        break;
                    case "PowInhCal.t_TestPhase4":
                        description = "Load-sounding \"Power stage inhibit test\" Test phase 4 period for Power Stage inhibit test. Resolution is 1 msec.";


                        break;
                    case "PowInhCal.t_TestPhase5":
                        description = "Load-sounding \"Power stage inhibit test\" Test phase 5 period for Power Stage inhibit test. Resolution is 1 msec.";


                        break;
                    case "CurrToHiCal.I_limit":
                        description = "Max allowed current in mecanical limp home.";


                        break;
                    case "CurrToHiCal.Time":
                        description = "Max allowed time with high current in mechanical limp home. First time used if pedal position is more than 50 % open, else are second time used. Resolution is 1 msec.";


                        break;
                    case "TqToHiCal.T_AirInletXSP":
                        description = "Support points for inlet air temperature. Resolution is 1 C.";


                        break;
                    case "TqToHiCal.X_AccPedYSP":
                        description = "Support points for accelerator pedal position. Resolution is 0.1 %.";


                        break;
                    case "TqToHiCal.Q_AirInletMap":
                        description = "Map for max air flow (Q) in limphome. Resolution is 0.01 g/s.";


                        break;
                    case "TqToHiCal.Time":
                        description = "Max allowed time with high current in mechanical limp home. Resolution is 1 msec.";


                        break;
                    case "MonStimCal.Time":
                        description = "Max allowed time for wait for correct answer from 592. Resolution is 1 msec.";


                        break;
                    case "MonStimCal.TabAns":
                        description = "Answer values for monitor check of 592 software. ComProt.To592MonStim = 0 Tab[0] ComProt.To592MonStim = 1 Tab[1] . . . ComProt.To592MonStim = 7 Tab[7]";


                        break;
                    case "MonStimCal.TabSta":
                        description = "Start values for monitor check of 339 software. MonStim.Stimulation = 0 Tab[0] MonStim.Stimulation = 1 Tab[1] . . . MonStim.Stimulation = 7 Tab[7]";


                        break;
                    case "MonStimCal.Tab2":
                        description = "Table for table access in module 101.";


                        break;
                    case "SafetySwCal.Timer":
                        description = "Debouncing time for \"Throttle_limit_error\", fault nr32";


                        break;
                    case "ROM339ChksmCal.ST_Enable":
                        description = "Flag for enable the ROM 339 checksum test 1 = Checksum test enabled 0 = Checksum test disabled";


                        break;
                    case "AdpFuel.ST_DoneMul":
                        description = "Indicate internal in fuel adaption if first multiplactive fuel adaption are finished or not.";


                        break;
                    case "AdpFuel.ST_DoneAdd":
                        description = "Indicate internal in fuel adaption if first additative fuel adaption are finished or not.";


                        break;
                    case "AdpFuel.ST_PurgeAllow":
                        description = "Indicate from master if purge is allowed to run or not.";


                        break;
                    case "AdpFuel.ST_DiagDoneMul":
                        description = "Indicate for the longterm fueltrim diag if first multiplactive fuel adaption is finished or not.";


                        break;
                    case "AdpFuel.ST_DiagDoneAdd":
                        description = "Indicate for the longterm fueltrim diag if first additive fuel adaption is finished or not.";


                        break;
                    case "AdpFuel.MulFAdapRampDone":
                        description = "When the fuelfactor has been adjusted to the adaption value. (AdpFuelAdap.MulFuelAdap = AdapFuelProt.MulFuelAdap)";


                        break;
                    case "AdpFuel.AddFAdapRampDone":
                        description = "When the fuelfactor has been adjusted to the adaption value. (AdpFuelAdap.AddFuelAdap = AdapFuelProt.AddFuelAdap)";


                        break;
                    case "AdpFuel.ST_FuelAdpAct":
                        description = "Indicate when fuel adaption is active.";


                        break;
                    case "AdpPrgProt.ST_AdaptAllow":
                        description = "Indicate from master if fuel adaption is allowed to run or not.";


                        break;
                    case "AdpPrgProt.State":
                        description = "State of adaption/purge master. 1 Until first mul. adaption is finished. Purge is enabled, but it is disabled if mul. conditions is fullfilled. Start time for state 2 is initialised before state 2 is activated. 2 Until purge time is over. Purge is enabled, but it could be disabled if add. conditions are fullfield AND first add. adaption not have been done. 3 Purge is enabled until mul. or add. conditions are fullfilled. Start time for state 4 is initialised before state 4 is activated. 4 Until adaption time is over. Purge is disabled, but it is enabled if either add. or mul. conditions not are fullfilled. When adaption time is over, state is set to 2.";


                        break;
                    case "AdpFuelProt.ST_Window":
                        description = "Indicate if conditions for add or mul window are fullfilled.";


                        break;
                    case "AdpFuelProt.ST_FirstAdapt":
                        description = "Indicate from fuel adaption to master if first adaption is in progress.";


                        break;
                    case "AdpFuelProt.Counter250":
                        description = "Counter for check if it have been 250 combustions before saving lambdaintegrator (Mul. factor).";


                        break;
                    case "AdpFuelProt.Counter250_2":
                        description = "Counter for check if it have been 250 combustions before saving lambdaintegrator (Add. factor).";


                        break;
                    case "AdpFuelProt.AdpCounter":
                        description = "Counter for check if it have been selected number off combustions to save lambdaintegrator (Mul factor).";


                        break;
                    case "AdpFuelProt.AdpCounter2":
                        description = "Counter for check if it have been selected number off combustions to save lambdaintegrator (Add factor).";


                        break;
                    case "AdpFuelProt.LambAdd":
                        description = "Lambda int is added on to this variabel. Used to evaluate Adp Mul factor.";


                        break;
                    case "AdpFuelProt.LambAdd2":
                        description = "Lambda int is added on to this variabel. Used to evaluate Adp Add factor.";


                        break;
                    case "AdpFuelProt.MulFuelAdapt":
                        description = "Multicative fueladaption value. Resolution is ° 0.01 %.";


                        break;
                    case "AdpFuelProt.AddFuelAdapt":
                        description = "Additative fueladaption value. Resolution is 0.01 mg/c.";


                        break;
                    case "AdpFuelAdap.MulFuelAdapt":
                        description = "Multicative fueladaption value. Resolution is ° 0.01 %.";


                        break;
                    case "AdpFuelAdap.AddFuelAdapt":
                        description = "Additative fueladaption value. Resolution is 0.01 mg/c.";


                        break;
                    case "AdpFuelCal.GadptNr":
                        description = "Number of combustions to save lambda integrator for calculation off mean value, multiplicative fuel factor.";


                        break;
                    case "AdpFuelCal.IadptNr":
                        description = "Number of combustions to save lambda integrator for calculation off mean value, additive fuel factor.";


                        break;
                    case "AdpFuelCal.T_AdaptLim":
                        description = "Water temp limit for adaption. Resolution is 1 °C.";


                        break;
                    case "AdpFuelCal.WMulMaxRpm":
                        description = "Max engine speed for multiplicative adaption. Resolution is 1 rpm.";


                        break;
                    case "AdpFuelCal.WMulMinRpm":
                        description = "Min engine speed for multiplicative adaption. Resolution is 1 rpm.";


                        break;
                    case "AdpFuelCal.WMulMaxLoad":
                        description = "Max airmass for multiplicative adaption. Resolution is 1 mg/c.";


                        break;
                    case "AdpFuelCal.WMulMinLoad":
                        description = "Min airmass for multiplicative adaption. Resolution is 1 mg/c.";


                        break;
                    case "AdpFuelCal.WAddMaxRpm":
                        description = "Max engine speed for additive adaption. Resolution is 1 rpm.";


                        break;
                    case "AdpFuelCal.WAddMinRpm":
                        description = "Min engine speed for additive adaption. Resolution is 1 rpm.";


                        break;
                    case "AdpFuelCal.WAddMaxLoad":
                        description = "Max airmass for additive adaption. Resolution is 1 mg/c.";


                        break;
                    case "AdpFuelCal.WAddMinLoad":
                        description = "Min airmass for additive adaption. Resolution is 1 mg/c.";


                        break;
                    case "AdpFuelCal.t_AfterCloop":
                        description = "After lambda control have been in closed loop most this time have passed before it's possibility to have adaption. Resolution is 1 msec.";


                        break;
                    case "AdpPrgCal.PurgeTime":
                        description = "Time purge should been enabled before fuel adaption. Resolution is 1 msec.";


                        break;
                    case "AdpPrgCal.AdaptTime":
                        description = "Time fuel adaption should been enabled after purge have been disabled. Resolution is 1 msec.";


                        break;
                    case "AdpPrgCal.TimeFirstAdap":
                        description = "When this time have passed are normal time scheduler for purge/fuel adaption valid even if first fuel adaption not are done. Resolution is 1 msec.";


                        break;
                    case "BFuelAdap.V_FuelConsumed":
                        description = "Milli liter of fuel consumed since this data was cleared from the App7 or from the ECU was connected the first time. When ignition key is turned off is the Out.Vol_FuelConsumed added to this data. Resolution is 1 ml.";


                        break;
                    case "BFuelAdap.V_FuelConsMap":
                        description = "Fuel consumed matrix. Updated when lambda controler have been in closed loop. Resolution is 1 ml. Interval is every 100 ms.";


                        break;
                    case "FuelConsCal.ST_WithPurge":
                        description = "If purge adaption should been used when fuel consumtion are calculated. 1 = Yes 0 = No";


                        break;
                    case "FuelConsCal.AirSP":
                        description = "Airmass support points for fuel consumption table. Resolution is 1 mg/c.";


                        break;
                    case "FuelConsCal.Tab":
                        description = "Table for adjustment of fuel consumption. Resolution is 0.001 (0.1%).";


                        break;
                    case "FuelConsCal.BeConst":
                        description = "Constant for calculation of fuel consumption (g/kWh).";


                        break;
                    case "FuelConsCal.m_AirInlXSP":
                        description = "Airmass support points for fuel map where fuel consumption are saved. Resolution is 1 mg/c.";


                        break;
                    case "FuelConsCal.n_EngineYSP":
                        description = "Engine speed support points for fuel map where fuel consumption are saved. Resolution is 1 rpm.";


                        break;
                    case "BFuelCal.crankFuelDelay":
                        description = "Delay to keep crankfuel after engine started is set.";


                        break;
                    case "BFuelCal.AirXSP":
                        description = "Airmass support points for fuel map. Resolution is 1 mg/c.";


                        break;
                    case "BFuelCal.RpmYSP":
                        description = "Engine speed support points for fuel map. Resolution is 1 rpm.";


                        break;
                    case "BFuelCal.Map":
                        description = "Map for multiplicative fuel factor depending on load and engine speed. This map is used to compensate for volymetric efficiency and lambda enrichment on higher loads. Resolution is 0.01 (1%).";


                        break;
                    case "BFuelCal.E85Map":
                        description = "E85 Map for multiplicative fuel factor depending on load and engine speed. This map is used to compensate for volymetric efficiency and lambda enrichment on higher loads. Resolution is 0.01 (1%).";


                        break;

                    case "BFuelCal.StartMap":
                        description = "Map for multiplicative fuel factor depending on load and engine speed. This map is used when engine start temp is within limits and the lambda closed loop control has not yet started. Used to reduce enrichment on high loads when the engine is cold, to reduce black smoke. Resolution is 0.01 (1%).";


                        break;
                    case "BFuelCal.StartMapActive":
                        description = "Activate the startmap to reduce black smoke.";


                        break;
                    case "BFuelCal.T_EngStartLowLim":
                        description = "Engine start temp above this limit will activate the StartMap to reduce black smoke.";


                        break;
                    case "BFuelCal.T_EngStartHighLim":
                        description = "Engine start temp below this limit will activate the StartMap to reduce black smoke.";


                        break;
                    case "BFuelCal.rampFac":
                        description = "Every combustion the weight between the StartMap and ordinary Map is changed a number of percent decided by the rampFac. The weighting stops when the weight is 100% to the ordinary map.";


                        break;
                    case "BFuelCal2.crankFuelDelay":
                        description = "Delay to keep crankfuel after engine started is set.";


                        break;
                    case "BFuelCal2.AirXSP":
                        description = "Airmass support points for fuel map. Resolution is 1 mg/c.";


                        break;
                    case "BFuelCal2.RpmYSP":
                        description = "Engine speed support points for fuel map. Resolution is 1 rpm.";


                        break;
                    case "BFuelCal2.Map":
                        description = "Map for multiplicative fuel factor depending on load and engine speed. This map is used to compensate for volymetric efficiency and lambda enrichment on higher loads. Resolution is 0.01 (1%).";


                        break;
                    case "BFuelCal2.StartMap":
                        description = "Map for multiplicative fuel factor depending on load and engine speed. This map is used when engine start temp is within limits and the lambda closed loop control has not yet started. Used to reduce enrichment on high loads when the engine is cold, to reduce black smoke. Resolution is 0.01 (1%).";


                        break;
                    case "BFuelCal2.StartMapActive":
                        description = "Activate the startmap to reduce black smoke.";


                        break;
                    case "BFuelCal2.T_EngStartLowLim":
                        description = "Engine start temp above this limit will activate the StartMap to reduce black smoke.";


                        break;
                    case "BFuelCal2.T_EngStartHighLim":
                        description = "Engine start temp below this limit will activate the StartMap to reduce black smoke.";


                        break;
                    case "BFuelCal2.rampFac":
                        description = "Every combustion the weight between the StartMap and ordinary Map is changed a number of percent decided by the rampFac. The weighting stops when the weight is 100% to the ordinary map.";


                        break;
                    case "InjCorrCal.InjectorConst":
                        description = "Injector constant for actual injectors. Resolution is 1 g/min.";


                        break;
                    case "InjCorrCal.BattCorrTab":
                        description = "Table for adjustment of injectiontime depending on battery voltage. Resolution is 1 us.";


                        break;
                    case "InjCorrCal.BattCorrSP":
                        description = "Supportpoints for adjustment of injectiontime depending on battery voltage. Resolution is 0.1 V.";


                        break;
                    case "BlockHeat.StartFac":
                        description = "Actual factor from blockheater function on startfuel";


                        break;
                    case "BlockHeat.AftSt2Fac":
                        description = "Actual factor from blockheater function on afterstart 2";


                        break;
                    case "BlockHeat.Q_StartOffsFac":
                        description = "Actual factor from blockheater function on startair";


                        break;
                    case "BlockHeat.C_PartNFac":
                        description = "Actual factor from blockheater function to idle air";


                        break;
                    case "BlockHeat.T_EngAirDiff":
                        description = "In.T_Engine - In.T_AirInlet at start. Used in blockheater algorithm to detect a blockheater start";


                        break;
                    case "BlockHeatCal.T_AirInlet":
                        description = "In.T_AirInlet must be below this parameter to enable blockheater start enrichment";


                        break;
                    case "BlockHeatCal.T_Engine":
                        description = "In.T_Engine must be below this parameter to enable blockheater start enrichment";


                        break;
                    case "BlockHeatCal.T_EngAirDiff":
                        description = "The differance between In.T_Engine and In.T_AirInlet must be greater than this parameter to enable blockheater start enrichment";


                        break;
                    case "BlockHeatCal.StartFac":
                        description = "If a blockheater start is detected and inlet air temperature is below -25, enrich startfuel with this factor";


                        break;
                    case "BlockHeatCal.AftSt2FacTab":
                        description = "If a blockheater start is detected, encrich afterstart 2 with this factor";


                        break;
                    case "BlockHeatCal.Q_StartFacTab":
                        description = "If a blockheater start is detected, increase Idle.Q_StartOffs with this factor";


                        break;
                    case "BlockHeatCal.C_PartNFacTab":
                        description = "If a blockheater start is detected, increase Idle.C_PartNeutral with this factor";


                        break;
                    case "BlockHeatCal.T_AirInletSP":
                        description = "Support pointer for blockheat start function";


                        break;
                    case "BlockHeatCal.C_PartDec":
                        description = "Decrease C_PartNFac factor by this amount every 1000ms when Idle.StartAirMode = 0;";


                        break;
                    case "BlockHeatCal.T_AirInletMin":
                        description = "Minimum In.T_AirInlet to enable start factor";


                        break;
                    case "ExhaustProt.T_Exhaust":
                        description = "Exhaust gas temperature between exhaust manifold and turbine inlet, measured by a 3mm PT 100 thermo couple. From pin 40 in T7.";


                        break;
                    case "ExhaustProt.T_CalcDly":
                        description = "Delayed value of Exhaust.T_Calc";


                        break;
                    case "ExhaustProt.T_AirMapVal":
                        description = "Current steady-state load/rpm matrix temperature.";


                        break;
                    case "ExhaustProt.T_RealAirVal":
                        description = "Copy of ExhaustProt.T_AirMapVal, except for when ExhaustProt.T_AirMapVal is ramped from its matrix value towards ExhaustCal.T_Max, which occurs when Exhaust.Status >= 2.ExhaustProt.T_RealAirVal does not get ramped, it keeps its matrix value.";


                        break;
                    case "ExhaustProt.T_IgnMapVal":
                        description = "Current steady-state ignition dependent temperature.";


                        break;
                    case "ExhaustProt.T_TotMapVal":
                        description = "Sum of load/rpm and ignition dependent steady-state temperatures, i.e. the final goal if the load/rpm and ignition were held constant.";


                        break;
                    case "ExhaustProt.fi_Offset":
                        description = "Ignition offset from nominal matrix value. Used as a pointer to calculate the ignition dependent temperature offset.";


                        break;
                    case "ExhaustProt.T_Limit":
                        description = "Exhaust temperature limit for lambda=1. Output from table ExhaustCal.T_LimitTab";


                        break;
                    case "ExhaustProt.T_Tau1":
                        description = "Dynamic exhaust temperature from the fast load/rpm dynamics.";


                        break;
                    case "ExhaustProt.T_Tau2":
                        description = "Dynamic exhaust temperature from the slow load/rpm dynamics.";


                        break;
                    case "ExhaustProt.T_Tau3":
                        description = "Dynamic exhaust temperature from the fast ignition dynamics.";


                        break;
                    case "ExhaustProt.T_Tau4":
                        description = "Dynamic exhaust temperature from the slow load/rpm dynamics.";


                        break;
                    case "Exhaust.SumNorm":
                        description = "Sum of enriched fuel factors (to get a picture of the fuel savings).";


                        break;
                    case "Exhaust.SumAlg":
                        description = "Sum of lambda1 fuel factors (to get a picture of the fuel savings).";


                        break;
                    case "Exhaust.RampValue":
                        description = "Current ramp value from Lambda = 1 to enriched fuel matrix.";


                        break;
                    case "Exhaust.RampValue2":
                        description = "Current ramp value from enriched fuel matrix to Lambda = 1.";


                        break;
                    case "Exhaust.FuelNormFac":
                        description = "The fuelfactor that normally would have been used without \"Exhaust temperature algorithm\".";


                        break;
                    case "Exhaust.ActualFac":
                        description = "Actual Fuelfactor.";


                        break;
                    case "Exhaust.Lambda1Fac":
                        description = "Fuel factor at lambda = 1, i.e. when the model controls the enrichments.";


                        break;
                    case "Exhaust.Status":
                        description = "Indicates status of \"Exhaust temperature algorithm\" 1 = Temperature below calibrated value, no enrichment --> Lambda enabled 2 = Load is low enough to reenable lambda regulator --> Lambda enabled 3 = Temperature above calibrated value, ramp enrichment --> Lambda disabled 4 = Temperature above calibrated value, full enrichment --> Lambda disabled 5 = Ramp to jerk or TCS enrichment activated. TCS has been active since a calibratable amount of time and load is high that enrichment is needed --> Lambda disabled. 6 = Jerk or TCS enrichment. --> Lambda disabled. 7 = Ramp from jerk or TCS enrichment to Lambda1. --> Lambda disabled.";


                        break;
                    case "Exhaust.T_Calc":
                        description = "Calculated dynamic exhaust temperature.";


                        break;
                    case "Exhaust.ST_Enable":
                        description = "Flag to enable \"Exhaust temperature algorithm\". This flag gets set if ExhaustCal.ST_Enable is set and In.T_Engine is above it's limit - ExhaustCal.T_Engine.";


                        break;
                    case "ExhaustCal.ST_Enable":
                        description = "If this flag is set and In.T_Engine is above it's limit, ExhaustCal.T_Engine, Exhaust.ST_Enable gets set. Exhaust.ST_Enable is the flag to enable \"Exhaust temperature algorithm\"";


                        break;
                    case "ExhaustCal.t_FCutDelay":
                        description = "Time after fuelcut to use the after fuel cut time constant.";


                        break;
                    case "ExhaustCal.RampFactor":
                        description = "Ramp factor from the lambda1 matrix to the enriched fuel matrix. This value is in %/comb. If, for example the value is 0.2 it will take 1/0.2=5 combustions to go from the lambda1 matrix to the enriched matrix.";


                        break;
                    case "ExhaustCal.RampFactor2":
                        description = "Ramp factor to lambda1 matrix from enrichment matrix. This value is in %/comb. If, for example the value is 0.2 it will take 1/0.2=5 combustions to go to the lambda1 matrix from the enriched matrix";


                        break;
                    case "ExhaustCal.T_FCut":
                        description = "Final steady-state exhaust temperature when in fuel cut mode.";


                        break;
                    case "ExhaustCal.t_Tau1FCut":
                        description = "Fast time constant DURING fuel cut. ";


                        break;
                    case "ExhaustCal.t_Tau2FCut":
                        description = "Slow time constant DURING fuel cut. ";


                        break;
                    case "ExhaustCal.t_Tau3FCut":
                        description = "Fast time constant AFTER fuel cut. The fast time constant is replaced by this value only if it is less then the ordinary one. Otherwise the ordinary one is still used.";


                        break;
                    case "ExhaustCal.t_Tau4FCut":
                        description = "Slow time constant AFTER fuel cut.";


                        break;
                    case "ExhaustCal.t_Tau1Still":
                        description = "Fast time constant when engine has been shut off.";


                        break;
                    case "ExhaustCal.t_Tau2Still":
                        description = "Slow time constant when engine has been shut off.";


                        break;
                    case "ExhaustCal.T_Max":
                        description = "Final steady-state temperature goal when in enriched mode.";


                        break;
                    case "ExhaustCal.Tau3":
                        description = "Fast time constant for the ignition dependent part of the exhaust temperature.";


                        break;
                    case "ExhaustCal.Tau4":
                        description = "Slow time constant for the ignition dependent part of the exhaust temperature.";


                        break;
                    case "ExhaustCal.X_WeightFac":
                        description = "Weight factor between fast and slow rpm/load dependent steady-state temperature. X_WeightFac % of the steady-state load/rpm temperature is used in the fast dynamics, and the rest in the slow dynamics.";


                        break;
                    case "ExhaustCal.W_FacIgn":
                        description = "Weight factor between fast and slow ignition dependent steady-state temperature. W_FacIgn % of the steady-state ignition temperature is used in the fast dynamics, and the rest in the slow dynamics.";


                        break;
                    case "ExhaustCal.n_EngineLim":
                        description = "Engine speed limit to use faster \"slow time constant\" at shifts. Below this rpm the ordinary one is used.";


                        break;
                    case "ExhaustCal.t_ShiftDelay":
                        description = "Delay after shift has been detected to use the faster \"slow time constant\".";


                        break;
                    case "ExhaustCal.Tau2_Shift":
                        description = "Slow time constant at gear shifts. Used to speed up the temperature model at gear shifts. Especially when the lock up gears is enabled in automatic cars.";


                        break;
                    case "ExhaustCal.t_Tau1Start":
                        description = "Fast time constant after engine start";


                        break;
                    case "ExhaustCal.t_Tau2Start":
                        description = "Slow time constant after engine start";


                        break;
                    case "ExhaustCal.t_StartDelay":
                        description = "Delay time after engine start to use start time constants";


                        break;
                    case "ExhaustCal.X_Delay":
                        description = "Number of loops the delayed exhaust temperature will be delayed ";


                        break;
                    case "ExhaustCal.T_LimitTab":
                        description = "Exhaust temperature limit for lambda=1. When the calculated temperature reaches this value, the fuelfactor starts to ramp up to enriched matrix value. If knock fuel is needed it is also used over this temperature. Pointer in table is ExhaustProt.T_TotMapVal";


                        break;
                    case "ExhaustCal.T_LimitSP":
                        description = "Support points for temperature limit table ";


                        break;
                    case "ExhaustCal.m_AirSP":
                        description = "Load support points for fast and slow rpm/load time constants and ignition influence matrix.";


                        break;
                    case "ExhaustCal.m_AirTau1Tab":
                        description = "Fast time constant for the rpm/load dependent temperature.";


                        break;
                    case "ExhaustCal.m_AirTau2Tab":
                        description = "Slow time constant for the rpm/load dependent temperature.";


                        break;
                    case "ExhaustCal.fi_IgnSP":
                        description = "Ignition offset support points for the ignition dependent exhaust temperature matrix. Positive values indicates a later ignition timing.";


                        break;
                    case "ExhaustCal.fi_IgnMap":
                        description = "Ignition dependent steady-state exhaust temperature matrix. This matrix describes how the temperature is influenced when the ignition timing differs from the nominal value.";


                        break;
                    case "ExhaustCal.T_ExhaustSP":
                        description = "AD support points for the exhaust temperature. Used for model calibration/development only.";


                        break;
                    case "ExhaustCal.T_ExhaustTab":
                        description = "Table for exhaust temperature sensor. Used for model calibration/development only.";


                        break;
                    case "ExhaustCal.T_Lambda1Map":
                        description = "Exhaust gas temperature matrix at steady-state (load/rpm), lambda=1 and nominal ignition timing.";


                        break;
                    case "ExhaustCal.X_PedJerkLim":
                        description = "Jerk enrichment if pedal above this limit, load above limit and enginespeed within limits.";


                        break;
                    case "ExhaustCal.m_AirJerkLim":
                        description = "Jerk enrichment if load above this limit, pedal above limit and enginespeed within limits.";


                        break;
                    case "ExhaustCal.n_EngJerkHigh":
                        description = "High enginespeed limit for jerk enrichment.";


                        break;
                    case "ExhaustCal.n_EngJerkLow":
                        description = "Low enginespeed limit for jerk enrichment.";


                        break;
                    case "ExhaustCal.T_Engine":
                        description = "The flag Exhaust.ST_Enable (flag to enable \"Exhaust temperature algorithm\") gets set if ExhaustCal.ST_Enable is set and In.T_Engine is above this limit.";


                        break;
                    case "ExhaustCal.v_JerkSpdLim":
                        description = "Vehicle speedlimit to disable jerk enrichment.";


                        break;
                    case "FCompCal.FuelCompCyl":
                        description = "Cylinder individual fuelcompensation factor. Resolution is 0.001 ( 0.1% ).";


                        break;
                    case "FCut.ST_FuelCut":
                        description = "Actual fuelcut status. \"ON\" - Fuelcut on one or more cylinders. \"--\" - No fuelcut at any cylinder.";


                        break;
                    case "FCut.CutStatus":
                        description = "Fuel cut status, indicates what caused the fuelcut: 0 - No fuelcut 1 - Ignition key turned off 2 - Acc pedal pressed during start 3 - Engine speed above limit 4 - Throttle block adaption active for the first time 5 - 6 - Airmass guard ( pressure guard ) 7 - Immobilizer code not correct 8 - Current to h-bridge to high during throttle limphome 9 - Torque to high during throttle limphome 10 - Not used 11 - Tampering protection of throttle 12 - Error on all ignition trigg outputs 13 - ECU not correctly programmed 14 - To high rpm in Throttle limp home, pedal poti fault 15 - Torque Master fuel cut request 16 - TCM requests fuelcut to smoothen gear shift 20 - Application conditions for fuel cut: See \"HELP FUEL_CUT\" menu.";


                        break;
                    case "FCut.FuelCutCyl":
                        description = "Indicate fuelcut on a specific cylinder. 1 - Fuel cut. 0 - No fuel cut.";


                        break;
                    case "FCutProt.FuelFactor":
                        description = "Actual factor for after fuelcut enrichment. Interval is Every combustion until last supportpoint in.";


                        break;
                    case "FCutProt.n_Comb":
                        description = "Actual number of combustions after a fuelcut";


                        break;
                    case "FCutProt.ST_AirmassGuard":
                        description = "Indicate if airmass have been above limit during a longer period.";


                        break;
                    case "FCutCal.ST_Enable":
                        description = "Enable the fuelcut function. \"1\" - fuelcut function enabled. \"0\" - fuelcut function disabled.";


                        break;
                    case "FCutCal.ST_CutOnLowGear":
                        description = "Enable fuelcut on low gears. \"1\" - Fuelcut wil bee active on low gears. \"0\" - Fuelcut will not bee activated if actual gear ratio is above the ratio limit (FCutCal.RatioLim) and if a gear is detected.";


                        break;
                    case "FCutCal.RatioLim":
                        description = "Actual gear ratio limit to disable fuelcut. If the flag \"FCutCal.ST_CutOnLowGear\" not is set will the fuelcut not bee done if the actual gear ratio is above this limit or if a gear not is detected.";


                        break;
                    case "FCutCal.n_EngLimLow":
                        description = "Below this engine speed will fuelcut not be active.";


                        break;
                    case "FCutCal.n_EngCSLULow":
                        description = "Below this engine speed, during coast slip lockup, fuelcut will not be active.";


                        break;
                    case "FCutCal.n_EngLimHigh":
                        description = "Enginespeed must be above this limit to enable fuelcut.";


                        break;
                    case "FCutCal.n_EngCSLUHigh":
                        description = "Enginespeed must be above this limit, during coast slip lockup, to enable fuelcut.";


                        break;
                    case "FCutCal.n_CombSP":
                        description = "Support points for fuel enricment after fuelcut. Number of combustion since the fuel was turned on after a fuelcut. No interpolation is done.";


                        break;
                    case "FCutCal.FuelFactor":
                        description = "Fuelfactor depending on number of combustions since the fuel was turned on after a fuelcut. No interpolation is done.";


                        break;
                    case "FCutCal.T_EngLim":
                        description = "Fuelcut will not be alowed below this engine temperature limit.";


                        break;
                    case "FCutCal.m_AirInletLimit":
                        description = "If the \"MAF.m_AirInletFuel\" is higher than this limit during m_AirInletTime will the fuelcut be activated ( pressure guard ).";


                        break;
                    case "FCutCal.m_AirInletTime":
                        description = "Time \"MAF.m_AirInletFuel\" must bee higher than limit for activating fuelcut. ( pressure guard )";


                        break;
                    case "FCutCal.v_VehicleLow":
                        description = "Disable fuel cut below this speedlimit and do not enable it until v_Vehicle reaches FCutCal.v_VehicleHigh";


                        break;
                    case "FCutCal.v_VehicleHigh":
                        description = "Reenable fuel cut when vehicle speed exceeds this speedlimit";


                        break;
                    case "FCutCal.m_AirInlLow":
                        description = "When load is bel°w this limit and has been below m_AirInlHigh before the fuelcut, allow fuelcut";


                        break;
                    case "FCutCal.m_AirInlHigh":
                        description = "Enable fuelcut again when the load has exceeded this value";


                        break;
                    case "FCutCal.t_FCutDelay":
                        description = "Shortest time between two consecutive fuelcuts";


                        break;
                    case "BFuel.CatModel":
                        description = "Contains the BFuelProt.FuelAdjFac and is used in the cat temp model.";


                        break;
                    case "BFuel.ST_FuelFactor":
                        description = "This status flag shows which part of the fuelcalculation that does not have a fuelfactor=1.0 Function bitnr value TransientFuelAdjustment 0 1 KnockFuelAdjustment 1 2 CalcBFuelFactor 2 4 AfterStartEnrichment1Master 3 8 AfterStartEnrichment2Master 4 18 FuelAdaptFunction 5 32 TempCompensationMaster 6 64 CatDiagFuelFactor 7 128 LambdaControler 8 256 FuelCutMaster 9 512 HotStartEnrichmentMaster 10 1024";


                        break;
                    case "BFuel.m_FuelActual":
                        description = "Actual fuel mass per combustion after adjustment factors. Resolution is 0.01 mg/c.";


                        break;
                    case "BFuel.StartMapActive":
                        description = "Indicates if startmap for reducing black smoke is active.";


                        break;
                    case "BFuelProt.m_FuelConsAdd":
                        description = "Fuel factor added since key was turned on. This value was send to VBUS every second and after that cleared. UNIT : mg*8";


                        break;
                    case "BFuelProt.m_FuelBasic":
                        description = "Basic fuel mass per combustion. Resolution is 0.01 mg/c.";


                        break;
                    case "BFuelProt.m_FuelActual":
                        description = "Actual fuel mass per combustion after adjustment factors. Resolution is 0.01 mg/c.";


                        break;
                    case "BFuelProt.t_InjBasic":
                        description = "Basic inj time depending on fuelmass and injector constant. Resolution is 1 us.";


                        break;
                    case "BFuelProt.t_InjActual":
                        description = "Actual inj time, result of basic injection time and battery compensation. Resolution is 1 us.";


                        break;
                    case "BFuelProt.FuelAdjFac":
                        description = "Actual fuel adjustment factor read from \"BFuelProt.FuelMap\". Resolution is 0.01 (1%).";


                        break;
                    case "BFuelProt.lastStartCombustion":
                        description = "The combustion count when the startmap no longer should be used. The ramping to the normal BFuel map starts after this combustion.";


                        break;
                    case "BFuelProt.CurrentFuelCons":
                        description = "Current fuel consumption, calculated every 2000ms. Resolution is 0.1l / 100km.";


                        break;
                    case "InjCorrProt.t_InjBatt":
                        description = "Actual injection time compensation for battery voltage. Resolution is 1 us.";


                        break;
                    case "InjAnglProt.fi_InjActual":
                        description = "Actual Injection endangle. Resolution is 0.1 °.";


                        break;
                    case "InjAnglCal.ST_FixedAngle":
                        description = "Enable fixed injection angle when fuel is syncroniced. \"ON\" -> Fixed angle. \"--\" -> Angle read from matrix.";


                        break;
                    case "InjAnglCal.T_LimitFix":
                        description = "Water temp limit for possibillity to use matrix for injection end angle. Resolution is 1 °C.";


                        break;
                    case "InjAnglCal.fi_InjNoSync":
                        description = "Injection endangle when fuel not is syncroniced. Resolution is 0.1 °.";


                        break;
                    case "InjAnglCal.fi_InjFixed":
                        description = "Injection endangle when flag for fixed angle is used. Resolution is 0.1 °.";


                        break;
                    case "InjAnglCal.AirXSP":
                        description = "Airmass support points for injection endangle map. Resolution is 1 mg/c .";


                        break;
                    case "InjAnglCal.RpmYSP":
                        description = "Engine speed support points for injection endangle map. Resolution is 1 rpm.";


                        break;
                    case "InjAnglCal.Map":
                        description = "Map for injection endangle. Resolution is 0.1 °.";


                        break;
                    case "KnkFuel.fi_MaxOff":
                        description = "Max allowed ignition offset depending on knocking. (Mirror map for knock boost matrix). Resolution is 0.1 °.";


                        break;
                    case "KnkFuel.ST_EnableLam":
                        description = "Indicate if knock fuel allowes lambda control. be turned off. \"ON\" - Lambda Enabled. \"--\" - Lambda Disabled.";


                        break;
                    case "KnkFuelProt.FuelAdjust":
                        description = "Real fuel adjustment factor depending on actual knock offset. Resolution is 0.001.";


                        break;
                    case "KnkFuelProt.FuelTab":
                        description = "Table value for fuel adjustment factor. Resolution is 0.001.";


                        break;
                    case "KnkFuelProt.fi_MaxOffset":
                        description = "Max ignition offset depending on knocking without fuel enrichment. Resolution is 0.1 °.";


                        break;
                    case "KnkFuelProt.WeightFac1":
                        description = "Weight factor between real offset and max allowed offset. Resolution is 1 %.";


                        break;
                    case "KnkFuelProt.WeightFac2":
                        description = "Percent of fuel enrichment we should use.. Resolution is 1 %.";


                        break;
                    case "KnkFuelCal.EnrichmentMap":
                        description = "Fuel adjustment factor depending in actual knock offset. Resolution is 0.001 %.";


                        break;
                    case "KnkFuelCal.fi_MapMaxOffset":
                        description = "Max ignition retard for no fuel enrichment. Resolution is 0.1 °.";


                        break;
                    case "KnkFuelCal.fi_MapMaxOff":
                        description = "Max allowed ignition offset depending on knocking. Mirror map for knock boost matrix. Resolution is 0.1 °.";


                        break;
                    case "KnkFuelCal.m_AirXSP":
                        description = "Support points for engine speed. Resolution is 1 mg/c.";


                        break;
                    case "KnkFuelCal.WeightXSP":
                        description = "Engine speed support points for weight factor Table. Resolution is 1 %.";


                        break;
                    case "KnkFuelCal.WeightYSP":
                        description = "Support points for weight factor Table (real offset / max allowed offset). Resolution is 1 %.";


                        break;
                    case "KnkFuelCal.WeightTab":
                        description = "Percent Table for how much of fuel enrichment we should use. Resolution is 1 %.";


                        break;
                    case "KnkFuelCal.LambLim":
                        description = "Limit when system should run in open loop. Resolution is 0.001.";


                        break;
                    case "KnkFuelCal.ST_RampCalc":
                        description = "Type of calculation for fuel enrichment. ST_RampFac == 1 ==> IgnKnk.fi_Offset[Cyl]+Ign.fi_OtherOff-KnkFuelProt.fi_MaxOffset Factor == KnkFuelProt.fi_MaxOff-KnkFuelProt.fi_MaxOffset ST_RampFac == 0 ==> IgnKnk.fi_Offset[Cyl]+Ign.fi_OtherOff Factor == KnkFuelProt.fi_MaxOff ";


                        break;
                    case "LambdaProt.ST_Restart":
                        description = "Indicate if closed loop routine should be restarted. - Get new number of combustions before closed loop and wait to this number of combustions have passed. - Get new cooling water limits for closed loop. Same variable for bank 1 and 2. Update : every 250 msec. Resolution is ON / OFF.";


                        break;
                    case "LambdaProt.MinLoad":
                        description = "Min load(airmass) for closed loop. Update : every combustion. Resolution is 1 mg/c.";


                        break;
                    case "LambdaProt.MaxLoadTime":
                        description = "If load (airmass) has exceeded this limit during a longer period, system will leave closed loop. Update : every combustion. Resolution is 1 mg/c.";


                        break;
                    case "LambdaProt.MaxLoadNorm":
                        description = "Max load (airmass) for closed loop during normal conditions. Update : every combustion. Resolution is 1 mg/c.";


                        break;
                    case "LambdaProt.RestartCnt":
                        description = "Counter to check when closed loop integrator should restart. Update : every 250 msec. Resolution is 1 msec.";


                        break;
                    case "LambdaProt.MinCombCounter":
                        description = "Counter for number of combustions before it's allowed with switch of integrator. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.MinTempCthr":
                        description = "If throttle is closed and cooling water temperature is below this value system will be running in open loop. Update : every combustion. Resolution is 1 °C.";


                        break;
                    case "LambdaProt.MinTempOthr":
                        description = "If throttle is open and cooling water temperature is below this value is system running with open loop. Update : every combustion. Resolution is 1 °C.";


                        break;
                    case "LambdaProt.SwitchLimit":
                        description = "Actual probe switch point. Update : every combustion. Resolution is 1 mV.";


                        break;
                    case "LambdaProt.N_TransDelay":
                        description = "Combustion delay after HW check to run open loop during transients. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.N_BeforeHW":
                        description = "Number of combustion to wait before hard ware check. ie U_lambda_probe < 300mV AND U_lambda_probe > 600mV. Resolution is 1 combustion.";


                        break;
                    case "LambdaProt.NrComb2":
                        description = "Number of combustion to wait after hardware control. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.N_SAIDelay":
                        description = "Number of combustion delay before closed loop is allowed. Used instead of CombNrTab and CombNrTab2. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.HeatLoadLim":
                        description = "Actual load limit for sond preheating. Resolution is 1 mg/c.";


                        break;
                    case "LambdaProt.TimeCnt":
                        description = "Counter for check if load has been to high during a longer period. Update : every combustion. Resolution is 0.1 kPa.";


                        break;
                    case "LambdaProt.LoadPointer":
                        description = "Load pointer for xaxis for integrator maps. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.RpmPointer":
                        description = "Rpm pointer for yaxis for integrator maps. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.ST_SwitchAllowed":
                        description = "Indicate if new switch of integrator is allowed. Update : every combustion. Resolution is ON / OFF.";


                        break;
                    case "LambdaProt.ST_Rich":
                        description = "Indicate closed loop function is in decrease phase. Update : every combustion. Resolution is ON / OFF.";


                        break;
                    case "LambdaProt.ST_StepDone":
                        description = "Indicate if step has been done for integrator. Update : every combustion. Resolution is ON / OFF.";


                        break;
                    case "LambdaProt.NrConstI":
                        description = "Counter for number of combustions with constant integrator. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.LambdaInt":
                        description = "Local closed loop integrator. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.DecStep":
                        description = "Lean step value of integrator. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.DecRamp":
                        description = "Lean ramp value of integrator. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.DecComb":
                        description = "Number of combustions between probe switch to rich and decrease step. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaProt.IncStep":
                        description = "Rich step value of integrator. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.IncRamp":
                        description = "Rich ramp value of integrator. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.IncComb":
                        description = "Number of combustions between probe switch to lean and increase step. Update : every combustion. Resolution is ° 0.01 %.";


                        break;
                    case "LambdaProt.U_LamCatFilt":
                        description = "Filtrated lambda (Cat) sond voltage. Resolution is 1 mV.";


                        break;
                    case "LambdaProt.LeanStep":
                        description = "Adjustment value to add to lean step. \"Fast trim\" (affects the lambda close loop lean step in order to balance catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01 %.";


                        break;
                    case "LambdaProt.RichStep":
                        description = "Adjustment value to add to rich step. \"Fast trim\" (affects the lambda close loop rich step in order to balance catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01 %.";


                        break;
                    case "LambdaProt.t_AdapDelay":
                        description = "When msCounter = t_AdapDelay it's time to adapt. Resolution is 1 ms.";


                        break;
                    case "LambdaProt.ST_DataInit":
                        description = "Status is rear sond adaption initialised or not. 0 -> Not initialised 1 -> Data initialised";


                        break;
                    case "LambdaProt.LastCombNr":
                        description = "To save comb counter when LambdaInt. was called last";


                        break;
                    case "LambdaProt.N_HwCheckStamp":
                        description = "Combustion stamp when hardware check has finished.";


                        break;
                    case "LambdaProt.t_HeatFront":
                        description = "The front heater will be on for this time with a certain PWM.";


                        break;
                    case "LambdaProt.t_HeatRear":
                        description = "The rear heater will be on for this time with a certain PWM.";


                        break;
                    case "LambdaProt.HeatStateFront":
                        description = "The front heater runs throu 4 states with a specified PWM and time, both calibratible for each state (except fourth). The fourth state is always 100% PWM.";


                        break;
                    case "LambdaProt.HeatStateRear":
                        description = "The front heater runs throu 4 states with a specified PWM and time, both calibratible for each state (except fourth). The fourth state is always 100% PWM.";


                        break;
                    case "LambdaProt.t_FCutDelay":
                        description = "Used to delay rear sond trim after Trans.ST_Active = 1. Resolution is 1 ms.";


                        break;
                    case "LambdaProt.ST_RampOutInt":
                        description = "Indicate that lambda integrator is ramping down to zero. Used when leaving closed loop to get a less abrupt step in fuel. See also LambdaCal.RampOutFac";


                        break;
                    case "LambdaProt.ST_NoEnlean":
                        description = "Do not allow the lambda integrator to be below 0 during start";


                        break;
                    case "LambdaProt.N_BefHWStamp":
                        description = "EcmStat.n_combustion stamp for before HW check counter. Resolution is 1 combustion.";


                        break;
                    case "Lambda.m_LimitEngine":
                        description = "Maximum airmass used in limit engine when Performance.Mode = 0 ('E'-Economy mode) This airmass is the result from \"LambdaCal.MaxLoadNormTab\" - 20 mg/c to make shure that the lambda control not is switched off.";


                        break;
                    case "Lambda.ST_Enable":
                        description = "Indicate if fuel cloosed loop is activated. \"ON\" => Fuel closed loop activated. \"OFF\" => Fuel closed loop not activated.";


                        break;
                    case "Lambda.ST_AdaptInc":
                        description = "Indicate if constant adaption have been increased depending on rear sond. 1 - True 0 - False";


                        break;
                    case "Lambda.ST_AdaptionAllowed":
                        description = "Indicate if the conditions for adapting the lambda regulation to the input from the rear lambda sensor. This variable is controlled in the catalyst diagnose. \"ON\" => Adaption allowed. \"OFF\" => Adaption not allowed.";


                        break;
                    case "Lambda.ST_ProbeTime":
                        description = "Indicate if's allowed to measure time between rich and lean switch of probe. 1 => Allowed to mesure. 0 => Not allowed to mesure.";


                        break;
                    case "Lambda.LambdaInt":
                        description = "Global closed loop integrator. Update : every combustion. V6: Bank 1. Resolution is ° 0.01 %.";


                        break;
                    case "Lambda.TimeLean":
                        description = "Time probe have indicate lean, this time are only updated if lambda contoler are running in closed loop. Resolution is 1 msec. Interval is every 5 msec.";


                        break;
                    case "Lambda.TimeRich":
                        description = "Time probe have indicate rich, this time are only updated if lambda contoler are running in closed loop. Resolution is 1 msec. Interval is every 5 msec.";


                        break;
                    case "Lambda.n_NumberOfSwitch":
                        description = "Number of lamba integrator switches since lambda controler have been restared depending on engine stop. Resolution is 1 msec. Interval is every 5 msec.";


                        break;
                    case "Lambda.Status":
                        description = "Status byte for closed loop integrator. 0 = Closed loop activated. 1 = Load to high during a specific time. 2 = Load to low. 3 = Load to high, no knocking. 4 = Load to high, knocking. 5 = Cooling water temp to low, closed throttle. 6 = Cooling water temp to low, open throttle. 7 = Engine speed to low. 8 = Throttle transient in progress. 9 = Throttle transient in progress and low temperature 10 = Fuel cut. 11 = Load to high and exhaust temperature algorithm decides it is time to enrich. 12 = Diagnostic failure that affects the lambda cntrl. 13 = Cloosed loop not enabled. 14 = Waiting number of combustion before hardware check, ie U_lambda_probe < 300mV AND U_lambda_probe > 600mV 15 = Waiting until engine probe is warm. 16 = Waiting until number of combustions have past after probe is warm. 17 = SAI request open loop. 18 = Number of combustion to start closed loop has not passed. Only active when SAI is activated. 19 = Lambda integrator is freezed to 0 by SAI Lean Clamp. 20 = Catalyst diagnose for V6 controls the fuel. 21. Gas hybrid active, T7 lambdacontrol stopped. 22. Lambda integrator may not decrease below 0 during start.";


                        break;
                    case "Lambda.IntegratorBuf":
                        description = "This buffert contains the last 4 lambdaprot.lambdaint values sampled directly after each step in the lambda regulation. These samples can be used to calculate meanvalue of the lambdaintegrator.";


                        break;
                    case "Lambda.ST_HWDone":
                        description = "Indicates when O2FrontSens has left dead region, ie HardWare check.";


                        break;
                    case "Lambda.ST_GasActive":
                        description = "Flag to indicate that LPG engine runs on Gas. ie The injector drivers have indicated shortcut and the FlashSave.ST_GasHybridAct is = 1";


                        break;
                    case "LambdaAdap.LeanConst":
                        description = "Adjustment value to add to lean const. \"Slow trim\" (affects the lambda close loop lean const in order to adjust the catalyst oxygen storage depending on a poisoned oxygen sensor). Resolution is 1.";


                        break;
                    case "LambdaAdap.RichConst":
                        description = "Adjustment value to add to Rich const. \"Slow trim\" (affects the lambda close loop rich const in order to adjust the catalyst oxygen storage depending on a poisoned oxygen sensor). Resolution is 1.";


                        break;
                    case "LambdaCal.t_limHeatRear":
                        description = "Wait this time after engine started to activate rear sond heater.";


                        break;
                    case "LambdaCal.PWM_HeatO2FrontSens":
                        description = "PWM level for a specified times.";


                        break;
                    case "LambdaCal.t_HeatFront":
                        description = "Time to run front heater with a certain PWM level";


                        break;
                    case "LambdaCal.PWM_HeatO2RearSens":
                        description = "PWM level for a specified time.";


                        break;
                    case "LambdaCal.t_HeatRear":
                        description = "Time to run rear heater with a certain PWM level";


                        break;
                    case "LambdaCal.ST_AdapEnable":
                        description = "Enable adaption by rear sond. (lean or rich constant) 1 => adaption activated. 0 => adaption not activated.";


                        break;
                    case "LambdaCal.ST_Enable":
                        description = "\"1\" - Enable cloosed loop regulation. \"0\" - Disable cloosed loop regulation.";


                        break;
                    case "LambdaCal.ST_LambdaDurTrans":
                        description = "\"1\" = Closed loop during throttle transientif cooling temp are above \"TempTrans\". \"0\" = Open loop during throttle transient.";


                        break;
                    case "LambdaCal.MaxConstAdap":
                        description = "Max adaption for lambda constant fase. ";


                        break;
                    case "LambdaCal.RestartTime":
                        description = "Time before closed loop integrator should be restarted after engine speed = 0 or key off. Resolution is 1 msec.";


                        break;
                    case "LambdaCal.RpmSp":
                        description = "Engine speed support points for closed loop depending on actual load. Resolution is 1 rpm.";


                        break;
                    case "LambdaCal.MinLoadTab":
                        description = "Min load tab for closed loop. Resolution is 1 mg/c.";


                        break;
                    case "LambdaCal.MaxLoadTimeTab":
                        description = "When load has exceeded this limit (MaxLoadTimeTab)for a time specified by TimeOpenLoop system will be running in open loop. Resolution is 1 mg/c.";


                        break;
                    case "LambdaCal.MaxLoadNormTab":
                        description = "Max load tab for closed loop, no knocking. Resolution is 1 mg/c.";


                        break;
                    case "LambdaCal.TimeOpenLoop":
                        description = "Max time Load is allowed to exceed \"MaxLoadTimeTab\" and still Lambda regulation be in closed loop. Resolution is 1 msec.";


                        break;
                    case "LambdaCal.MinRpm":
                        description = "Min engine speed for closed loop. Resolution is 1 rpm.";


                        break;
                    case "LambdaCal.TempTrans":
                        description = "Min cooling water temp for possibility to have closed loop during throttle transient. Resolution is 1 °C.";


                        break;
                    case "LambdaCal.LowSwitch":
                        description = "Switch point for integrator when probe indicate rich. Resolution is 1 mV.";


                        break;
                    case "LambdaCal.HighSwitch":
                        description = "Switch point for integrator when probe indicate lean. Resolution is 1 mV.";


                        break;
                    case "LambdaCal.MinCombustion":
                        description = "It's not allowed to switch integrator before this number of combustions since last switch. Resolution is 1 Combustion.";


                        break;
                    case "LambdaCal.TempSp":
                        description = "Cooling water temp support points for maps which calculate start of closed loop. Resolution is 1 °C.";


                        break;
                    case "LambdaCal.N_TransDelay":
                        description = "Combustion delay after HW check to run open loop during transients. Update : every combustion. Resolution is 1.";


                        break;
                    case "LambdaCal.N_BeforeHW":
                        description = "Number of combustion to wait before hardware check. ie U_lambda_probe < 300mV AND U_lambda_probe > 600mV . Resolution is 1 combustion.";


                        break;
                    case "LambdaCal.CombNrTab2":
                        description = "Number of combustion to wait after hardware check. Resolution is 1 combustion.";


                        break;
                    case "LambdaCal.TempCthrTab":
                        description = "Min cooling water temp for closed loop with closed throttle. Resolution is 1 °C.";


                        break;
                    case "LambdaCal.TempOthrTab":
                        description = "Min cooling water temp for closed loop with open throttle. Resolution is 1 °C.";


                        break;
                    case "LambdaCal.HeatRpmSP":
                        description = "Rpm support points for table including max sondheat load. Resolution is 1 rpm.";


                        break;
                    case "LambdaCal.HeatLoadLimTab":
                        description = "Table including max load for sond preheating. Above this load will the sond preheater for both sonds be turned off. Resolution is 1 mg/c.";


                        break;
                    case "LambdaCal.HeatTempLimCat":
                        description = "Engine temp limit for rear sond preheating. Below this temperature will the rear sond preheater be turned off. Resolution is 1 °C.";


                        break;
                    case "LambdaCal.FiltFac1":
                        description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolution is 1.";


                        break;
                    case "LambdaCal.FiltFac2":
                        description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolution is 1.";


                        break;
                    case "LambdaCal.FiltFac3":
                        description = "U_LambdaCatFilt = U_NewUnFilt * FiltFac1 + U_OldFilt1 * FiltFac2 + U_OldFilt2 * FiltFac3 FiltFac1 + FiltFac2 + FiltFac3 = 100. Resolution is 1.";


                        break;
                    case "LambdaCal.t_Adaption":
                        description = "Min time between each step in rear sond adaption (lean or rich constant). Resolution is 1 ms.";


                        break;
                    case "LambdaCal.U_AdapMinLim":
                        description = "Adaption Min limit. When the cat sond voltage is below this limit, the lambda adaption (rich constant) will be updated. Resolution is 1 mV.";


                        break;
                    case "LambdaCal.U_AdapMaxLim":
                        description = "Adaption Max limit. When the cat sond voltage is abow this limit, the lambda adaption (lean constant) will be updated. Resolution is 1 mV.";


                        break;
                    case "LambdaCal.LeanStep":
                        description = "Lambda lean step adjustment table. \"Fast trim\" (affects the lambda close loop lean step in order to balance catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01%.";


                        break;
                    case "LambdaCal.RichStep":
                        description = "Lambda rich step adjustment table.° Fast trim° (affects the lambda close loop rich step in order to balance the catalyst oxygen storage depending on A/F perturbations). Resolution is 0.01%.";


                        break;
                    case "LambdaCal.XSp":
                        description = "Load(airmass) depended support points for integrator maps (IncStep, IncRamp ..). No interpolation are used in this maps. Resolution is 0.1 kPa.";


                        break;
                    case "LambdaCal.YSp":
                        description = "Engine speed depended support points for integrator maps (Step,Ramp ..). No interpolation are used in this maps. Resolution is 1 Rpm.";


                        break;
                    case "LambdaCal.U_AdjStepSP":
                        description = "Lambda step adjustment supportpoints. Resolution is 1 mV.";


                        break;
                    case "LambdaCal.DecStepMap":
                        description = "Negativ step map for closed loop integrator. Resolution is 0.01 %.";


                        break;
                    case "LambdaCal.DecRampMap":
                        description = "Negativ ramp map for closed loop integrator. Resolution is 0.01 %.";


                        break;
                    case "LambdaCal.DecCombMap":
                        description = "Number of combustions with constant integrator before positive step. Resolution is 1.";


                        break;
                    case "LambdaCal.IncStepMap":
                        description = "Positive step map for closed loop integrator. Resolution is 0.01 %.";


                        break;
                    case "LambdaCal.IncRampMap":
                        description = "Positive ramp map for closed loop integrator. Resolution is 0.01 %.";


                        break;
                    case "LambdaCal.IncCombMap":
                        description = "Number of combustions with constant integrator before negative step. Resolution is 1.";


                        break;
                    case "LambdaCal.AirFuelRatioLoadSignal":
                        description = "If this flag is set the MAF.m_AirInletFuel is used in the air fuel ration calculation. If this flag NOT is set the MAF.m_AirInletTorq is used instead. Resolution is 1.";


                        break;
                    case "LambdaCal.ST_PerformAirFuelRatioCalc":
                        description = "If this flag is set the air-fuel ratio is calculated every time the fuelmaster is called. Resolution is 1.";


                        break;
                    case "LambdaCal.t_FCutDelay":
                        description = "Delay after FCut.ST_FuelCut gone low when Rear Sond Adaption is allowed again. Resolution is 1 ms.";


                        break;
                    case "LambdaCal.T_RearSondI":
                        description = "Temperature limit for Rear Sond Trim P-Part, enabled if In.T_Engine is above T_RearSondI. Resolution is 1 C.";


                        break;
                    case "LambdaCal.m_MaxLoadHyst":
                        description = "When load limit (Lambda.Status = 3 or 1) is active this value is added to the load limit. By doing so an hysteres is created to avoid oscillating around load limit. Resolution is 1 mg/c.";


                        break;
                    case "LambdaCal.RampOutFac":
                        description = "This factor is used to ramp lambdaint to zero when leaving closed loop. Used when LambdaProt.ST_RampOutInt is set. Ex: RampOutFac = 5 -> lambda int is decreased with 5 % units every comb. Resolution is 0.01 %.";


                        break;
                    case "LambdaCal.N_NoEnlean":
                        description = "The number of combustions after HW-check is done that \"No enleanment\" function is activated";


                        break;
                    case "LambdaCal.X_NoEnleanMax":
                        description = "Maximum value of lambda integrator during \"No enleanment\" function";


                        break;
                    case "Purge.ST_TankDiag":
                        description = "Indicates if purgefunction is controlled by diagnose.";


                        break;
                    case "Purge.SAI_IntrStatus":
                        description = "Indicates status of SAI intrusive test. Copy of obdSAI_IntrStatus.";


                        break;
                    case "Purge.ST_StartRamp":
                        description = "Status of start ramping of the purge flow.";


                        break;
                    case "Purge.ValveFreqEvap":
                        description = "Valve frequency request from diagnose. ";


                        break;
                    case "Purge.ST_FastAdp":
                        description = "Fast adaption status.";


                        break;
                    case "Purge.Status":
                        description = "Status of the purge function.";


                        break;
                    case "Purge.Valve":
                        description = "Purge valve PWM. Resolution is 0.1 %.";


                        break;
                    case "Purge.FuelFac":
                        description = "The fuelfactor from the purge function. Resolution is 0.01 %.";


                        break;
                    case "Purge.Flow":
                        description = "The actual purge flow. Resolution is 1 mg/s.";


                        break;
                    case "Purge.DiagFlow":
                        description = "Requested purge flow during tank diagnosis. Resolution is 1 mg/s.";


                        break;
                    case "Purge.HCCont":
                        description = "The content of HC in the purge air. Resolution is 0.1 %.";


                        break;
                    case "Purge.LambdaFiltEvap":
                        description = "Filtered value of Lambda.LambdaInt. Resolution is 0.01 %.";


                        break;
                    case "Purge.AdaptionEvap":
                        description = "Adaption reference for evap. Resolution is 0.01 %.";


                        break;
                    case "Purge.Q_AirPrg":
                        description = "Air flow from purge. Resolution is 0.01 g/s.";


                        break;
                    case "Purge.m_AirPrg":
                        description = "Airmassflow from purge. Resolution is 1 mg/c.";


                        break;
                    case "Purge.m_FuelPrg":
                        description = "Fuel flow from purge. Resolution is 0.01 mg/c.";


                        break;
                    case "PurgeProt.AdpFreezeIndex":
                        description = "Describes the ratio between the time when purge adaption is frozen resp unfrozen. Resolution is 0.01.";


                        break;
                    case "PurgeProt.FuelFacMaxFlow":
                        description = "Maximum allowed purge flow in respect to maximum allowed fuel factor at actual load. Resolution is 1 mg/s.";


                        break;
                    case "PurgeProt.LocalMaxFlow":
                        description = "Maximum purge flow at actual load/rpm. Resolution is 1 mg/s.";


                        break;
                    case "PurgeProt.PdiffMaxFlow":
                        description = "Maximum flow allowed by the diff. pressure. Resolution is 1 mg/s.";


                        break;
                    case "PurgeProt.RefFlow":
                        description = "Reference flow equivalent to mapped flow measured with clean air. Resolution is 1 mg/s.";


                        break;
                    case "PurgeProt.ReqFlow":
                        description = "Requested purge flow. Resolution is 1 mg/s.";


                        break;
                    case "PurgeProt.SetPurgePercent":
                        description = "Set purge percent at start ramp. Under this level the flow is ramped fast. Resolution is 0.01 %.";


                        break;
                    case "PurgeProt.AdpFreezeTime":
                        description = "When freezing of the adaption is trigged, it will be frozen for this time period. Resolution is 0.1 s.";


                        break;
                    case "PurgeProt.m_AirDer":
                        description = "Filtered change speed of load. Resolution is 1 mg/c.";


                        break;
                    case "PurgeProt.TotalPurged":
                        description = "Total mass of air and fuel purged. Resolution is 0.1 g.";


                        break;
                    case "PurgeProt.FuelPurged":
                        description = "Total mass of fuel purged. Resolution is 0.1 g.";


                        break;
                    case "PurgeProt.LambdaFilt":
                        description = "Filter value of Lambda.LambdaInt. Resolution is 0.01 %.";


                        break;
                    case "PurgeProt.P_Fac":
                        description = "P factor of purge adaption. Resolution is 1.";


                        break;
                    case "PurgeProt.I_Fac":
                        description = "I factor of purge adaption. Resolution is 1.";


                        break;
                    case "PurgeProt.AdpFreeze":
                        description = "Adaption freeze status.";


                        break;
                    case "PurgeProt.RampRestart":
                        description = "Status for ramp flow from zero.";


                        break;
                    case "PurgeProt.LocalMaxFuelFac":
                        description = "Maximum allowed fuelfac at actual load/rpm. Resolution is 0.1 %.";


                        break;
                    case "PurgeProt.PurgePercent":
                        description = "Purge flow/Air mass flow ratio. Resolution is 0.01 %.";


                        break;
                    case "PurgeProt.FlowFac":
                        description = "Flow compensation factor depending on ambient air pressure and HC-content. Resolution is 0.01.";


                        break;
                    case "PurgeProt.FlowOffsetFac":
                        description = "Adaptive offset factor of PurgeProt.FlowFac. Resolution is 0.01.";


                        break;
                    case "PurgeProt.ValveFreq":
                        description = "Actual purge valve frequency.";


                        break;
                    case "PurgeProt.HCContFiltFac":
                        description = "Actual filter factor for HC adaptiion. Resolution is 1.";


                        break;
                    case "PurgeProt.ValveOffset":
                        description = "Valve PWM temp offset. Resolution is 0.1 %.";


                        break;
                    case "PurgeProt.BoostI_Fac":
                        description = "Boost fuel regulator I factor. Resolution is 1.";


                        break;
                    case "PurgeProt.BoostP_Fac":
                        description = "Boost fuel regulator P factor. Resolution is 1.";


                        break;
                    case "PurgeCal.ST_PurgeEnable":
                        description = "Purge enabled or not.";


                        break;
                    case "PurgeCal.p_Diff16XSp":
                        description = "Pressure diff. support points for purge valve 16 Hz map and p_diff max flow table. Resolution is 0.1 kPa.";


                        break;
                    case "PurgeCal.p_Diff8XSp":
                        description = "Pressure diff. support points for purge valve 8 Hz map. Resolution is 0.1 kPa.";


                        break;
                    case "PurgeCal.ValveMap16":
                        description = "Purge valve map for 16 Hz. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.ValveMap8":
                        description = "Purge valve map for 8 Hz. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.q_Flow16YSp":
                        description = "Flow support points for purge valve 16 Hz map. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.q_Flow8YSp":
                        description = "Flow support points for purge valve 8 Hz map. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.PdiffMaxRefFlowTab":
                        description = "Maximum available air flow in respect to the pressure difference. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.m_AirLowSp":
                        description = "Support points for the airflow at negative transient adaption freeze. Resolution is 1 mg/c.";


                        break;
                    case "PurgeCal.m_AirHighSp":
                        description = "Support points for the airflow at positive transient adaption freeze. Resolution is 1 mg/c.";


                        break;
                    case "PurgeCal.m_AirDerLowTab":
                        description = "Change of load less than this value leads to freezing of the HC adaption. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.m_AirDerHighTab":
                        description = "Change of load gretaer than this value leads to freezing of the HC adaption. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.MaxOLTime1":
                        description = "Maximum time operating without updating the HC content in the purge air. After this time fast adaption is activated. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.MaxOLTime2":
                        description = "Maximum time operating without updating the HC content in the purge air. After this time fast adaption and start ramp is activated. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.CycleOffTime":
                        description = "Closing time for the purge valve during cycling in case of low HC contents in the purge air. Resolution is 1 s.";


                        break;
                    case "PurgeCal.PurgePercentInc":
                        description = "Purge percent increment at start ramp. Resolution is 0.01 %.";


                        break;
                    case "PurgeCal.PrgPerLimLow":
                        description = "Minimum purge percent to disable fast adaption and start ramp. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.AdpFuelFacLimLow":
                        description = "Minimum fuel factor to disable fast adaption and start ramp. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.AdpFreezeTimeBrake":
                        description = "Freeze time at brake if n_Engine < 1200 rpm. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.AdpFreezeTimeFC":
                        description = "Freeze time after fuelcut. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.AdpFreezeTimeOC":
                        description = "Freeze time after change from open to closed lambda control. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.AdpFreezeTimePosTrans":
                        description = "Freeze time at positive load transient. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.AdpFreezeTimeNegTrans":
                        description = "Freeze time at negative load transient. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.m_AirInletLim":
                        description = "M_AirInlet limit to freeze HC adaption. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.MaxAdpFreezeIndex":
                        description = "Maximum allowed ratio between the time the purge adaption is frozen resp. unfrozen. Resolution is 0.01 .";


                        break;
                    case "PurgeCal.HC100FastFiltFac":
                        description = "Filter factor for fast HC adaption at 100% HC. Resolution is 1.";


                        break;
                    case "PurgeCal.HC0FastFiltFac":
                        description = "Filter factor for fast HC adaption at 0% HC. Resolution is 1.";


                        break;
                    case "PurgeCal.HC100NormFiltFac":
                        description = "Filter factor for normal HC adaption at 100% HC. Resolution is 1.";


                        break;
                    case "PurgeCal.HC0NormFiltFac":
                        description = "Filter factor for normal HC adaption at 0% HC. Resolution is 1.";


                        break;
                    case "PurgeCal.HCContEvapFiltFac":
                        description = "Filter factor for HC adaption during tank diagnosis. Resolution is 1.";


                        break;
                    case "PurgeCal.HCContLimLow":
                        description = "Below this HC content the purge flow will be decreased. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.HCContLimCycle":
                        description = "Below this HC content the purge flow will be cycled. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.RampTimeUp":
                        description = "Max ramp up speed of purge flow. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.RampTimeUpEvap":
                        description = "Ramp speed of purge flow at tank diagnosis. Resolution is 0.1 s.";


                        break;
                    case "PurgeCal.P_Const":
                        description = "P constant for HC adaption. Resolution is 1.";


                        break;
                    case "PurgeCal.I_Const":
                        description = "I constant for HC adaption. Resolution is 1.";


                        break;
                    case "PurgeCal.n_Red":
                        description = "Engine speed where local flow/max fuelfac start to ramp down. n_Red > Idle.n_EngineNominal + n_IdleInt > Idle.n_EngineNominal - n_IdleInt > n_Min. Resolution is 1 rpm.";


                        break;
                    case "PurgeCal.n_IdleInt":
                        description = "+/- interval for idle speed. n_Red > Idle.n_EngineNominal + n_IdleInt > Idle.n_EngineNominal - n_IdleInt > n_Min. Resolution is 1 rpm.";


                        break;
                    case "PurgeCal.n_Min":
                        description = "Lowest engine speed to allow purge. n_Red > Idle.n_EngineNominal + n_IdleInt > Idle.n_EngineNominal - n_IdleInt > n_Min. n_Min is compensated with FlashSave.TechIdleOffset if Tech2 have reduced the nom idle (no compensation if idle is increased). Resolution is 1 rpm.";


                        break;
                    case "PurgeCal.Q_Red":
                        description = "Load where local flow/max fuelfac start to ramp down. Q_Red > Q_Idle + Q_IdleInt > Q_Idle - Q_IdleInt > Q_Min. Resolution is 0.1 g/s.";


                        break;
                    case "PurgeCal.Q_Idle":
                        description = "Idle load for idle max flow/idle max fuelfac. Q_Red > Q_Idle + Q_IdleInt > Q_Idle - Q_IdleInt > Q_Min. Resolution is 0.1 g/s.";


                        break;
                    case "PurgeCal.Q_IdleInt":
                        description = "+/- interval for idle load. Q_Red > Q_Idle + Q_IdleInt > Q_Idle - Q_IdleInt > Q_Min. Resolution is 0.1 g/s.";


                        break;
                    case "PurgeCal.Q_Min":
                        description = "Lowest load to allow purge. Q_Red > Q_Idle + Q_IdleInt > Q_Idle - Q_IdleInt > Q_Min. Resolution is 0.1 g/s.";


                        break;
                    case "PurgeCal.MaxFuelFac":
                        description = "Maximum allowed fuelfac. Resolution is 1 %.";


                        break;
                    case "PurgeCal.IdleMaxFuelFac":
                        description = "Maximum allowed fuelfac at idle. Resolution is 1 %.";


                        break;
                    case "PurgeCal.MaxFlow":
                        description = "Maximum allowed flow. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.IdleMaxFlow":
                        description = "Maximum allowed flow at idle. Resolution is 1 mg/s.";


                        break;
                    case "PurgeCal.T_VlvOffset100":
                        description = "Air inlet temp where 100% of offset factor is used. Resolution is 1 °C.";


                        break;
                    case "PurgeCal.T_VlvOffset0":
                        description = "Air inlet temp where offset factor starts to be used. Resolution is 1 °C.";


                        break;
                    case "PurgeCal.VlvOffsetFac":
                        description = "Valve PWM temp offset factor. Resolution is 0.1 %.";


                        break;
                    case "PurgeCal.t_FuelInjMin":
                        description = "Minimum allowed fuel injection time to allow purge. Resolution is 1 us.";


                        break;
                    case "PurgeCal.BoostI_Const":
                        description = "Boost fuel regulator I constant. Resolution is 1.";


                        break;
                    case "PurgeCal.BoostP_Const":
                        description = "Boost fuel regulator P constant. Resolution is 1.";


                        break;
                    case "PurgeCal.T_EngineLim":
                        description = "Minimum engine temperature to allow purge. Resolution is 1 °C.";


                        break;
                    case "SAIProt.ST_SAIReq":
                        description = "State of SAI function";


                        break;
                    case "SAIProt.SAI_Status":
                        description = "Current reason for stop of SAI 2: Voltage Protection 4: Load Limit 8: Temp Air Inlet 16: Load Limit for leaving lean clamp Note: Combinations of these are possible just add the components together";


                        break;
                    case "SAIProt.ST_SAILoadLimit":
                        description = "Set to 1 if load exceeds limit";


                        break;
                    case "SAIProt.ST_FuelActive":
                        description = "ST_FuelActive == 0: SAI fuelling activated. ST_FuelActive == 1: SAI fuelling disactivated. Bank 1";


                        break;
                    case "SAIProt.RampTiInit":
                        description = "Used to indicate when ramp is initiated";


                        break;
                    case "SAIProt.pump_ready":
                        description = "SAI pump has finished";


                        break;
                    case "SAIProt.SAI_has_been_stopped":
                        description = "Used to indicate when SAI has been interupted";


                        break;
                    case "SAIProt.buff_init":
                        description = "Local variabel to be used in average calc of SAIProt.m_loadave";


                        break;
                    case "SAIProt.BuffPoint":
                        description = "Local variabel to be used in average calc of SAIProt.m_loadave";


                        break;
                    case "SAIProt.ST_SAIPumpPh1":
                        description = "Flag to indicate that pump is started in the regular SAI control.";


                        break;
                    case "SAIProt.ST_SAIPumpPh2":
                        description = "After SAI has finished the pump is hold on for SAICal.N_SAIPumpDelay comb. This flag indicate when the pump is in this state. This delay was introduced to avoid rich spikes after SAI fuel is turned off.";


                        break;
                    case "SAIProt.ST_LeanClampLoadLim":
                        description = "Load limit flag for switching off Lean Clamp";


                        break;
                    case "SAIProt.ST_ReCalcBefSt":
                        description = "Flag to indicate to recalc SAI when engine starts";


                        break;
                    case "SAIProt.SAI_ActThisCycl":
                        description = "Indicate if SAI has been active this driving cycle";


                        break;
                    case "SAIProt.N_PumpStart":
                        description = "Number of combustions that SAI should be delayed after start of engine if AllowStart is set. Resolution is combustion.";


                        break;
                    case "SAIProt.N_PumpStop":
                        description = "Number of combustions that SAI should be active. Resolution is combustion.";


                        break;
                    case "SAIProt.RampFac":
                        description = "Ramp factor multiplied with requested SAI compensation. Factor used to ramp when SAI is switched ON or OFF. Resolution is 1.";


                        break;
                    case "SAIProt.m_FuelFac":
                        description = "Additative SAI load rpm compensation factor. 4-cyl or bank1 - 6cyl. Resolution is 0.01 mg/c.";


                        break;
                    case "SAIProt.N_FuellingStart":
                        description = "Combustions after start when fuelling start. Resolution is 1 Comb.";


                        break;
                    case "SAIProt.RampOffset":
                        description = "Offset where the ramping will start from";


                        break;
                    case "SAIProt.n_CombCount":
                        description = "Used to store combustion counter";


                        break;
                    case "SAIProt.m_loadave":
                        description = "Average load the last 500ms during SAI active";


                        break;
                    case "SAIProt.m_AirInjSAI":
                        description = "Air injected by the SAI Pump";


                        break;
                    case "SAIProt.LoadBuff":
                        description = "Buffer to calculate average MAF.m_AirInletFuel";


                        break;
                    case "SAIProt.m_AirInjReq":
                        description = "SAI air requested to inject as a function of start temperature of water. Resolution is 1 mg/c.";


                        break;
                    case "SAIProt.ST_TOutOfRange":
                        description = "Takes a sample of the In.T_AirInlet when SAI starts";


                        break;
                    case "SAIProt.t_timestamp":
                        description = "Time stamp to calculate load average";


                        break;
                    case "SAIProt.t_Ramp_time":
                        description = "Used to evaluate rampfactors in SAI. Bank 1. Resolution is 1 ms.";


                        break;
                    case "SAICal.n_EngineYSP":
                        description = "Engine speed support points for SAI map. Resolution is 1 rpm.";


                        break;
                    case "SAICal.FuellingMap":
                        description = "Additative SAI fuelling Bank 1 on V6. Resolution is 0.01 mg/c.";


                        break;
                    case "SAICal.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "SAICal.m_AirInletLimit":
                        description = "SAI function just enabled if airinlet is under this limit. Resolution is 1 mg/c. Interval is every combustion.";


                        break;
                    case "SAICal.N_PumpStart":
                        description = "Combustions after start when SAI pump starts. Resolution is 1 comb.";


                        break;
                    case "SAICal.N_PumpStop":
                        description = "Combustions after start when SAI pump stops. Resolution is 1.";


                        break;
                    case "SAICal.N_FuellingStart":
                        description = "Combustions after start when fuelling starts Bank 1 on V6. Resolution is 1 Comb.";


                        break;
                    case "SAICal.N_ClosedLoopDelay":
                        description = "Combustions after hardware check when closed loop is allowed. SAI Lean clamp will also be enabled after this delay. Lambda.Status = 18 when this delay is active. Resolution is 1 Comb.";


                        break;
                    case "SAICal.Testmode":
                        description = "0: SAI function disabled 1: Normal SAI mode 2: Set allow_start to \"1\", then return to mode 1. Resolution is 1 comb.";


                        break;
                    case "SAICal.t_RampTimePos":
                        description = "Ramp time for additative SAI fuelling, positive step. Bank 1 on V6. Resolution is 0.1 s.";


                        break;
                    case "SAICal.t_RampTimeNeg":
                        description = "Ramp time for additative SAI fuelling, negative step. Bank 1 on V6. Resolution is 0.1 s.";


                        break;
                    case "SAICal.p_AltCompSP":
                        description = "Support points for high altitude SAI fuel compensation. Resolution is 0.1 kPa.";


                        break;
                    case "SAICal.AltComp":
                        description = "High altitude SAI fuel compensation. Resolution is 0.1 kPa.";


                        break;
                    case "SAICal.T_MinAirInlet":
                        description = "SAI is disabled if In.T_AirInlet is below this limit. Resolution is 1 grader.";


                        break;
                    case "SAICal.T_MaxAirInlet":
                        description = "SAI is disabled if In.T_AirInlet is below this limit. Resolution is 1 grader.";


                        break;
                    case "SAICal.m_AirSAIMAP":
                        description = "Air injected during a period of 500 ms. Resolution is 1 mg/c.";


                        break;
                    case "SAICal.m_AirInjReq":
                        description = "SAI air requested to inject as a function of start temperature of water. Resolution is 1 mg/c.";


                        break;
                    case "SAICal.N_SAIPumpDelay":
                        description = "Number of comb after SAI stopped that pump will continue to run. This function was introduced to avoid rich spikes after SAI fuel is turned off. Resolution is 1 mg/c.";


                        break;
                    case "SAICal.m_AirLimLeanClamp":
                        description = "Lean Clamp is just enabled if load is below this limit. Resolution is 1 mg/c.";


                        break;
                    case "Start.RestartFac":
                        description = "Actual restart factor for start fuel and afterstart enrichments. Resolution is 0.001 (0.1%).";


                        break;
                    case "StartProt.m_FuelActOut":
                        description = "M_FuelActual inclusive factor from rpm TAB.";


                        break;
                    case "StartProt.ST_Started":
                        description = "Indicate that engine has been started. This flag is used to initiate restart parameters. \"ON\" - Engine have been started. \"--\" - Engine not started.";


                        break;
                    case "StartProt.CombCnt":
                        description = "Combustion counter used to detect engine started.";


                        break;
                    case "StartProt.m_FuelActual":
                        description = "Actual fuel mass before engine has started. Resolution is 0.01 mg/c.";


                        break;
                    case "StartProt.t_EngineStop":
                        description = "Number of seconds engine have been stopped. Resolution is 1 sec.";


                        break;
                    case "StartProt.t_BefStart":
                        description = "Actual injection time used for the before start. Resolution is 1 ms.";


                        break;
                    case "StartProt.HighAltFactor":
                        description = "High altitude compensation factor, depending on engine temperature and ambient pressure";


                        break;
                    case "StartCal.T_EngineXSP":
                        description = "t_Engine support points for ScaleFacRpmMap";


                        break;
                    case "StartCal.n_EngineYSP":
                        description = "n_Engine support points for ScaleFacRpmMap";


                        break;
                    case "StartCal.ScaleFacRpmMap":
                        description = "Fuelfactor wich scales down crankfuel when engine speed rises. The ramping makes the change to HFM calculated fuel smooth.";


                        break;
                    case "StartCal.m_FuelBasic":
                        description = "Basic fuel mass per combustion. Resolution is 0.01 mg/c.";


                        break;
                    case "StartCal.T_EngineSP":
                        description = "Engine temperature support points for start fuel. Resolution is 1 °C.";


                        break;
                    case "StartCal.EnrFacTab":
                        description = "Enrichment factor for basic injection mass during start, depending on water temperature. Resolution is 0.01 (1%).";


                        break;
                    case "StartCal.EnrFacE85Tab":
                        description = "Enrichment factor for basic injection mass during start for E85, depending on water temperature. Resolution is 0.01 (1%).";


                        break;
                    case "StartCal.t_RestartSP":
                        description = "Support points for restart factor. Time engine has been turned of. Resolution is 1 sec.";


                        break;
                    case "StartCal.RestartFacTab":
                        description = "Restart factor table depending on the time engine has been turned of. The restart factor affects restartfuel and both afterstart enrichments. Resolution is 0.001 (0.1%).";


                        break;
                    case "StartCal.RestTempLim":
                        description = "When Engine temperature is below this limit will the restart factor be used. Resolution is 1 °C.";


                        break;
                    case "StartCal.RpmStartLim":
                        description = "Engine speed limit for detection of engine started. Resolution is 1 rpm.";


                        break;
                    case "StartCal.CombStartLim":
                        description = "Number of combustions above \"RpmStartLim\" to detect engine started. Resolution is 1 combustion.";


                        break;
                    case "StartCal.n_CombSP":
                        description = "Support points for table including factor depending on number of combustions. Resolution is 1 combustion.";


                        break;
                    case "StartCal.CombFacTab":
                        description = "Table including startfactor depending on number of combustions since cranking starts. Resolution is 0.01 (1%).";


                        break;
                    case "StartCal.m_FuelBefStart":
                        description = "Fuelmass used for the before start. Resolution is 1 mg.";


                        break;
                    case "StartCal.t_BefStRunCold":
                        description = "The engine must have been running for at least this time to trigg the before start again when water temperature is under the T_BefStEngine temperature. Resolution is 1 sec.";


                        break;
                    case "StartCal.t_BefStRunWarm":
                        description = "The engine must have been running for at least this time to trigg the before start again when water temperature is over the T_BefStEngine temperature. Resolution is 1 sec.";


                        break;
                    case "StartCal.T_BefStEngine":
                        description = "If the engine temperature is higher than this temp, the engine must have been running for at least t_BefStRunWarm time to trigg the before start again. If engine temp is lower, the engine must have been running for at least t_BefStRunCold time to trigg the before start again. Resolution is 1 sec.";


                        break;
                    case "StartCal.TransEnrTime":
                        description = "If the engine have been running more than this time are afterstart enrichment of transient fuel not allowed any longer. Resolution is 1 msec.";


                        break;
                    case "StartCal.m_ReStBefFuel":
                        description = "Fuelmass used for the Restart Before Fuel. Resolution is 1 mg.";


                        break;
                    case "StartCal.HighAltFacMap":
                        description = "High altitude factor matrix. Used to enrich extra at very high altitudes. Multiplies with start fuel";


                        break;
                    case "StartCal.p_HighAltSP":
                        description = "High altitude factor support points";


                        break;
                    case "Trans.ST_Active":
                        description = "Indicate if fuel transients are activ. \"ON\" - Transients active \"--\" - Transients not active";


                        break;
                    case "Trans.m_ReqDelCopy":
                        description = "Airmass request delta used to trigg fuel transient adjustment. This variable is a copy of the \"TransProt.m_ReqDelta\". After the \"TransProt.m_ReqDelta\" is copied will it be cleared until next update on the 10ms routine. Interval is Every combustion.";


                        break;
                    case "TransProt.ActualFactor":
                        description = "Actual transient factor used to calculate fuel amount. Interval is Every combustion.";


                        break;
                    case "TransProt.m_ReqDelta":
                        description = "Actual airmass request delta calculated every 10ms. This delta is accumulated until it is cleared by the fuel transient routine that is called every combustion. Interval is Every 10 ms.";


                        break;
                    case "TransProt.AccTriggLim":
                        description = "Actual trigglimt for acceleration enrichment. RABGE : 0 - 2000 mg/c";


                        break;
                    case "TransProt.DecTriggLim":
                        description = "Actual trigglimt for deceleration enleanment. RABGE : -2000 - 0 mg/c";


                        break;
                    case "TransProt.m_RequestBuff":
                        description = "Buffer containing Airmass request. Used for calculation of m_Request delta. Interval is every 20 msec.";


                        break;
                    case "TransProt.m_ReqFilt":
                        description = "Used m_Request after filter. Interval is every 20 msec.";


                        break;
                    case "TransCal.ST_Enable":
                        description = "Enable or disable fuel transient handling.";


                        break;
                    case "TransCal.ST_DecNoLim":
                        description = "Enable or disable uper limit for negative fuel transient handling. 0 == Uper limit for enabled 1 == Uper limit for disabled";


                        break;
                    case "TransCal.AccRampFac":
                        description = "Factor (engine speed depended) multiplied with the last enrichment factor to ramp the enrichment back to 1.0: (Slower ramp after start) AccRampFac = TransCal.AccRampFac * TransProt3.EnrFac TransProt.ActualFactor = (last_factor-1.0) * AccRampFac + 1.0";


                        break;
                    case "TransCal.DecRampFac":
                        description = "Factor (engine speed depended) to divide the last decrement factor with to ramp the decrement back to 1.0 (1.0-last_factor) * \"DecRampFac\" \"ActualFactor\" = 1.0 - 1.0";


                        break;
                    case "TransCal.AccFacMap":
                        description = "Enrichment factor calculated when the delta area request is above trigg limit. This factor will be used if it is higher than the last factor multiplied with ramp value.";


                        break;
                    case "TransCal.DecFacMap":
                        description = "Decrement factor calculated when the delta area request is below trigg limit and StartAirMode=0. This factor will be used if it is lower than the last factor divided with ramp value.";


                        break;
                    case "TransCal.RpmSP":
                        description = "Engine speed suport points for the AccFacMap and DecFacMap.";


                        break;
                    case "TransCal.AccSP":
                        description = "Throttle area request delta, suport points for the enrichment map. ";


                        break;
                    case "TransCal.DecSP":
                        description = "Throttle area request delta, suport points for the decrement map. ";


                        break;
                    case "TransCal.AccTriggLim":
                        description = "Trigg limit for transient fuel enrichment. If the m_request delta is above this limit is a new fuelfactor read from the acceleration factor map and temperature compensation table. The trigg limit are depending on actual retardation factor.";


                        break;
                    case "TransCal.DecTriggLim":
                        description = "Trigg limit for transient fuel decrement. m_request delta is below this limit and if StartAirMode=0 is a new fuelfactor read from the deceleration factor map and temperature compensation table. The trigg limit are depending on actual acceleration factor.";


                        break;
                    case "TransCal.AccTriggSP":
                        description = "Support points for acc. trigg Table.";


                        break;
                    case "TransCal.DecTriggSP":
                        description = "Support points for dec. trigg Table.";


                        break;
                    case "TransCal.AccTempFacTab":
                        description = "Temperature depending acceleration enrichment.";


                        break;
                    case "TransCal.DecTempFacTab":
                        description = "Temperature depending deceleration factor.";


                        break;
                    case "TransCal.T_EngineSP":
                        description = "Engine temperature supportpoints for transient fuel tables.";


                        break;
                    case "TransCal.m_TriggMaxTab":
                        description = "If airmass request is above this engine speed depending limit will the m_Request delta be set to zero: if( latest m_Request < m_TriggMax ) m_ReqDelta = latest m_Request - previous m_Request else if( previous m_Request < m_TriggMax ) m_ReqDelta = latest m_Request - m_TriggMax else m_ReqDelta = 0 Interval is Every 10ms.";


                        break;
                    case "TransCal.RetMul":
                        description = "Extra enleanment for transient adjustment before ramp back to 1.000 start.";


                        break;
                    case "TransCal.AccMul":
                        description = "Extra enrichment for transient adjustment before ramp back to 1.000 start.";


                        break;
                    case "TransCal.RetMulConst":
                        description = "Number of combustions before ramp back to 1.000 could start.";


                        break;
                    case "TransCal.AccMulConst":
                        description = "Number of combustions before ramp back to 1.000 could start.";


                        break;
                    case "TransCal.Delay1":
                        description = "Start value in m_request buffer (actual m_request).";


                        break;
                    case "TransCal.Delay2":
                        description = "Compare value in m_request buffer (old m_request).";


                        break;
                    case "TransCal.FilterConstAir":
                        description = "Airmass filter constant for airmass control. Formula: 100 * ( new_value - old_value ) +/- Const Filt_value = old_value + Const if old_value > new_value -> - Const, if old_value <= new_value -> + Const Filt_value -> MAF.m_AirInletAir old_value -> old MAF.m_AirInletAir new_value -> MAF.m_AirInlet Const -> MAFCal.FilterConstAir If Const = 1 to 8, effective filter is used (shift. istead of division). (100 & 0 = 100% new, 200 & 1 = 50% new, 400 & 2 = 25% new (800 & 3 = 12.5% new, 1600 & 4 = 6.25% new etc.) . Resolution is 1 .";


                        break;
                    case "TransCal.n_FilterSP":
                        description = "Engine speed limit for choise of filter constant. if (In.n_Engine < n_FilterSP[0]) use FilterConstAir[0]; else if (In.n_Engine < n_FilterSP[1]) use FilterConstAir[1]; else if (In.n_Engine < n_FilterSP[2]) use FilterConstAir[2]; else use FilterConstAir[3];. Resolution is 1 rpm.";


                        break;
                    case "TransCal.T_DelayLim":
                        description = "Belove this water temperature limit are delay (TransCal.Delay) not used and actual delay are equal with 0. Resolution is 1 °C.";


                        break;
                    case "TransCal.n_DelayLim":
                        description = "Belove this engine speed limit are delay (TransCal.Delay) not used and actual delay are equal with 0. (Hysterse of 50 rpm). Resolution is 1 rpm.";


                        break;
                    case "TransCal.m_diffoffset":
                        description = "To be used as an offset for following condition: Allow negative transient handeling when: (MAF.m_AirInletFuel + TransCal.m_diffoffset) > m_Request. Resolution is 1 mg/C.";


                        break;
                    case "AftStProt1.ST_Start":
                        description = "Indicate that the enrichment should start.";


                        break;
                    case "AftStProt1.ST_Finished":
                        description = "Indicate that the enrichment is finished. \"1\" -> Enrichment finished. \"0\" -> Enrichment not finished.";


                        break;
                    case "AftStProt1.EnrFac":
                        description = "Afterstart fuel enrichment factor for this modul. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStProt1.FirstFac":
                        description = "First enrichment factor read when engine was started. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStProt1.DelayCnt":
                        description = "Combustion count value when next decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "AftStProt1.DecrDelay":
                        description = "Actual number of combustions between every decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "AftStProt2.ST_Start":
                        description = "Indicate that the enrichment should start.";


                        break;
                    case "AftStProt2.ST_Finished":
                        description = "Indicate that the enrichment is finished. \"1\" -> Enrichment finished. \"0\" -> Enrichment not finished.";


                        break;
                    case "AftStProt2.EnrFac":
                        description = "Afterstart fuel enrichment factor for this modul. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStProt2.FirstFac":
                        description = "First enrichment factor read when engine was started. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStProt2.DelayCnt":
                        description = "Combustion count value when next decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "AftStProt2.DecrDelay":
                        description = "Actual number of combustions between every decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "HotStProt2.EnrFac":
                        description = "Actual hotstart enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "TCompProt.EnrFac":
                        description = "Actual temperature compensation factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "TCompProt.T_EngEnrFac":
                        description = "Help variable to calculate temperature compensation factor Interval is 1000ms.";


                        break;
                    case "AftStCal1.ST_Enable":
                        description = "Enable the afterstart enrichment factor for this module. \"1\" -> Enrichment enabled. \"0\" -> Enrichment disabled.";


                        break;
                    case "AftStCal1.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "AftStCal1.EnrFacTab":
                        description = "Afterstart enrichment factor depending on engine temperature. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal1.EnrFacE85Tab":
                        description = "Afterstart enrichment factor depending on engine temperature for E85. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal1.DecrStep":
                        description = "Decrement step on enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal1.DecrDelayTab":
                        description = "Number of combustions between a decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "AftStCal2.ST_Enable":
                        description = "Enable the afterstart enrichment factor for this module. \"1\" -> Enrichment enabled. \"0\" -> Enrichment disabled.";


                        break;
                    case "AftStCal2.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "AftStCal2.EnrFacTab":
                        description = "Afterstart enrichment factor depending on engine temperature. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal2.EnrFacE85Tab":
                        description = "Afterstart enrichment factor depending on engine temperature for E85. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal2.DecrStep":
                        description = "Decrement step on enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "AftStCal2.DecrDelayTab":
                        description = "Number of combustions between a decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "AftSt1ExtraCal.p_AirAmbSP":
                        description = "Ambient pressure support points for high alt comp.";


                        break;
                    case "AftSt1ExtraCal.EnrFacMap":
                        description = "Afterstart enrichment extra offset factor depending on engine temperature and ambient pressure. Resolution is 0.01 (1%).";


                        break;
                    case "AftSt2ExtraCal.p_AirAmbSP":
                        description = "Ambient pressure support points for high alt comp.";


                        break;
                    case "AftSt2ExtraCal.EnrFacMap":
                        description = "Afterstart enrichment extra offset factor depending on engine temperature and ambient pressure. Resolution is 0.1 (1%).";


                        break;
                    case "AftSt2ExtraCal.ActualE85SP":
                        description = "Ethanol percent support points for afterstart enrichment extra offset. Resolution is 0.1 (1%).";


                        break;
                    case "TCompCal.ST_Enable":
                        description = "Enable the temperature compensation factor. \"1\" -> Temp comp enabled. \"0\" -> Temp comp disabled.";


                        break;
                    case "TCompCal.EnrFacXSP":
                        description = "Airmass support points for temp enrichment map. Resolution is 1 mg/c.";


                        break;
                    case "TCompCal.EnrFacYSP":
                        description = "Engine speed support points for temp enrichment map. Resolution is 1 rpm.";


                        break;
                    case "TCompCal.EnrFacMap":
                        description = "Load and rpm depending factor to adjust the the temperature factor from \"TCompCal.EnrFacTab\". EnrFac1 = f( °C ) range (1.0 - 2.0 ) EnrFac2 = f( mAir,Rpm ) range ( 0 - 255 )% EnrFac = ((EnrFac1 - 1.0) * EnrFac2)/100 + 1.0 . Resolution is 1%.";


                        break;
                    case "TCompCal.EnrFacE85Map":
                        description = "Load and rpm depending factor (for E85 fuel) to adjust the the temperature factor from \"TCompCal.EnrFacTab\". EnrFac1 = f( °C ) range (1.0 - 2.0 ) EnrFac2 = f( mAir,Rpm ) range ( 0 - 255 )% EnrFac = ((EnrFac1 - 1.0) * EnrFac2)/100 + 1.0 . Resolution is 1%.";


                        break;
                    case "TCompCal.EnrFacAutXSP":
                        description = "Airmass support points for temp enrichment map. Used in cars with automatic gearbox at temperatures above a limit (possible to calibrate). Resolution is 1 mg/c.";


                        break;
                    case "TCompCal.EnrFacAutYSP":
                        description = "Engine speed support points for temp enrichment map. Used in cars with automatic gearbox at temperatures above a limit (possible to calibrate). Resolution is 1 rpm.";


                        break;
                    case "TCompCal.EnrFacAutMap":
                        description = "Load and rpm depending factor to adjust the the temperature factor from \"TCompCal.EnrFacTab\". EnrFac1 = f( °C ) range (1.0 - 2.0 ) EnrFac2 = f( mAir,Rpm ) range ( 0 - 255 )% EnrFac = ((EnrFac1 - 1.0) * EnrFac2)/100 + 1.0 Used in cars with automatic gearbox at temperatures above a limit (possible to calibrate). Resolution is 1%.";


                        break;
                    case "TCompCal.T_EngineSP":
                        description = "Engine temperature support points for temperature compensation. If the engine temperature is higher than the last supportpoint, will the compensation factor be set to 1.000. Resolution is 1 °C.";


                        break;
                    case "TCompCal.EnrFacTab":
                        description = "Table for temperature compensation factor. If the engine temperature is higher than the last supportpoint, will the compensation factor be set to 1.000. The temp factor is also adjusted depending on rpm and airmass with a factor from \"TCompCal.EnrFacMap\". Resolution is 0.001 (0.1%).";


                        break;
                    case "TCompCal.EnrFacE85Tab":
                        description = "Table for temperature compensation factor for E85. If the engine temperature is higher than the last supportpoint, will the compensation factor be set to 1.000. The temp factor is also adjusted depending on rpm and airmass with a factor from \"TCompCal.EnrFacMap\". Resolution is 0.001 (0.1%).";


                        break;
                    case "TCompCal.T_EngineAutSP":
                        description = "Engine temperature support points for temperature compensation. If the engine temperature is higher than the last supportpoint, will the compensation factor be set to 1.000 Used in cars with automatic gearbox at temperatures above a limit (possible to calibrate). Resolution is 1 °C.";


                        break;
                    case "TCompCal.EnrFacAutTab":
                        description = "Table for temperature compensation factor. If the engine temperature is higher than the last supportpoint, will the compensation factor be set to 1.000. The temp factor is also adjusted depending on rpm and airmass with a factor from \"TCompCal.EnrFacMap\". Used in cars with automatic gearbox at temperatures above a limit (possible to calibrate). Resolution is 0.001 (0.1%).";


                        break;
                    case "TCompCal.T_EnrFacAutLim":
                        description = "Temperature limit used by the temperature compensation function in cars with automatic gearbox. In temperatures below this limit, table and map that are common for both manual and automatic cars shall be used. In temperatures above this limit, table and map that is specific for automatic cars shall be used. Resolution is 1 °C.";


                        break;
                    case "HotStCal1.ST_Enable":
                        description = "Enable the afterstart enrichment factor for this module. \"1\" -> Enrichment enabled. \"0\" -> Enrichment disabled.";


                        break;
                    case "HotStCal1.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "HotStCal1.EnrFacTab":
                        description = "Afterstart enrichment factor depending on engine temperature. Resolution is 0.001 (0.1%).";


                        break;
                    case "HotStCal1.EnrFacE85Tab":
                        description = "Afterstart enrichment factor depending on engine temperature for E85. Resolution is 0.001 (0.1%).";


                        break;
                    case "HotStCal1.DecrStep":
                        description = "Decrement step on enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "HotStCal1.DecrDelayTab":
                        description = "Number of combustions between a decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "HotStCal2.t_RestartSP":
                        description = "Support points for hotstart enrichment. Time engine has been turned of. Resolution is 1 sec.";


                        break;
                    case "HotStCal2.RestartFacTab":
                        description = "Adjustment on the hotstart enrichment factor depending on soaktime (soak_fac). HotStProt2.EnrFac = (HotStProt1.EnrFac-1.000) * soak_fac + 1.000 . Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal2.ST_Enable":
                        description = "Enable the afterstart enrichment factor for this module. \"1\" -> Enrichment enabled. \"0\" -> Enrichment disabled.";


                        break;
                    case "TransCal2.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "TransCal2.EnrFacTab":
                        description = "Afterstart enrichment factor depending on engine temperature. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal2.EnrFacE85Tab":
                        description = "Afterstart enrichment factor depending on engine temperature for E85. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal2.DecrStep":
                        description = "Decrement step on enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal2.DecrDelayTab":
                        description = "Number of combustions between a decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "TransCal3.ST_Enable":
                        description = "Enable the afterstart enrichment factor for this module. \"1\" -> Enrichment enabled. \"0\" -> Enrichment disabled.";


                        break;
                    case "TransCal3.T_EngineSP":
                        description = "Engine temperature support points. Resolution is 1 °C.";


                        break;
                    case "TransCal3.EnrFacTab":
                        description = "Afterstart enrichment factor depending on engine temperature. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal3.EnrFacE85Tab":
                        description = "Afterstart enrichment factor depending on engine temperature for E85. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal3.DecrStep":
                        description = "Decrement step on enrichment factor. Resolution is 0.001 (0.1%).";


                        break;
                    case "TransCal3.DecrDelayTab":
                        description = "Number of combustions between a decrement of the enrichment factor. Resolution is 1 combustion.";


                        break;
                    case "F_KnkDetAdap.FalseDetCnt":
                        description = "Indicates status of the detection. This counter counts up for soot and down for knock. Interval is After every evaluation.";


                        break;
                    case "F_KnkDetAdap.RKnkCntMap":
                        description = "Map for saving the real knock indications.";


                        break;
                    case "F_KnkDetAdap.RKnkCntCyl":
                        description = "Variable connected to the map RKnkCntMap.";


                        break;
                    case "F_KnkDetAdap.FKnkCntMap":
                        description = "Map for saving the false knock indications.";


                        break;
                    case "F_KnkDetAdap.FKnkCntCyl":
                        description = "Variable connected to the map FKnkCntCyl.";


                        break;
                    case "F_KnkDetCal.fi_SCEnabLim":
                        description = "The ignition offset needed for soot reduction.";


                        break;
                    case "F_KnkDetCal.fi_KnkOffsLim":
                        description = "Calibration value for the ignition offset.";


                        break;
                    case "F_KnkDetCal.p_SteadySLim":
                        description = "Limit for the intake air pressure variations.";


                        break;
                    case "F_KnkDetCal.n_SCMaxRPM":
                        description = "Engine speed limit for soot reduction.";


                        break;
                    case "F_KnkDetCal.t_IgnDetectLim":
                        description = "Calibration value for detection of doubledetect. ";


                        break;
                    case "F_KnkDetCal.MaxNrofNoDD":
                        description = "Maximum limit for no doubledetect counter.";


                        break;
                    case "F_KnkDetCal.m_AirDDMinLim":
                        description = "Min airmass value for detection of doubledetect. ";


                        break;
                    case "F_KnkDetCal.m_AirMin":
                        description = "Lowest airmass accepted for false knock detection.";


                        break;
                    case "F_KnkDetCal.FDCntMin":
                        description = "Lower limit for the F_KnkDet.FalseDetCnt counter. ";


                        break;
                    case "F_KnkDetCal.FDCntInit":
                        description = "The value of this variable decide what kind of status you start in. (Soot, Knock or normal mode)";


                        break;
                    case "F_KnkDetCal.SteadySPeriod":
                        description = "Number of steady combustions needed to be able to set ST_SteadyState.";


                        break;
                    case "F_KnkDetCal.SteadySPerShort":
                        description = "Number of steady combustions needed to be able to set the Steadystate_Short flag.";


                        break;
                    case "F_KnkDetCal.KnkFilterVal":
                        description = "Filter constant used for lowpass filter. ";


                        break;
                    case "F_KnkDetCal.EvalDelay":
                        description = "Number of combustions before evaluation after knock indication. ";


                        break;
                    case "F_KnkDetCal.X_KnkDecay":
                        description = "Reference decay factor for U_AveKnock. ";


                        break;
                    case "F_KnkDetCal.X_AirMass":
                        description = "Factor used for calculation of the AirMassHighLim value.";


                        break;
                    case "F_KnkDetCal.FDCntMax":
                        description = "Upper limit for the F_KnkDet.FalseDetCount counter.";


                        break;
                    case "F_KnkDetCal.fi_SCEnable":
                        description = "Ignition offset added when sootcontrol mode is enabled. ";


                        break;
                    case "F_KnkDet.fi_SootOffs":
                        description = "Ignition angle added due to soot ";


                        break;
                    case "F_KnkDet.NoDDCnt":
                        description = "NoDoubleDetect_cnt keeps record on how many combustions in a row without doubledetect.";


                        break;
                    case "F_KnkDet.U_AveKnk":
                        description = "Filtered In.U_Knock. Interval is Every combustion.";


                        break;
                    case "F_KnkDet.CycleCnt":
                        description = "This counter is used for counting the combustions before evaluation. Starts counting when knock has been indicated and stops after reaching the calibratied evaluation value. Interval is When knock has been indicated and until evaluation.";


                        break;
                    case "F_KnkDet.m_HighLim":
                        description = "The highest allowed value for the airmass. Interval is Every combustion before knock indication.";


                        break;
                    case "F_KnkDet.NoDDLast":
                        description = "Contains the number of combustions between the last two doubbledetects.";


                        break;
                    case "F_KnkDet.ST_SteadyState":
                        description = "This flag indicates i steadystate mode Interval is Every combustion.";


                        break;
                    case "F_KnkDet.ST_DoubleDetect":
                        description = "ST Doubledetect indicates when douledetect accures. The variable can be true or false. Interval is Every combustion.";


                        break;
                    case "F_KnkDet.ST_Active":
                        description = "Status flag for false indication. 0 - Normal knock calibration. 1 - Decreased knock sensitivity.";


                        break;
                    case "Ign.fi_OtherOff":
                        description = "This offset include air temp, engine temp, D/N compensation and Knock sound reduction ignition offsets and affects the knockair and knockfuel together with the knock offset. IgnTempProt.fi_Offset + DNComp.fi_Offset + KnkSoundRedProt.fi_Offset = Ign.fi_OtherOff. Resolution is 0.1 °.";


                        break;
                    case "Ign.fi_IgnCalcBefTrq":
                        description = "Copy of IgnProt.fi_IgnCalc before ignition torque request, used to calculate ESP ignition retardation";


                        break;
                    case "Ign.fi_Average":
                        description = "Average ignition timing between all cylinders. (Only bank 1 when V6). Resolution is 0.1 °.";


                        break;
                    case "Ign.fi_EngOff":
                        description = "Engine temp offset value. Resolution is 0.1 °.";


                        break;
                    case "Ign.fi_AirOff":
                        description = "Air temp offset value. Resolution is 0.1 °.";


                        break;
                    case "Ign.IgnMode":
                        description = "Indicating current ignition mode";


                        break;
                    case "Ign.IdleRampFinished":
                        description = "Indicate that fuelcut is allowed. This is done if the ramp not is decreasing and idle ignition is active.";


                        break;
                    case "Ign.ST_TrqIgnActive":
                        description = "Indicate if torque ignition are belove ordinary ignition. ON = Torque ignition activated. OFF = Normal ignition activated.";


                        break;
                    case "Ign.ActiveMap":
                        description = "Indicate wich absolute ignition map is activated: 'S' - Start ignition 'N' - Normal warm map 'I' - Idle map 'G' - Gas map 0 - No Absolute ign activated";


                        break;
                    case "IgnProt.fi_Min":
                        description = "Shows min allowed ignition angle. Resolution is 0.1 °.";


                        break;
                    case "IgnProt.fi_IgnExlLOff":
                        description = "Shows current ignition angle exl. Light Off ignition offset. Resolution is 0.1 °.";


                        break;
                    case "IgnProt.fi_ABS":
                        description = "Shows ignition angle output from absolute functions. Resolution is 0.1 °.";


                        break;
                    case "IgnProt.fi_IgnCalc":
                        description = "Shows ignition angle before ramping. Resolution is 0.1 °.";


                        break;
                    case "IgnProt.fi_Offset":
                        description = "Shows ignition angle output from offset functions. Resolution is 0.1 °.";


                        break;
                    case "IgnProt.fi_Ramp":
                        description = "High. Resolution ramp factor. Resolution is 0.001 °.";


                        break;
                    case "IgnProt.RampDir":
                        description = "Shows ramp direction and if ramp is working.";


                        break;
                    case "IgnProt.LastActiveMap":
                        description = "Indicate wich absolute ignition map was activated last ignition. This data is used to trigger ignition ramps.";


                        break;
                    case "IgnProt.fi_Ignition":
                        description = "Shows current ignition angle. Resolution is 0.1 °.";


                        break;
                    case "IgnCal.MinMap":
                        description = "Min allowed ignition map if TCM not active. Resolution is 0.1 °.";


                        break;
                    case "IgnCal.n_EngYSP":
                        description = "Support points for engine speed, min allowed ignition. Resolution is 1 rpm.";


                        break;
                    case "IgnCal.m_AirXSP":
                        description = "Support points for actual load, min allowed ignition. Resolution is 1 mg/c.";


                        break;
                    case "IgnCal.fi_RampInc":
                        description = "Rampvalue between different ignition functionallitys when ignition angle is increased. Resolution is 0.001 °.";


                        break;
                    case "IgnCal.fi_RampDecMan":
                        description = "Rampvalue between different ignition functionallitys when ignition angle is decreased. Manual cars. Resolution is 0.001 °.";


                        break;
                    case "IgnCal.fi_RampDecAut":
                        description = "Rampvalue between different ignition functionallitys when ignition angle is decreased. Automatic cars. Resolution is 0.001 °.";


                        break;
                    case "IgnCal.fi_Max":
                        description = "Max allowed ignition angle. Resolution is 0.1 °.";


                        break;
                    case "IgnCal.fi_MinLOffDrv":
                        description = "Minimum ignition at these conditions: IgnLOff.fi_Offset != 0 ECMStat.ST_PedalReleased != 0 ECMStat.ST_AutNeutral = 0";


                        break;
                    case "IgnIdleProt.n_Diff":
                        description = "Difference between nominal idle engine speed and actual engine speed. Resolution is 1.";


                        break;
                    case "IgnIdleProt.fi_Ignition":
                        description = "Actual idle ignition angle";


                        break;
                    case "IgnNormProt.fi_Map":
                        description = "Normal ignition map result value. Resolution is 0.1 °.";


                        break;
                    case "IgnNorm.fi_Ignition":
                        description = "Optimum ignition, copy of IgnNormProt.fi_Map";


                        break;
                    case "IgnStartProt.fi_Start":
                        description = "Actual start ignition. Resolution is 0.1 °.";


                        break;
                    case "IgnNormCal.ST_Enable":
                        description = "Enables/Disables normal ignition map.";


                        break;
                    case "IgnNormCal.Map":
                        description = "Normal ignition map. Resolution is 0.1 °.";


                        break;
                    case "IgnE85Cal.fi_AbsMap":
                        description = "Ignition map for E85 fuel. Resolution is 0.1 °.";


                        break;
                    case "IgnNormCal.m_AirXSP":
                        description = "Normal ignition map airmass site. Also used for gas map. Resolution is xxx.";


                        break;
                    case "IgnNormCal.n_EngYSP":
                        description = "Normal ignition RPM site. Also used for gas map. Resolution is 1.";


                        break;
                    case "IgnNormCal.fi_Step":
                        description = "Step of ignition within normal ignition map. Resolution is 0.1 °.";


                        break;
                    case "IgnNormCal.GasMap":
                        description = "Normal ignition map when Gas mode is active. Gets activated when FlashSave.ST_GasHybridAct is set (gets set by Tech2 on gas hybrid cars) and one cylinder failed injection. In this case Lambda.ST_GasActive gets set. At the same time diagnostic mode is forced into LOBD. Resolution is 0.1 °.";


                        break;
                    case "IgnIdleCal.ST_Enable":
                        description = "Enables/Disables idle ignition function.";


                        break;
                    case "IgnIdleCal.Tab":
                        description = "Idle ignition tab. The idle ignition will be enabled if engine is in idle mode (Idle.ST_Enable set) and the \"IgnIdleCal.ST_Enable\" is set. Resolution is 0.1 °.";


                        break;
                    case "IgnIdleCal.fi_Idle":
                        description = "Idle ignition constant for V6. First value cyl 1,3 and 5, second value cyl 2,4 and 6. Resolution is 0.1 °.";


                        break;
                    case "IgnIdleCal.m_AirXSP":
                        description = "Airmass support points for fi_IdleMap. Resolution is 1 mg/c.";


                        break;
                    case "IgnIdleCal.n_EngYSP":
                        description = "EGR ignition RPM site. Resolution is 1.";


                        break;
                    case "IgnIdleCal.fi_IdleMap":
                        description = "Idle ignition matrix for R4. Resolution is 0.1 .";


                        break;
                    case "IgnIdleCal.n_EngDiffSP":
                        description = "Idle ignition tab x site (rpm diff dependent). Resolution is 1.";


                        break;
                    case "IgnIdleCal.fi_MinTab":
                        description = "Min allowed basic idle ignition when IgnIdleCal.fi_Idle have been adjusted with knock adaption and temperature offset. Resolution is 0.1 °.";


                        break;
                    case "IgnIdleCal.n_EngMinSP":
                        description = "EGR ignition RPM site. Resolution is 1.";


                        break;
                    case "IgnIdleCal.TimeBefAct":
                        description = "Time after condition for idle ignition are fullfield to idle ignition should been used. Resolution is 1 msec.";


                        break;
                    case "IgnIdleCal.v_VehicleLim":
                        description = "Vehicle speed limit to activate idle ignition. Resolution is 0.1 km/h.";


                        break;
                    case "IgnStartCal.ST_Mode":
                        description = "Indicate when start ignition shold been used.";


                        break;
                    case "IgnStartCal.fi_StartMap":
                        description = "Start ignition angle depending on airtemp and rpm Conditions to enable Start Ignition: Engine started flag not set (ECMStat.ST_EngineStarted) or engine speed below \"IgnStartCal.n_EngLowLim\". Conditions to disable Start Ignition: Engine started flag set and engine speed above nominal idle speed. Resolution is 0.1 °.";


                        break;
                    case "IgnStartCal.T_AirSP":
                        description = "Start ignition angle depending on airtemperature. Resolution is 1 °C.";


                        break;
                    case "IgnStartCal.n_EngLowLim":
                        description = "If engine speed is below this limit will the start ignition always be active. Resolution is 1 rpm.";


                        break;
                    case "IgnStartCal.n_EngXSP":
                        description = "Engine speed support points for air and engine offset. Resolution is 1 rpm.";


                        break;
                    case "IgnKnk.fi_MeanKnock":
                        description = "Mean value of ignition retard on all cylinders. Resolution is 0.1 °.";


                        break;
                    case "IgnKnk.fi_Offset":
                        description = "Knock offset for each cylinder. IgnKnk.Index * IgnKnkProt.fi_OffNorm[Cyl] IgnKnk.fi_Offset[Cyl] = 100. Resolution is 0.1 °.";


                        break;
                    case "IgnKnk.fi_OffNorm":
                        description = "Ignition knock offset value without adjustment for index. Resolution is 0.1 °.";


                        break;
                    case "IgnKnk.fi_MaxOffset":
                        description = "Max ignition offset allowed for knocking. Resolution is 0.1 °.";


                        break;
                    case "IgnKnk.Index":
                        description = "Index for how much IgnKnkProt.fi_OffNorm should been adjustet with when IgnKnk.fi_Offset are calculated. Resolution is 0.01.";


                        break;
                    case "IgnKnk.AdpHighLim":
                        description = "Load limit were adaption should been updated. Result from table: IgnKnkCal.AdpHighLimTab. Resolution is 1 mg / c.";


                        break;
                    case "IgnLOff.fi_Offset":
                        description = "Knock offset for each cylinder. Resolution is 0.1 °.";


                        break;
                    case "IgnLOff.NrCombDelay":
                        description = "Number of combustions after Idle.StartAirMode changes mode from 1 to 2. Used to delay LO.";


                        break;
                    case "IgnKnkProt.KnockNumber":
                        description = "Number of uninterrupted knock for each cylinder. Resolution is 1.";


                        break;
                    case "IgnKnkProt.n_Engine":
                        description = "Engine speed for last knock. Resolution is 1 rpm.";


                        break;
                    case "IgnKnkProt.AdpLowLim":
                        description = "Load limit were adaption should been used. Result from table: IgnKnkCal.AdpLowLimTab. Resolution is 1 mg / c.";


                        break;
                    case "IgnKnkProt.fi_PartAdap":
                        description = "Between high and low load limit are adaption not updated but it's used partly. Resolution is 0.1 °.";


                        break;
                    case "Igntemperaturefi_Offset":
                        description = "Both air and engine temp offset value. Resolution is 0.1 °.";


                        break;
                    case "IgnLOffProt.ST_FirstTime":
                        description = "Ramp ignition angle to map value first time after engine start.";


                        break;
                    case "IgnLOffProt.fi_Offset":
                        description = "Light off offset value. Resolution is 0.1 °.";


                        break;
                    case "IgnLOffProt.TempOffset":
                        description = "Temporary light off offset value. Resolution is 0.1 °.";


                        break;
                    case "IgnLOffProt.NrCombustion":
                        description = "Number off combustions with light off ignition offset. This variable shows number off combustions before offset are set to 0.";


                        break;
                    case "IgnLOffProt.no_10ms":
                        description = "Number of 10ms periods that have passed since last time m_requestLO was updated";


                        break;
                    case "IgnLOffProt.m_requestbuf":
                        description = "Store m_request to be able to delay it Sample time = 10 ms";


                        break;
                    case "IgnLOffProt.m_requestLO":
                        description = "This is used in the map to calc light off ignition. It is a delayed copy of m_request.";


                        break;
                    case "IgnLOffProt.ST_LOStAftPowUp":
                        description = "Set to \"1\" if LO has started after powerup";


                        break;
                    case "IgnJerkProt.ST_NewAllowed":
                        description = "If new trigg of function are allowed.";


                        break;
                    case "IgnJerkProt.ST_Activated":
                        description = "If ignition anti jerk funktion are activated";


                        break;
                    case "IgnJerkProt.ST_PedalCond":
                        description = "If ignition anti jerk funktion are allowed due to Out.X_AccPedal. 0 - Not allowed 1 - Allowed";


                        break;
                    case "IgnJerkProt.n_Delta":
                        description = "Engine speed delta, used for enable function. Resolution is 1 rpm.";


                        break;
                    case "IgnJerkProt.n_DeltaLim":
                        description = "Engine speed delta limit for enable function. Resolution is 1 rpm.";


                        break;
                    case "IgnJerkProt.fi_Offset":
                        description = "Final ignition offset due to anti jerk. Resolution is 0.1 °.";


                        break;
                    case "KnkSoundRedProt.fi_Offset":
                        description = "Knock sound reduction ignition offset. This ignition offset is active when the normal ignition map is active and when the engine temperature is between or above the two temperature limits: \"KnkSoundRedCal.T_HighLim\" and \"KnkSoundRedCal.T_LowLim\". When the engine temperature is between the limits abowe is the offset calculated as follows: KnkSoundRedProt.fi_Offset = (In.T_AirInlet - KnkSoundRedCal.T_LowLim) * (s32)(map_offset)) / (KnkSoundRedCal.T_HighLim - KnkSoundRedCal.T_LowLim) Interval is Every combustion.";


                        break;
                    case "IgnKnkAdap.fi_OffsetAdap":
                        description = "Adaption for knock adaption. Resolution is 0.1 °.";


                        break;
                    case "IgnOffsCal.v_RampUpLim":
                        description = "Above this vehicle speed the ign. offset is ramped off. This is part of the D/N compensation. Resolution is 0.1 km/h.";


                        break;
                    case "IgnOffsCal.NCIgnNegRampStep":
                        description = "This is the step with which the DNComp.fi_NCOffset is decreased when the neutral control is disengaged and the In.n_GearBoxIn drops under IgnOffsCal.n_NCIgnNegRamp rpm limit. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.NCIgnPosRampStep":
                        description = "This is the step with which the DNComp.fi_NCOffset is increased when the neutral control is disengaged and the In.n_GearBoxIn increases or becomes 0. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.NCMaxNegRampTAB":
                        description = "This is the most negative ignition offset allowed from the neutral control ignition ramping. It's a table as function of m_request. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.NCMaxNegRampSP":
                        description = "Support points in m_Request for the NCMaxNegRampTAB. This is part of the D/N compensation. Resolution is mg/c.";


                        break;
                    case "IgnOffsCal.n_NCIgnNegRamp":
                        description = "The In.n_GearBoxIn must be lower than this limit to activate the the negative ramping of the ignition when neutral control is disengaged. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.fiRampStep1":
                        description = "This is the step with which the DNComp.fi_Offset is decreased with during the fast ramping of ignition. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.fiRampStep2":
                        description = "This is the step with which the DNComp.fi_Offset is increased with during the fast ramping of ignition. This is part of the D/N compensation. Resolution is 0.1 degree.";


                        break;
                    case "IgnOffsCal.DNCompSlow":
                        description = "Ignition offset controlled by the actual extra idle air due to D/N compensation and the engine temperature Used in the slow negative ign. ramp. Resolution is 0.1 °.";


                        break;
                    case "IgnOffsCal.DNCompFast":
                        description = "Ignition offset controlled by the actual extra idle air due to D/N compensation and the engine temperatureUsed in the fast negative ign ramp. Resolution is 0.1 °.";


                        break;
                    case "IgnOffsCal.Q_ExtraSP":
                        description = "SP for the extra q_air from the D/N compensation. Used in the DNComp map. Resolution is 0.01 g/s.";


                        break;
                    case "IgnOffsCal.fi_Offs":
                        description = "Ignition offset controled only by the application aid. Bank 1 on the V6 engine. Resolution is 0.1 °.";


                        break;
                    case "IgnOffsCal.fi_OffsCyl":
                        description = "Cylinder individual ignition offset controled only by the application aid. Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.ST_Enable":
                        description = "Enable knock ignition. \"ON\" - Knock ignition is enabled. \"--\" - Knock ignition is disabled.";


                        break;
                    case "IgnKnkCal.fi_Offset":
                        description = "Angle to reduce knock offset depending of numbers of knock in row for each cylinder. Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.m_AirXSP":
                        description = "Support points for actual load. Resolution is 1 mg/c.";


                        break;
                    case "IgnKnkCal.n_EngYSP":
                        description = "Support points for engine speed. Resolution is 1 rpm.";


                        break;
                    case "IgnKnkCal.fi_Map1MaxOffset":
                        description = "Max allowed knock offset angle (without knockindex). Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.fi_Ramp":
                        description = "Number of degres to retard knock offset for each combustion. Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.ReduceTime":
                        description = "Time to wait after knocking until the ramp starts to ramp the offset back to zero. Supportpoints = n_Engine / 400. Resolution is 1 ms.";


                        break;
                    case "IgnKnkCal.RampTime":
                        description = "Time between each step off offset back to zero. Resolution is 2 msec.";


                        break;
                    case "IgnKnkCal.AdapTimer":
                        description = "Timestamp between adaption are ramped back to 0 with step of 0.1 ° if load are belove limit. Resolution is 2 msec.";


                        break;
                    case "IgnKnkCal.IndexMap":
                        description = "Index map for how much IgnKnkProt.fi_OffNorm should been adjustet with when IgnKnk.fi_Offset are calculated. Resolution is 0.01.";


                        break;
                    case "IgnKnkCal.n_EngHyst":
                        description = "If engine speed have been changed more than this calibration data are ramp back to zero enabled direct. Resolution is 1 rpm.";


                        break;
                    case "IgnKnkCal.AdpHighLimTab":
                        description = "Above this load limit are adaption updated. Resolution is 1 mg/c.";


                        break;
                    case "IgnKnkCal.AdpLowLimTab":
                        description = "Above this load limit are adaption used. Resolution is 1 mg/c.";


                        break;
                    case "IgnKnkCal.MaxDiff":
                        description = "Max allowed differance between one cylinder and average of the other cylinders. This is only checked below low adaption limit. Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.MaxDiff2":
                        description = "Max allowed differance between all cylinders . Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.LoadLimTimer":
                        description = "First time load have been above high load limit isn't allowed to ramp back knock offset before this time have passed. Resolution is 2 msec.";


                        break;
                    case "IgnKnkCal.fi_OffsRelMax":
                        description = "Max offset relativ the average of the other cylinders. Resolution is 0.1 °.";


                        break;
                    case "IgnKnkCal.X_FalseDetReduce":
                        description = "Changes time delay before ramp back sets in. Less delay <- 16 -> More delay";


                        break;
                    case "IgnKnkCal.X_FalseDetRamp":
                        description = "Changes ramp rate. Faster ramp <- 16 -> Slower ramp ";


                        break;
                    case "IgnTempCal.ST_Enable":
                        description = "Enable temperature offset ignition. \"ON\" - Enabled. \"--\" - Disabled.";


                        break;
                    case "IgnTempCal.ST_ActiveAtIdle":
                        description = "If this bit is set will the temp ignition be activated also at idle.";


                        break;
                    case "IgnTempCal.T_AirYSP":
                        description = "Support points for offset, inlet air temperature. Resolution is 1 ° C. Interval is every 1000 ms.";


                        break;
                    case "IgnTempCal.T_EngYSP":
                        description = "Support points for offset, engine temperature. Resolution is 1 ° C. Interval is every 1000 ms.";


                        break;
                    case "IgnTempCal.n_EngXSP":
                        description = "Engine speed support points for air and engine offset. Resolution is 1 rpm.";


                        break;
                    case "IgnTempCal.AirMap":
                        description = "Air temperature offset map. Resolution is 0.1 °.";


                        break;
                    case "IgnTempCal.EngMap":
                        description = "Engine temperature offset map. Resolution is 0.1 °.";


                        break;
                    case "IgnTempCal.T_AirLim":
                        description = "Above this temp are ignition offset depending on air temp adjusted with index. Resolution is 1 °C.";


                        break;
                    case "IgnTempCal.T_EngLim":
                        description = "Above this temp are ignition offset depending on engine temp adjusted with index. Resolution is 1 °C.";


                        break;
                    case "IgnTempCal.AirLimIdle":
                        description = "If air temperature are above this limit and ignition air offset are belove 0 are temp offset used during idle. Resolution is 1 °C. Interval is every 1000 ms.";


                        break;
                    case "IgnLOffCal.ST_Enable":
                        description = "Enable temperature offset ignition. \"ON\" - Enabled. \"--\" - Disabled.";


                        break;
                    case "IgnLOffCal.TempLim":
                        description = "Max engine temp for light off ignition. Resolution is 1 °C.";


                        break;
                    case "IgnLOffCal.T_EngineSP":
                        description = "Support points for load. Resolution is 1 °C.";


                        break;
                    case "IgnLOffCal.CombTab":
                        description = "Number off combustions after start as a function of In.T_Engine with activated light off ignition offset. The lowest of CombTab and N_AirTab will be used -> stored in IgnLOffProt.NrCombustion. This double check will avoid a \"False\" trigg of LO. Example: After a cold start at -20 no LO is used. If engine stalls and is restarted again watertemp may have increased to a temperature where LO is active. To avoid this LO activation a double check is done with the T_AirInlet and the lowest number of comb is used. Resolution is 1.";


                        break;
                    case "IgnLOffCal.m_AirXSP":
                        description = "Support points for actual load. Resolution is 1 mg/c.";


                        break;
                    case "IgnLOffCal.n_EngYSP":
                        description = "Support points for engine speed. Resolution is 1 rpm.";


                        break;
                    case "IgnLOffCal.fi_MapOffset":
                        description = "Light off ignition offset matrix. Resolution is 0.1 °.";


                        break;
                    case "IgnLOffCal.p_AirAmbLow":
                        description = "External air pressure limit for using LightOff ignition. Below this limit, LightOff ignition is NOT used. Resolution is 0.1 kPa.";


                        break;
                    case "IgnLOffCal.p_AirAmbHigh":
                        description = "External air pressure limit for using LightOff ignition. Above this limit, LightOff ignition is used. Below but above IgnLOffCal.p_AirAmbLow, the Light off offset is ramped between the two values. Resolution is 0.1 kPa.";


                        break;
                    case "IgnLOffCal.n_CombAftSt":
                        description = "The LightOff ignition is NOT activated before this number of combustions after engine started has exceeded. This to solve problems with some cars that stops due to LightOff ignition too early after engine start. Resolution is 1 combustion.";


                        break;
                    case "IgnLOffCal.PosRampStep":
                        description = "After engine start and when the LightOff ignition become active, the LightOff ignition offset shall increase slowly to make the disturbance as small as possible. This calibration variable sets the step this offset shall make every 7.5ms. Resolution is 0.001 °/7.5 ms .";


                        break;
                    case "IgnLOffCal.NegRampStep":
                        description = "When the LightOff ignition become deactive due to that the: - temp limit has exceeded or - number of combustions with LightOff has exceeded the LightOff ignition offset is decreased slowly to make the disturbance as small as possible. This calibration variable sets the step this offset shall make every 7.5ms. Resolution is 0.001 °/7.5 ms .";


                        break;
                    case "IgnLOffCal.PosDeltaLim":
                        description = "Maximal increment of Light Off ignition offset when the start phase is over. Resolution is 0.1 °/7.5 ms .";


                        break;
                    case "IgnLOffCal.No10msDelay":
                        description = "Number of 20ms periods delay before m_request is copied to m_requestLO. Resolution is 20ms.";


                        break;
                    case "IgnLOffCal.ST_AllowRestart":
                        description = "0: Lightoff ignition will be restarted only after an ECU powerdown (15-20 min Ignkey off). Following starts without preceeding powerdown will LO be disactiveted. 1: Lightoff ignition will be restarted at every engine restart if the normal lightoff conditions are OK. 2: Lightoff ignition will be restarted only after an ECU powerdown (15-20 min Ignkey off). If engine is restarted before IgnLOffProt.NrCombustion is counted down to zero will it countinue with LO but no new value on IgnLOffProt.NrCombustion will be read.";


                        break;
                    case "IgnLOffCal.T_AirInletSP":
                        description = "Support points for N_AirTab. Resolution is 1 °C.";


                        break;
                    case "IgnLOffCal.N_AirTab":
                        description = "Number off combustions after start as a function of In.T_AirInlet with activated light off ignition offset. The lowest of CombTab and N_AirTab will be used -> stored in IgnLOffProt.NrCombustion. This double check will avoid a \"False\" trigg of LO. Example: After a cold start at -20 no LO is used. If engine stalls and is restarted again watertemp may have increased to a temperature where LO is active. To avoid this LO activation a double check is done with the T_AirInlet and the lowest number of comb is used. Resolution is 1.";


                        break;
                    case "IgnJerkCal.fi_Basic":
                        description = "Basic ignition offset witch are activated as son as engine speed delta are above limit and N_CombPart1 number of combustions have passed since last time. Resolution is 0.1 °.";


                        break;
                    case "IgnJerkCal.n_DiffXSP":
                        description = "Support points for offset, engine delta. Resolution is 0.1 °.";


                        break;
                    case "IgnJerkCal.fi_Tab":
                        description = "Anti jerk ignition offset Table. Resolution is 0.1 °.";


                        break;
                    case "IgnJerkCal.n_LimTabSP":
                        description = "Support points for engine speed delta limit to activate function. Resolution is 1 rpm.";


                        break;
                    case "IgnJerkCal.n_LimTab":
                        description = "Engine speed delta limit to activate function. Resolution is 1 rpm.";


                        break;
                    case "IgnJerkCal.N_CombPart1":
                        description = "Min number of combustions function should been active. If negative delta are detected during this time are number of combustions function are active increased with N_CombPart2. Resolution is 1 comb.";


                        break;
                    case "IgnJerkCal.N_CombPart2":
                        description = "Se description N_CombPart1. Resolution is 1 comb.";


                        break;
                    case "IgnJerkCal.fi_RampStep":
                        description = "Step of ignition offset during ramp back to 0. Resolution is 0.1 °.";


                        break;
                    case "IgnJerkCal.n_EnDelta":
                        description = "Min rpm delta for possibility to enable function. Resolution is 1 rpm.";


                        break;
                    case "IgnJerkCal.X_PedalLim":
                        description = "Above this limit are function only active IgnJerkCal.n_Comb. Resolution is 0.1 %.";


                        break;
                    case "IgnJerkCal.n_Comb":
                        description = "Number of combustions function should been active above pedal limit. Resolution is 1.";


                        break;
                    case "IgnJerkCal.T_EngLim":
                        description = "Temp limit for possibility to activate jerk offset. Resolution is 1 °C.";


                        break;
                    case "KnkSoundRedCal.fi_OffsMap":
                        description = "Knocksound reduction ignition offset map. Used to reduce knock sound with adjustment from Tech2. By adjusting the \"FlashSave.KnkSoundRedFac\" is the ignition offset from this map used. This offset is treated like a temperature offset and will affect the fuel and maximum air limitation. ";


                        break;
                    case "KnkSoundRedCal.T_LowLim":
                        description = "Below this inletair temp limit is the ignition offset for constant torque reduction always 0.";


                        break;
                    case "KnkSoundRedCal.T_HighLim":
                        description = "Abowe this inletair temp limit is the constant torque reduction offset taken directly from the map. Below this limit and abowe the KnkSoundRedCal.T_LowLim is the map ignition offset interpolated before it is copied to \"KnkSoundRedProt.fi_Offset\".";


                        break;
                    case "KnkSoundRedCal.ST_Enable":
                        description = "Activation of knock sound function.";


                        break;
                    case "KnkDet.ST_Knock":
                        description = "Indicate if engine is knocking on any cylinder. \"ON\" - Engine is knocking on one or more cylinders. \"--\" - Engine is not knocking on any cylinder. Interval is Every combustion.";


                        break;
                    case "KnkDet.ST_ClearIgnOff":
                        description = "Indicate if ignition offsets should been cleared with pedal released due to knock reference adaption. \"ON\" - Clear ignition offset. \"--\" - No action. Interval is Every combustion.";


                        break;
                    case "KnkDet.KnockCyl":
                        description = "Indicate wich cylinder engine is knocking on. If the byte is zero no knocking is detected. Byte 1 - Cyl 1 Byte 2 - Cyl 2 Byte 3 .. Interval is Every combustion.";


                        break;
                    case "KnkDet.RefValueActual":
                        description = "RefValueActal are actual reference level for knock detection based on KnkAdaptAdap.RefValueWind[0] and KnkAdaptAdap.RefValueWind[1]. The values are interpolated between the two variables. X-value for window 1 is KnkAdaptCal.RPMRefSP[0] and for window 2 is KnkAdaptCal.RPMRefSP[1]. RefValueActal is used by KnkDetProt.U_RefLevelActual ";


                        break;
                    case "KnkAdapt.IgnOffset":
                        description = "Ignition offset used while knock adaption samples are sampled. Resolution is 0.1 °.";


                        break;
                    case "KnkDetProt.X_Average":
                        description = "Number of readings for calculating average U_Knock signal. Resolution is 1.";


                        break;
                    case "KnkDetProt.Constant":
                        description = "Constant for calculation off knock reference level, this value is from KnkAdaptCal.ConstantTab. The value is used by KnkDetProt.U_RefLevelActual.";


                        break;
                    case "KnkDetProt.U_LevelActual":
                        description = "Actual value on the knock voltage used to detect knocking condition. The average value is calculated with the two last values on \"In.U_Knock\" for a specific cylinder. If the average value is higher than actual \"In.U_Knock\", will the \"In.U_Knock\" be copied to \"U_LevelActual\". If the average value is lower than \"In.U_Knock\" will the average value be copied to \"U_LevelActual\". Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.U_KnockCyl":
                        description = "Actual value on \"U_LevelActual\" for a specific cylinder. (Not used by software, only for application). Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.U_RefLevelActual":
                        description = "Actual reference voltage to detect knocking. KnkDetProt.U_RefLevelActual = \"Knock reference adaption level\" * KnkDetProt.Constant KnkDetProt.RefFactor The \"Knock reference adaption level\" = QAdapt.RefValue in conditions: KnkAdapCal.ST_QAdapt == 1 and KnkDetProt.NrOfRefAdapt1 == 0 and KnkDetProt.NrOfRefAdapt2 == 0 and QAdapt.RefValue > KnkDet.RefValueActual else is \"Knock reference adaption level\" = KnkDet.RefValueActual. Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.KnockWinOffs":
                        description = "Actual angle between ignition angle and start of knock window. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.KnockWinAngle":
                        description = "Actual angle between start and stop of knock window. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.RefFactor":
                        description = "Actual factor used to calculate the reference voltage for knockdetection KnkDetProt.U_RefLevelActual. This factor is from map KnkDetCal.RefFactorMap. If F_KnkDet.ST_Active is set (false knock detected) then is the map value decreased with: KnkDetProt.RefFactor = KnkDetProt.RefFactor / KnkDetCal.X_FalseDetRef ( More info about false knock detection in structs: F_KnkDet, F_KnkDetCal ) Interval is Every combustion.";


                        break;
                    case "KnkDetProt.U_RefLev2":
                        description = "Actual reference level to detect major knocking. KnkDetProt.U_RefLev2 = KnkDetProt.U_RefLevelActual * KnkDetCal.MulFacRef2 100 If In.U_knock are above this value are knocking detected. Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkDetProt.NrOfRefAdapt1":
                        description = "Number of adaptions performed. Added by Mea-TLn 2001-02-23";


                        break;
                    case "KnkDetProt.NrOfRefAdapt2":
                        description = "Number of adaptions performed. Added by Mea-TLn 2001-02-23";


                        break;
                    case "KnkDetProt.ST_EngTEnableKnk":
                        description = "0- Engine temp below watertemp limit for knock control. 1- Engine temp above watertemp limit for knock control. Added by Mea-TLn 2001-02-23";


                        break;
                    case "KnkDetProt.Time":
                        description = "Time variable used for knockadaption Added by Mea-TLn 2001-02-28";


                        break;
                    case "KnkDetProt.Time2":
                        description = "Time variable used for knockadaption Added by Mea-TLn 2001-02-28";


                        break;
                    case "KnkDetProt.T_EngKnkCntrlLim":
                        description = "Airinlet temp dependent engagement limit for knock control. Added by Mea-TLn 2001-03-01";


                        break;
                    case "KnkAdapt1Prot.BufferFilled":
                        description = "Indicate if buffer are filled and calculation off median value for reference level could start.";


                        break;
                    case "KnkAdapt1Prot.Finished":
                        description = "Indicate if calculation off median value are finished.";


                        break;
                    case "KnkAdapt1Prot.MaxLevel":
                        description = "Max reference value for knock detection depending on engine speed. Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkAdapt1Prot.FirstTimeCounter":
                        description = "Counter for use to avoid first ten simples inside actual window.";


                        break;
                    case "KnkAdapt1Prot.Counter":
                        description = "Counter used when U_Knock are saved in a buffer.";


                        break;
                    case "KnkAdapt1Prot.Buffer":
                        description = "Buffer where U_Knock are saved. Resolution is 1 mV.";


                        break;
                    case "KnkAdapt1Prot.RpmHyst":
                        description = "Actual engine speed hysteres depending if we are in window or not. Resolution is 1 rpm.";


                        break;
                    case "KnkAdapt1Prot.LoadHyst":
                        description = "Actual load hysteres depending if we are in window or not. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdapt1Prot.RefValue":
                        description = "Median value off U_Knock.";


                        break;
                    case "KnkAdapt1Prot.Temp":
                        description = "Buffer used during calculation off median value.";


                        break;
                    case "KnkAdapt1Prot.AdapFac":
                        description = "Weight factor to adjust In.U_knock before it's saved in buffer. Resolution is 0.001.";


                        break;
                    case "KnkAdapt1Prot2.BufferFilled":
                        description = "Indicate if buffer are filled and calculation off median value for reference level could start.";


                        break;
                    case "KnkAdapt1Prot2.Finished":
                        description = "Indicate if calculation off median value are finished.";


                        break;
                    case "KnkAdapt1Prot2.MaxLevel":
                        description = "Max reference value for knock detection depending on engine speed. Resolution is 1 mV. Interval is Every combustion.";


                        break;
                    case "KnkAdapt1Prot2.FirstTimeCounter":
                        description = "Counter for use to avoid first ten simples inside actual window.";


                        break;
                    case "KnkAdapt1Prot2.Counter":
                        description = "Counter used when U_Knock are saved in a buffer.";


                        break;
                    case "KnkAdapt1Prot2.Buffer":
                        description = "Buffer where U_Knock are saved. Resolution is 1 mV.";


                        break;
                    case "KnkAdapt1Prot2.RpmHyst":
                        description = "Actual engine speed hysteres depending if we are in window or not. Resolution is 1 rpm.";


                        break;
                    case "KnkAdapt1Prot2.LoadHyst":
                        description = "Actual load hysteres depending if we are in window or not. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdapt1Prot2.RefValue":
                        description = "Median value off U_Knock.";


                        break;
                    case "KnkAdapt1Prot2.Temp":
                        description = "Buffer used during calculation off median value.";


                        break;
                    case "KnkAdapt1Prot2.AdapFac":
                        description = "Weight factor to adjust In.U_knock before it's saved in buffer. Resolution is 0.001.";


                        break;
                    case "KnkAdapt2Prot.ActualWindow":
                        description = "What adaption window is active now. Resolution is 1.";


                        break;
                    case "KnkAdapt2Prot.IgnReduceCounter":
                        description = "Counter to count when ignoffset is set while knock adaption sampels are taken. This counter goes from 0 to 3. 0 - Waiting to set IgnOffset[Cyl] for last cyl (Cyl-1). 1 - Indicate that IgnOffset[Cyl] is set for last cyl and no other. 2 - One reduced ignition confirmed. 3 - Two reduced ignition confirmed. Take U_Knock sample and go for next cyl. Resolution is 1.";


                        break;
                    case "KnkAdapt2Prot.lastCyl":
                        description = "Cyl nr, comb before this comb. Resolution is 1.";


                        break;
                    case "KnkDetAdap.KnkCntMap":
                        description = "This map includes number of knock detections on specified load points. Interval is At every knock detection.";


                        break;
                    case "KnkDetAdap.KnkCntCyl":
                        description = "Number of knock detections on every specific cylinder. Interval is At every knock detection.";


                        break;
                    case "KnkAdaptAdap.RefValueWind":
                        description = "RefValueWind are a filtered median value of U_Knock for low and high knock adaption window. Knock adaption that is not finished is always reseted when the engine is restarted. The knock adaption is not active for a number of seconds (KnkAdaptCal.AdaptStartDelay) after start. If KnkAdapCal.ST_SmartGuess is set is the smart guess function active. Filtering is done to reduce variations in knock adaption. For more help read help KnockAdaption.";


                        break;
                    case "KnkAdaptAdap.RefValueLowWind":
                        description = "RefValueLowWind are a copy of KnkAdaptAdap.RefValueWind[0]. This it's done because the local_id.exe can't get the information of adress from symboltable.";


                        break;
                    case "KnkAdaptAdap.RefValueHighWind":
                        description = "RefValueHighWind are a copy of KnkAdaptAdap.RefValueWind[1]. This it's done because the local_id.exe can't get the information of adress from symboltable.";


                        break;
                    case "KnkAdaptAdap.RefValueWRaw":
                        description = "Referense value before filtering and range check. Added by MEA-TLn 2001-02-27.'";


                        break;
                    case "KnkDetCal.T_InletAirXSP":
                        description = "Air temp supportpoints for calculation of airtemp dependent watertemp limit for engagement of knock control replaces earlier fixed limit of 60 degrees. Added by MEA-TLn 2001-02-28.";


                        break;
                    case "KnkDetCal.T_EngKnkCntrl":
                        description = "Water temp table for calculation of airtemp dependent watertemp limit for engagement of knock control replaces earlier fixed limit of 60 degrees. Added by MEA-TLn 2001-02-28.";


                        break;
                    case "KnkDetCal.m_AirXSP":
                        description = "Load suportpoints for calculation of reference factor.";


                        break;
                    case "KnkDetCal.n_EngYSP":
                        description = "Engine speed suportpoints for calculation of reference factor.";


                        break;
                    case "KnkDetCal.LoadLimit":
                        description = "Below this loadlimit is knock detection disabled. Resolution is 1 mg/c.";


                        break;
                    case "KnkDetCal.RefFactorMap":
                        description = "Knock sensitivity map, used to map sensitivity for this engine type. KnkDetProt.RefFactor uses this map. ";


                        break;
                    case "KnkDetCal.KnockWinOffs":
                        description = "Angle between ignition angle and start of knock window depending on engine speed and load (OBS ! support points chared with KnkDetProt.RefFactorMap)";


                        break;
                    case "KnkDetCal.KnockWinAngle":
                        description = "Angle between start and stop of knock window depending on engine speed.";


                        break;
                    case "KnkDetCal.KnockWinAngleNS":
                        description = "Angle between start and stop of knock window depending on engine speed, engine not synced.";


                        break;
                    case "KnkDetCal.X_AverageTab":
                        description = "Number of readings for calculating average U_Knock signal. Resolution is 1 .";


                        break;
                    case "KnkDetCal.MulFacRef2":
                        description = "This factor are multiplicated with ordinary reference level. Knocking are detected if In.U_Knock are above this level. Resolution is 1 %.";


                        break;
                    case "KnkDetCal.n_LimWinOff":
                        description = "Engine speed limit for possibility to decrease knock window. Resolution is 1 rpm.";


                        break;
                    case "KnkDetCal.U_BattSP":
                        description = "Support points for KnkWinOffTab. Resolution is 0.1 V.";


                        break;
                    case "KnkDetCal.KnkWinOffTab":
                        description = "Table for how much knock window should been decreased with low battery.";


                        break;
                    case "KnkDetCal.RefShiftFactor":
                        description = "Reference factor for that replaces KnkDetProt.RefFactor at shifts if ( Ign.ST_TrqIgnActive ) { if ( KnkDetProt.RefFactor > KnkDetCal.RefShiftFactor ) { KnkDetProt.RefFactor = KnkDetCal.RefShiftFactor; } }";


                        break;
                    case "KnkDetCal.X_FalseDetRef":
                        description = "Increase factor of knockreference value when FalseDetMode > 0.";


                        break;
                    case "KnkDetCal.NrofMaxRefAdap":
                        description = "Number of adaptions until filtering starts working in both up and down. Before that number of adaptions value is filterd only when it is lower. Higher values are used directly. Added by Mea-TLn";


                        break;
                    case "KnkAdaptCal.AdaptPeriod":
                        description = "Min time between adaptions. Resolution is 1 msec.";


                        break;
                    case "KnkAdaptCal.AdaptStartDelay":
                        description = "Minimum time before first adaption. Added by MEA-TLn. Resolution is 1 msec.";


                        break;
                    case "KnkAdaptCal.X_RefValueFilt":
                        description = "Filter factor used for refvalue filtering. Added by MEA-TLn.";


                        break;
                    case "KnkAdaptCal.ST_Qadapt":
                        description = "0- Quickadaption disabled. 1- Quickadaption enabled. Added by MEA-TLn.";


                        break;
                    case "KnkAdaptCal.ST_SmartGuess":
                        description = "0- Smart guess disabled. 1- Smart guess enabled. Added by MEA-TLn.";


                        break;
                    case "KnkAdaptCal.MaxRef":
                        description = "Table for max allowed knock level reference depending engine speed.";


                        break;
                    case "KnkAdaptCal.IgnOffset":
                        description = "Ignition offset used when knock signal are sampled. Resolution is 0.1 °.";


                        break;
                    case "KnkAdaptCal.RpmHyst":
                        description = "Engine speed hysteres used for check if we are in window or not. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.LoadHyst":
                        description = "Load hysteres used for check if we are in window or not. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.RpmHigh":
                        description = "High engine speed limit for window 1. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.RpmLow":
                        description = "Low engine speed limit for window 1. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.LoadHigh":
                        description = "High load limit for window 1. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.LoadLow":
                        description = "Low load limit for window 1. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.ConstantTab":
                        description = "Constant table for calculation off knock reference level. X-support point variable is IgnKnk,fi_OffNorm (knock ignition offset). The table are used to increase the knock reference level. The variable KnkDetProt.Constant is using this table.";


                        break;
                    case "KnkAdaptCal.RpmHigh2":
                        description = "High engine speed limit for window 2. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.RpmLow2":
                        description = "Low engine speed limit for window 2. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.LoadHigh2":
                        description = "High load limit for window 2. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.LoadLow2":
                        description = "Low load limit for window 2. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.RpmRefSP":
                        description = "Support points for calculation of actual knock reference value. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.v_VehicleLim":
                        description = "Vehicle speed limit for knock reference adaption. The vehiclespeed must be above this limit to maintain a knock reference adaption. This limit is valid for both windows.";


                        break;
                    case "KnkAdaptCal.RefValueMin":
                        description = "Min allowed value for RefValueWind.";


                        break;
                    case "KnkAdaptCal.fi_OffsetSP":
                        description = "Knock offset support points for KnkAdaptCal.ConstantTab and KnkDetCal.X_AverageTab. Resolution is 0.1.";


                        break;
                    case "KnkAdaptCal.FacMinHigh":
                        description = "When low knock reference adaption are done are high knock reference adaption checked. Min allowed value = Low adaption * FacMinHigh / 100. Max allowed value = Low adaption * FacMaxHigh / 100.";


                        break;
                    case "KnkAdaptCal.FacMaxHigh":
                        description = "When low knock reference adaption are done are high knock reference adaption checked. Min allowed value = Low adaption * FacMinHigh / 100. Max allowed value = Low adaption * FacMaxHigh / 100.";


                        break;
                    case "KnkAdaptCal.RefValueWind":
                        description = "RefValueWind are median value of U_Knock for low and high knock adaption window. ";


                        break;
                    case "KnkAdaptCal.Max2Filt":
                        description = "Adapted knock reference values above this limit are used directly without respect to earlier values (no filtering). Added by MEA-TLn.";


                        break;
                    case "KnkAdaptCal.n_EngYSP1":
                        description = "Engine speed support points for WeightMap, window 1. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.m_AirXSP1":
                        description = "Airmass support points for WeightMap. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.WeightMap1":
                        description = "Map for posibility to adjust the value of In.U_Knock before it's are saved in buffer, window 1.";


                        break;
                    case "KnkAdaptCal.n_EngYSP2":
                        description = "Engine speed support points for WeightMap, window 2. Resolution is 1 rpm.";


                        break;
                    case "KnkAdaptCal.m_AirXSP2":
                        description = "Airmass support points for WeightMap. Resolution is 1 mg/c.";


                        break;
                    case "KnkAdaptCal.WeightMap2":
                        description = "Map for posibility to adjust the value of In.U_Knock before it's are saved in buffer, window 2.";


                        break;
                    case "QAdapt.RefValue":
                        description = "The filtered min knock value (Quick adaption value). This value is limited to a maximum of 300 (QADAPT_LIMIT not calibration data).";


                        break;
                    case "QAdaptCal.n_MaxLim":
                        description = "Max engine speed where Quick adaption i allowed. Abobe this limit is the latest calculated Quick adaption value used. ";


                        break;
                    case "QAdaptCal.m_MinLim":
                        description = "Min airmass where Quick adaption i allowed. Below this limit is the latest calculated Quick adaption value used. ";


                        break;
                    case "QAdaptCal.BlockSize":
                        description = "The number of combustions to evaluate minimum knock value. ";


                        break;
                    case "QAdaptCal.FilterVal":
                        description = "Filter value used for the low pass filter. ";


                        break;
                    case "QAdaptCal.X_MultFact":
                        description = "Multiplicative adjustment of block min calculation. tmp1 = ( BlockMin * QAdaptCal.X_MultFact ) + QAdaptCal.Offs";


                        break;
                    case "QAdaptCal.Offs":
                        description = "Offset adjustment of block min calculation. tmp1 = ( BlockMin * QAdaptCal.X_MultFact ) + QAdaptCal.Offs";


                        break;
                    case "SyncProt.DetectOkCnt":
                        description = "Actual correct detect counter. Resolution is 1 combustion.";


                        break;
                    case "SyncProt.lastCyl":
                        description = "Cylinder number for the last detection. Resolution is 1 combustion.";


                        break;
                    case "Sync.EngineCycleMode":
                        description = "Engine syncronisation mode 0 - Not synced 1 - Synced and adjusted 360° 2 - Synced and not adjusted ";


                        break;
                    case "Sync.detect1OK":
                        description = "Indicates for the detectsignal diagnose that the detect 1 signal have been ok during at least 20 combustion out of 50.";


                        break;
                    case "Sync.detect2OK":
                        description = "Indicates for the detectsignal diagnose that the detect 2 signal have been ok during at least 20 combustion out of 50.";


                        break;
                    case "SyncCal.n_LimMultiIgn":
                        description = "Rpm limit to go from multiign to normal ign.";


                        break;
                    case "SyncCal.t_DetectLimit":
                        description = "Min limit for detect signals during syncronisation of engine. Resolution is 1 us .";


                        break;
                    case "SyncCal.n_CombLimit":
                        description = "Number of correct, after eachother following, combustions before engine will syncronice. Resolution is 1 combustion.";


                        break;
                    case "SyncCal.n_CombMultiIgnTab":
                        description = "Number of combustions after ECMStat.ST_EngineStarted is set until the multiignition is disabled as a function of engine temperature. Resolution is 1 combustion.";


                        break;
                    case "SyncCal.T_EngMultiIgnSP":
                        description = "Engine temperature support points for SyncCal.n_CombMultiIgnTab. Resolution is 1 °C.";


                        break;
                    case "ROMChecksum.BottomOffFlash":
                        description = "Address for the bottom of Flash memory. This data is copyed from the PIArea and is used for the Flash checksum test.";


                        break;
                    case "ROMChecksum.TopOffFlash":
                        description = "Address for the top of Flash memory. This data is copyed from the PIArea and is used during reprogramming of Flash memory.";


                        break;
                    case "ROMChecksum.TopOffProgram":
                        description = "Address for the top of Program code. This data is copyed from the PIArea and is used during the Flash checksum test.";


                        break;
                    case "ROMChecksum.ActualChecksum":
                        description = "Actual 339 calculated checksum. The checksum is calculated from address \"BottomOffFlash\" to adddress \"TopOffProgram\".";


                        break;
                    case "ROMChecksum.UsedStackSize":
                        description = "Number of bytes used as stack in 339. The allowed stack size is 4k byte.";


                        break;
                    case "ROMChecksum.StackError":
                        description = "Indication if the stack size become bigger than 3500 byte.";


                        break;
                    case "ROMChecksum.Error":
                        description = "Error flag for the Flash checksum calculation. 1 = Checksum error 0 = No checksum error If the checksum is faulty 4 times after eachother will this flag bes set. The checksum is continously calculated in background. The calculation is done until 300 ms have passed since last start of background. But even if normal background takes 300ms ore more will atleast 400 bytes be checksum calculated. At 3000 rpm takes one checksum- calculation about 2 sec.";


                        break;
                    case "ROMChecksum.EOLProgOK":
                        description = "This data should be equal to '1' (49) if the end of line programming was successful. If this flag not is correct will the fuel be turned off and engine will not start.";


                        break;
                    case "DisplProt.AD_Scanner":
                        description = "AD value read from spare analog input (p_PowerSteer input, pin 16 on T7.7) Interval is Every 100 ms.";


                        break;
                    case "DisplProt.LambdaScanner":
                        description = "Lambda value from the Lambda scanner conected to spare analog input. This value is the result from one of three selectable conversion tables, DisplAdap.LamScannerTab1-3. Interval is Every 100 ms.";


                        break;
                    case "Performance.Mode":
                        description = "Engine performance mode 0 => 'E' Economy mode, limit engine airmass is set to the loadlimit for lambda control. The pedal map position pointer is decreased with 20 %. 1 => 'N' Normal mode. 2 => '2' The pedal map position pointer is increased with automatic sportmode factor.";


                        break;
                    case "Displ.ST_PassengerInSeat":
                        description = "Indicate if there is a passenger seated (Info from TWICE)";


                        break;
                    case "Displ.ST_DriverBeltOn":
                        description = "Indicate if driver has belt on (Info from TWICE)";


                        break;
                    case "Displ.ST_PassangerBeltOn":
                        description = "Indicate if passanger has belt on (Info from TWICE)";


                        break;
                    case "Displ.ST_SIDButtons":
                        description = "Status on the SID buttons: bit button 7 CLEAR 6 SET 5 - 4 + 3 NIGHT PANEL Interval is every 100 ms at an event.";


                        break;
                    case "DisplAdap.v_Factor":
                        description = "Adaption factor for compensation on In.v_Vehicle against In.v_Vehicle2.";


                        break;
                    case "DisplAdap.AmosPos":
                        description = "Menu position for AMOS text on SID";


                        break;
                    case "DisplAdap.AmosPos2":
                        description = "Extended menu position for AMOS text on SID";


                        break;
                    case "DisplAdap.FreezePos":
                        description = "Frozen menu position for AMOS text on SID";


                        break;
                    case "DisplAdap.IndexPos":
                        description = "Extended menu position for AMOS text on SID";


                        break;
                    case "DisplAdap.Index":
                        description = "Variables displayed on extended SID menu";


                        break;
                    case "DisplAdap.ST_Enable":
                        description = "Enable/Disable performance control, cruise text and adjustable max vehicle speed function. Conditions to activate the performance control: DisplAdap.ST_Enable = 1 and Out.CMD_CruiseLamp = 0 and In.ST_TCMSport = 0 and ( ECMStat.ST_SID_Node or AMOS is connected )";


                        break;
                    case "DisplAdap.ScannerSelect":
                        description = "This variable activates and selects one convertion table for calculating the lambda value depending on the AD Scanner input. if DisplAdap.ScannerSelect = 0 Function disabled else if DisplAdap.ScannerSelect = 1 DisplProt.LambdaScanner = f(DisplAdap.LamScannerTab1) else if DisplAdap.ScannerSelect = 2 DisplProt.LambdaScanner = f(DisplAdap.LamScannerTab2) else if DisplAdap.ScannerSelect = 3 DisplProt.LambdaScanner = f(DisplAdap.LamScannerTab3)";


                        break;
                    case "DisplAdap.AD_ScannerSP":
                        description = "Supportpoints for calculation of Lambda value";


                        break;
                    case "DisplAdap.LamScannerTab1":
                        description = "Convertiontable for calculation of scanner lambda value used for development. ";


                        break;
                    case "DisplAdap.LamScannerTab2":
                        description = "Convertiontable for calculation of scanner lambda value used for development. ";


                        break;
                    case "DisplAdap.LamScannerTab3":
                        description = "Convertiontable for calculation of scanner lambda value used for development. ";


                        break;
                    case "Crank.ST_EnginePosFound":
                        description = "This flag is set when the gap on the toothwheel is detected and cleared when the syncronisation is lost.";


                        break;
                    case "Crank.t_TDC_TDC_Delta":
                        description = "Delta change in timer ticks between two combustions. last_value_of_t_TDC_TDC - Crank.t_TDC_TDC = Crank.t_TDC_TDC_Delta . Resolution is 1 tick => 7.6 us.";


                        break;
                    case "Crank.ActiveDeltaCyl":
                        description = "Indication of wich cylinder the Crank.t_TDC_TDC_Delta value is calculated for.";


                        break;
                    case "Crank.Cylinder":
                        description = "Actual cylinder number: 0 => Cylinder 1 1 => Cylinder 2 2 => Cylinder 3 3 => Cylinder 4 4 => Cylinder 5 5 => Cylinder 6 Interval is Every combustion before calculation .";


                        break;
                    case "FlashSave.ST_GasHybridAct":
                        description = "When this flag and OBDAdap.ST_ActiveDiagSystem == LOBD the system will fit to a gas/gasoline converted car (used by Saab France). Following is different from a normal system when this flag is set: - The injectordriver diagnostic is disabled and this fault indication will only stop lambdacontrol (gas system is active). - Multiignition is only active during start and not when engine speed drops below 450 rpm.";


                        break;
                    case "FlashSave.KnkSoundRedFac":
                        description = "Factor for how much of the ignition knock sound reduction that shall be used. This factor is stored in flash during powerdown and the data will then be valid even if the battery is removed.";


                        break;
                    case "FlashSave.ST_ShiftUpLamp":
                        description = "Mode control for shift up indication lamp. This data can be controlled from Tech2 to overwrite the default enable/disable mode for shift up indication.";


                        break;
                    case "FlashSave.Tech2IdleOffset":
                        description = "Nominal idle rpm offset controlled by Tech2 to adjust idle rpm in Automatic Drive. This offset are added on the nominal idle rpm for drive when the engine temperature is abowe the last support point in the table for drive nominal Idle rpm (Last value in IdleCal.T_EngineSP) The Q_air constant is adjusted depending on the size of this offset to minimize the need for adaption to reduce fault in airflow request. The Q_air constant for drive is adjusted with an offset based on following formula: Q_offs = Air offset to adjust drive consant with n_nominalidle = Normal drive idle on warm engine Q_nominalidle = Normal drive air constant on warm engine n_offset = FlashSave.Tech2IdleOffset (n_nominalidle + n_offset) Q_offs = * Q_nominalidle - Q_nominalidle n_nominalidle ";


                        break;
                    case "FlashSave.RpmMaxFreeze":
                        description = "Save max rpm and other data to detect rpm overspeed. byte 0 MSB n_Engine byte 1 LSB n_Engine byte 2 MSB v_Vehicle byte 3 LSB v_Vehicle byte 4 MSB m_AirInlet byte 5 LSB m_AirInlet byte 6 MSB X_AccPedal byte 7 LSB X_AccPedal byte 8 MSB TotalRunTime (4byte, 32bit) byte 11 LSB TotalRunTime byte 12 ST_BrakeLight byte 13 ST_ClutchBrake";


                        break;
                    case "OBDWorstCase.U_SensPre":
                        description = "Is set to the probe sensor signal before catalyst converter";


                        break;
                    case "OBDWorstCase.U_SensPostDead":
                        description = "The highest voltage after fuelcut on the rear sensor signal ever.";


                        break;
                    case "OBDWorstCase.U_HiSensPost":
                        description = "The highest voltage on the rear sensor signal ever.";


                        break;
                    case "OBDWorstCase.mulFuelAdap":
                        description = "Biggest multicative fueladaption value.";


                        break;
                    case "OBDWorstCase.minMulFuelAdap":
                        description = "Smallest multicative fueladaption value.";


                        break;
                    case "OBDWorstCase.addFuelAdap":
                        description = "Biggest additative fueladaption value.";


                        break;
                    case "OBDWorstCase.minAddFuelAdap":
                        description = "Smallest additative fueladaption value.";


                        break;
                    case "OBDWorstCase.t_BLambdaStart":
                        description = "The longest time it takes to enter closed loop. Used when start temp is between -7 and +10 degrees.";


                        break;
                    case "OBDWorstCase.t_LimLambdaStart":
                        description = "The longest time it takes to enter closed loop. Used when start temp is less than -7 degrees.";


                        break;
                    case "OBDWorstCase.t_ALambdaStart":
                        description = "The longest time it takes to enter closed loop. Used when start temp is greater than +10 degrees.";


                        break;
                    case "OBDWorstCase.lambdaAtMaxTime":
                        description = "Longest time when lambda integrator is in max/min position, ever.";


                        break;
                    case "OBDWorstCase.amp_Bypass":
                        description = "Greatest pressure before throttle amplitude ever.";


                        break;
                    case "OBDWorstCase.m_boostOffset":
                        description = "The biggest diff between actual load and set value for boost regulator. Only when the actual load is bigger than set value.";


                        break;
                    case "OBDWorstCase.n_PosIdleOffset":
                        description = "Worst pos difference between actual rpm and nominal idle rpm.";


                        break;
                    case "OBDWorstCase.n_NegIdleOffset":
                        description = "Worst negative difference between actual rpm and nominal idle rpm.";


                        break;
                    case "OBDWorstCase.minBlockAdaption":
                        description = "Min of the throttle ad value when throttle is closed.";


                        break;
                    case "OBDWorstCase.maxBlockAdaption":
                        description = "Max of the throttle ad value when throttle is closed.";


                        break;
                    case "OBDWorstCase.MaxQAirThr":
                        description = "Maximum mean value latest airmass compare throttle for the qAirInlet diagnose.";


                        break;
                    case "OBDWorstCase.MinQAirThr":
                        description = "Minimum mean value latest airmass compare throttle for the qAirInlet diagnose.";


                        break;
                    case "OBDWorstCase.MaxQAirHiThr":
                        description = "Maximum mean value latest airmass compare throttle for the qAirInlet diagnose. Hi flow measurement.";


                        break;
                    case "OBDWorstCase.MinQAirHiThr":
                        description = "Minimum mean value latest airmass compare throttle for the qAirInlet diagnose. Hi flow measurement.";


                        break;
                    case "OBDWorstCase.T_EngPosStart":
                        description = "When the biggest positve diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the start engine temperature";


                        break;
                    case "OBDWorstCase.T_EngPosActual":
                        description = "When the biggest positive diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the actual engine temperature";


                        break;
                    case "OBDWorstCase.T_EngPosLimp":
                        description = "When the biggest positive diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the limphome engine temperature";


                        break;
                    case "OBDWorstCase.T_EngNegStart":
                        description = "When the biggest negative diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the start engine temperature";


                        break;
                    case "OBDWorstCase.T_EngNegActual":
                        description = "When the biggest negative diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the actual engine temperature";


                        break;
                    case "OBDWorstCase.T_EngNegLimp":
                        description = "When the biggest negative diff between the limphome engine coolant temperature and the actual engine cool. temperature occurs, then this value is updated with the limphome engine temperature";


                        break;
                    case "OBDWorstCase.v_PosChange":
                        description = "Biggest positive speed change between two diag samples, ever.";


                        break;
                    case "OBDWorstCase.v_NegChange":
                        description = "Biggest negative speed change between two diag samples, ever.";


                        break;
                    case "OBDWorstCase.p_AmbInl":
                        description = "Biggest diff between inlet manifold air pressure after throttle and external air pressure.";


                        break;
                    case "OBDWorstCase.p_AmbBef":
                        description = "Biggest diff between inlet manifold air pressure and air pressure before throttle";


                        break;
                    case "OBDWorstCase.p_InlBef":
                        description = "Biggest diff between inlet manifold air pressure after throttle and external air pressure";


                        break;
                    case "OBDWorstCase.n_CombSync":
                        description = "Number of combustions since engine was started.";


                        break;
                    case "OBDWorstCase.evapLeakFact":
                        description = "Worst evap leakage factor ever.";


                        break;
                    case "OBDWorstCase.Flank_pTank":
                        description = "Contains the biggest number of flankshifts on the p_fueltank siganl when the p_fueltank signal ripples with an amplitude above limit.";


                        break;
                    case "OBDWorstCase.missfCnt":
                        description = "Max nr of misfires during a block ever.";


                        break;
                    case "OBDWorstCase.missf1000":
                        description = "Max number of misfire during the 1000 first combustions from 850 rpm.";


                        break;
                    case "OBDWorstCase.catEvalValue":
                        description = "Filtered deviation difference";


                        break;
                    case "OBDWorstCase.catv6Result":
                        description = "Result from cat diag for v6.";


                        break;
                    case "OBDWorstCase.I_HeatPreHigh":
                        description = "Highest value of actual current through the front probe.";


                        break;
                    case "OBDWorstCase.I_HeatPreLow":
                        description = "Lowest value of actual current through the front probe.";


                        break;
                    case "OBDWorstCase.I_HtPostHigh":
                        description = "Lowest value of actual current through the rear probe.";


                        break;
                    case "OBDWorstCase.I_HtPostLow":
                        description = "Lowest value of actual current through the rear probe.";


                        break;
                    case "OBDWorstCase.p_AirInlDiff":
                        description = "Difference between inlet manifold air pressure after throttle and external air pressure.";


                        break;
                    case "OBDWorstCase.p_AirBefDiff":
                        description = "Difference between air pressure before throttle and external air pressure.";


                        break;
                    case "OBDWorstCase.t_NoVSignal":
                        description = "Longest time without v_speed after having fulfilled the nosignal criteria, ever.";


                        break;
                    case "OBDWorstCase.lambAdapRich":
                        description = "Adapted value to add to lean const.";


                        break;
                    case "OBDWorstCase.lambAdapLean":
                        description = "Adapted value to add to Rich const.";


                        break;
                    case "OBDWorstCase.LeanClampInt":
                        description = "The largest area for lambda integartor during LeanClamp (SAI) Divided by 10 for scaling. ";


                        break;
                    case "OBDWorstCase.TAirAtMaxTime":
                        description = "Longest time when T_AirInlet diag is in error criteria ever.";


                        break;
                    case "OBDWorstCase.nrOfHotStarts":
                        description = "Nr of hot fuel starts for CVS misfire diagnose";


                        break;
                    case "OBDWorstCase.T_EngQCThisDCY":
                        description = "Highest diff of ActualIn.T_Engine from one reading to another. approx 100 ms this driving cycle.";


                        break;
                    case "OBDWorstCase.T_EngQCAllDCY":
                        description = "Highest diff of ActualIn.T_Engine from one reading to another. approx 100 ms of all previous driving cycle.";


                        break;
                    case "OBDWorstCase.T_EngDeadComb":
                        description = "Maximum dead combustion (obdTEngDeadCombust) for TEngine until temp change (obdTEngTempChange). ";


                        break;
                    case "OBDWorstCase.T_CoolMaxRuntime":
                        description = "Maximum runtime before ok/error report for T Cooling diagnose";


                        break;
                    case "OBDWorstCase.T_CoolMinRuntime":
                        description = "Minimum runtime before ok/error report for T Cooling diagnose";


                        break;
                    case "Gear.Ratio":
                        description = "Actual gear ratio value. Calculated as followed: Rpm * 10 ratio = km/h Interval is Every 250ms.";


                        break;
                    case "GearAdap.ST_Automatic":
                        description = "Actual indication if vehicle is equiped with automatic gearbox status. 1 = Automatic gearbox detected 0 = Manual gearbox";


                        break;
                    case "GearAdap.ST_CruiseIncluded":
                        description = "Adaptive storage for ECMStat.ST_CruiseIncluded.";


                        break;
                    case "GearAdap.ST_ACRequested":
                        description = "Adaptive storage for ECMStat.ST_ACRequested.";


                        break;
                    case "GearAdap.ST_TractionControl":
                        description = "Adaptive storage for ECMStat.ST_TractionControl.";


                        break;
                    case "GearAdap.ST_TCSCANBased":
                        description = "Adaptive storage for ECMStat.ST_TCSCANBased.";


                        break;
                    case "GearAdap.ST_ESPEquiped":
                        description = "Adaptive storage for ECMStat.ST_ESPEquiped.";


                        break;
                    case "GearCal.Ratio":
                        description = "Ratio for locating actual gear. The Ratio is calculated as followed: Rpm * 10 ratio = km/h";


                        break;
                    case "GearCal.Range":
                        description = "Ratio range for locating actual gear. To detect a gear must the actual ratio be between GearCal.Ratio+GearCal.Range and GearCal.Ratio-GearCal.Range.";


                        break;
                    case "GearCal.T_ActivateSUL":
                        description = "Temperature limit for activating Shift Up Lamp. Below this temperature the SUL is not active. Resolution is 1 °C.";


                        break;
                    case "GearCal.m_SULHyst":
                        description = "Hysteresis to avoid flicering Shift Up Lamp, due to m_AirInlet close to switching value. Resolution is 1 mg/c.";


                        break;
                    case "GearCal.n_SULHyst":
                        description = "Hysteresis to avoid flicering Shift Up Lamp, due to n_Engine close to switching value. Resolution is 1 rpm.";


                        break;
                    case "GearCal.n_ActivateSUL":
                        description = "When In.n_Engine is above this engine speed, the Shift Up Lamp will be activated if the recognised gear isn't Reverse, Undefined or \"top gear\". Resolution is 1 rpm.";


                        break;
                    case "GearCal.t_SULTurnOnDly":
                        description = "Delay on time to avoid flicering Shift Up Lamp. The. Resolution of the delay will be depending on how often the Shift Up Function is called!. Resolution is 1 ms.";


                        break;
                    case "GearCal.t_SULTurnOffDly":
                        description = "Delay off time to avoid flicering Shift Up Lamp. The. Resolution of the delay will be depending on how often the Shift Up Function is called!. Resolution is 1 ms.";


                        break;
                    case "GearCal.m_SULAtGear":
                        description = "Airmass limits to activate Shift Up Lamp. First word value for first gear etc. Resolution is 1 mg/c.";


                        break;
                    case "GearCal.n_SULAtGear":
                        description = "Engine speed limits to activate Shift Up Lamp. First word value for first gear etc. Resolution is 1 rpm.";


                        break;
                    case "GearCal.ST_SULEnable":
                        description = "This calibration flag enables the shift up indication lamp function. The calibration shift points must of course also be calibrated to enable the lamp. Even if this flag is enabled or disabled, the SUL can be enabled or disabled with the FlashSave.ST_ShiftUpLamp variable that is controlled from Tech2. Tech2 can however only enable the SUL if the shiftpoints are calibrated.";


                        break;
                    case "WUSPCal.MaxTemp":
                        description = "Max start temperature for active WUSP (force automatic gearbox to use sport program). Resolution is 1 °C.";


                        break;
                    case "WUSPCal.MinTemp":
                        description = "Min start temperature for active WUSP (force automatic gearbox to use sport program). Resolution is 1 °C.";


                        break;
                    case "WUSPCal.Time":
                        description = "Time WUSP (force utomatic gearbox to use sport program) should been activated. Resolution is 1 msec.";


                        break;
                    case "In.ST_TCMFreezeFrameReq":
                        description = "Request to send Powertrain Freeze Frame to TCM UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is x ms.";


                        break;
                    case "In.v_GearBoxOut":
                        description = "Transmission output speed Used by the Differential Protection System. Resolution is 0.1 km/h. Interval is every 50 ms.";


                        break;
                    case "In.n_GearBoxIn":
                        description = "Transmission input rpm (turbine speed) Used to detect when the load is changed for the engine when gear is engaged. Resolution is 1 rpm. Interval is every 50 ms.";


                        break;
                    case "In.X_ActualGear":
                        description = "Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock up 12 - Gear 4, lock up Interval is every 50 ms.";


                        break;
                    case "In.I_Egas":
                        description = "Actual current from h_bridge. Resolution is 0.001 A. Interval is every 100 ms.";


                        break;
                    case "In.n_Engine":
                        description = "Engine speed UNIT : rpm MAX : 8000 MIN : 25 (set to 10 when engine starts to move) TRANS : V = P. Resolution is 1. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "In.t_TDC_TDC":
                        description = "Time between two top dead center, ia between tow combustions UNIT : us/timerticks MAX : 65000 MIN : 0 TRANS : V = P. Resolution is 7.6 us. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "In.t_IgnDetect1":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "In.t_IgnDetect2":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "In.U_KnockDiag":
                        description = "Diagnostic knock level for detection of shortcut between ECS and casette UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "In.U_Knock":
                        description = "Integrated voltage for knock detection UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "In.Q_AirInlet":
                        description = "Mass airflow sensor (gram/sec) UNIT : g/s MAX : 340 MIN : 2 TRANS : V = P * 100. Resolution is 0.01. Interval is Every combustion.";


                        break;
                    case "In.T_Engine":
                        description = "Engine coolant temperature UNIT : (C MAX : 150 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "In.T_AirInlet":
                        description = "Inlet air temperature UNIT : (C MAX : 140 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "In.p_AirAmbient":
                        description = "Barometric air pressure UNIT : kPa MAX : 120 MIN : 50 TRANS : V = P * 10. Resolution is 0.1. Interval is 250 ms.";


                        break;
                    case "In.p_AirInlet":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "In.p_AirBefThrottle":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "In.AD_ThrottlePot1":
                        description = "Throttle position AD value (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.AD_ThrottlePot2":
                        description = "Throttle position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.A_Throttle":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.A_Throttle2":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.AD_PedalPot1":
                        description = "Pedal position AD value from Master CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.AD_SlavePedalPot1":
                        description = "Pedal position AD value from Slave CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.AD_PedalPot2":
                        description = "Pedal position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.X_AccPedal":
                        description = "Pedal position UNIT : % MAX : 130 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 20 ms.";


                        break;
                    case "In.U_O2SensFront":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "In.U_O2SensRear":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "In.I_HeatO2SensFront":
                        description = "Front oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.I_HeatO2SensRear":
                        description = "Rear oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.p_FuelTank":
                        description = "Barometric air pressure UNIT : Pa MAX : 2500 MIN : -2500 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.v_Vehicle":
                        description = "Left front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "In.v_Vehicle3":
                        description = "Right front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "In.n_Wheel":
                        description = "Wheel speed UNIT : rpm MAX : 3000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.U_Batt":
                        description = "Battery voltage UNIT : V MAX : 25.5 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "In.ST_IgnitionKey":
                        description = "Ignition key status UNIT : Boolean (0 = ignition key off, 1 = ignition key on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_BrakeLight":
                        description = "Brake light status UNIT : Boolean (0 = brakelight off, 1 = brakelight lit) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_ClutchBrake1":
                        description = "Clutch brake from master processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.ST_ClutchBrake2":
                        description = "Clutch brake from slave processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_CruiseA1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.ST_CruiseB1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.ST_CruiseC1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.ST_CruiseA2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_CruiseB2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_CruiseC2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.U_Egr":
                        description = "EGR valve position UNIT : Volt MAX : 5 MIN : 0 TRANS : V = P * 1000. Resolution is 0.001. Interval is 20 ms.";


                        break;
                    case "In.ST_ACReq":
                        description = "AC request status UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.ST_ElevatedIdle":
                        description = "Elevated idle engine speed UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_CheckEngine":
                        description = "TCM check engine request UNIT : Boolean (0 = no request, 1 = turn on lamp) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.ST_CrankRequest":
                        description = "Engine cranking status UNIT : bool (0 = not cranking, 1 = cranking) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_TCMSport":
                        description = "TCM sport status UNIT : bool (0 = not sport mode, 1 = sport mode) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.ST_ReverseGear":
                        description = "Reverse gear status UNIT : bool (0 = not reverse gear, 1 = reverse gear) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "In.V_FuelTank":
                        description = "Fuel level UNIT : l (litre) MAX : 100 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "In.p_AC":
                        description = "AC pressure UNIT : Bar MAX : 30 MIN : 0 TRANS : V = P * 100. Resolution is 0.01 (in step of 0.25). Interval is 100 ms.";


                        break;
                    case "In.T_AirAmbient":
                        description = "Air temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "In.T_ACEvaporator":
                        description = "AC evaporator temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "In.v_Vehicle2":
                        description = "Vehicle speed, measured on the rear wheel, sent from MIU. UNIT : km/h MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "In.M_TCMLimitReq":
                        description = "Maximum engine torque request from TCM UNIT : Nm MAX : 400 MIN : -100 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "In.M_TCMLda":
                        description = "Mimum engine torque request from TCM UNIT : Nm MAX : 25 MIN : -100 TRANS : V = P . Resolution is 1. Interval is 10 ms.";


                        break;
                    case "In.t_TCMTrqLimDuration":
                        description = "Maximum engine torque duration UNIT : ms MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "In.I_LoadAlternator":
                        description = "Alternator load UNIT : Amp MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "In.X_GearLever":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 50 ms.";


                        break;
                    case "In.ImmoCode":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "In.ST_TCSTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms .";


                        break;
                    case "In.M_TCSTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "In.M_TCSLdaTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "In.M_TCSTotalReq":
                        description = "Total torque request from ESP equiped cars. The differance in torque between In.M_TCSTorqueReq and In.M_TCSTotalReq is taken with ignition retardation. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "In.T_TCMOil":
                        description = "Oil temperature in automatic gearbox";


                        break;
                    case "In.ST_TCSLdaTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms.";


                        break;
                    case "In.ST_ESPReq":
                        description = "ESP intervention Interval is Every 20 ms.";


                        break;
                    case "In.ST_vVehicle":
                        description = "OBDII diagnos status done by ABS 0 = Value OK 1 = Diagnos not done on left wheel 2 = Sensor fault on left wheel 16 = ABS Fault, diagnos not done by ABS 17 = ABS Fault, diagnos not done on left wheel 18 = ABS Fault, Sensor fault on left wheel";


                        break;
                    case "In.ST_CarType":
                        description = "Car type read from TWICE node 0 = 9-5 1 = 9-5 Estate 2 = Convertible 3 = 9-3";


                        break;
                    case "In.ST_BoostMeter":
                        description = "Indication from MIU if Turbo instrument exist";


                        break;
                    case "In.ST_TCMCSLU":
                        description = "Coast Lock up slip state 0 = No request 1 = Fuel cut inhibit 2 = Fuel cut allowed";


                        break;
                    case "In.ST_TCMShiftPattern":
                        description = "Active TCM shift pattern 0 = ECO 1 = Pwr 2 = Wusp 3 = Wnt 4 = US1 5 = US2 6 = Hot1 7 = Hot2 8 = Jerk 9 = Rep 10 = DS 11 = Tap U/D";


                        break;
                    case "In.ST_TCMIntervType":
                        description = "TCM torque request intervention type 0 = No intervention 1 = Reduce torque 2 = Increase torque";


                        break;
                    case "ActualIn.ST_TCMFreezeFrameReq":
                        description = "Request to send Powertrain Freeze Frame to TCM UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is x ms.";


                        break;
                    case "ActualIn.v_GearBoxOut":
                        description = "Transmission output speed Used by the Differential Protection System. Resolution is 0.1 km/h. Interval is every 50 ms.";


                        break;
                    case "ActualIn.n_GearBoxIn":
                        description = "Transmission input rpm (turbine speed) Used to detect when the load is changed for the engine when gear is engaged. Resolution is 1 rpm. Interval is every 50 ms.";


                        break;
                    case "ActualIn.X_ActualGear":
                        description = "Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock up 12 - Gear 4, lock up Interval is every 50 ms.";


                        break;
                    case "ActualIn.I_Egas":
                        description = "Actual current from h_bridge. Resolution is 0.001 A. Interval is every 100 ms.";


                        break;
                    case "ActualIn.n_Engine":
                        description = "Engine speed UNIT : rpm MAX : 8000 MIN : 25 (set to 10 when engine starts to move) TRANS : V = P. Resolution is 1. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "ActualIn.t_TDC_TDC":
                        description = "Time between two top dead center, ia between tow combustions UNIT : us/timerticks MAX : 65000 MIN : 0 TRANS : V = P. Resolution is 7.6 us. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "ActualIn.t_IgnDetect1":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "ActualIn.t_IgnDetect2":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "ActualIn.U_KnockDiag":
                        description = "Diagnostic knock level for detection of shortcut between ECS and casette UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "ActualIn.U_Knock":
                        description = "Integrated voltage for knock detection UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "ActualIn.Q_AirInlet":
                        description = "Mass airflow sensor (gram/sec) UNIT : g/s MAX : 340 MIN : 2 TRANS : V = P * 100. Resolution is 0.01. Interval is Every combustion.";


                        break;
                    case "ActualIn.T_Engine":
                        description = "Engine coolant temperature UNIT : (C MAX : 150 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "ActualIn.T_AirInlet":
                        description = "Inlet air temperature UNIT : (C MAX : 140 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "ActualIn.p_AirAmbient":
                        description = "Barometric air pressure UNIT : kPa MAX : 120 MIN : 50 TRANS : V = P * 10. Resolution is 0.1. Interval is 250 ms.";


                        break;
                    case "ActualIn.p_AirInlet":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "ActualIn.p_AirBefThrottle":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "ActualIn.AD_ThrottlePot1":
                        description = "Throttle position AD value (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.AD_ThrottlePot2":
                        description = "Throttle position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.A_Throttle":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.A_Throttle2":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.AD_PedalPot1":
                        description = "Pedal position AD value from Master CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.AD_SlavePedalPot1":
                        description = "Pedal position AD value from Slave CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.AD_PedalPot2":
                        description = "Pedal position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.X_AccPedal":
                        description = "Pedal position UNIT : % MAX : 130 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 20 ms.";


                        break;
                    case "ActualIn.U_O2SensFront":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "ActualIn.U_O2SensRear":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "ActualIn.I_HeatO2SensFront":
                        description = "Front oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.I_HeatO2SensRear":
                        description = "Rear oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.p_FuelTank":
                        description = "Barometric air pressure UNIT : Pa MAX : 2500 MIN : -2500 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.v_Vehicle":
                        description = "Left front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "ActualIn.v_Vehicle3":
                        description = "Right front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "ActualIn.n_Wheel":
                        description = "Wheel speed UNIT : rpm MAX : 3000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.U_Batt":
                        description = "Battery voltage UNIT : V MAX : 25.5 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_IgnitionKey":
                        description = "Ignition key status UNIT : Boolean (0 = ignition key off, 1 = ignition key on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_BrakeLight":
                        description = "Brake light status UNIT : Boolean (0 = brakelight off, 1 = brakelight lit) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_ClutchBrake1":
                        description = "Clutch brake from master processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.ST_ClutchBrake2":
                        description = "Clutch brake from slave processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_CruiseA1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.ST_CruiseB1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.ST_CruiseC1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.ST_CruiseA2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_CruiseB2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_CruiseC2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.U_Egr":
                        description = "EGR valve position UNIT : Volt MAX : 5 MIN : 0 TRANS : V = P * 1000. Resolution is 0.001. Interval is 20 ms.";


                        break;
                    case "ActualIn.ST_ACReq":
                        description = "AC request status UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.ST_ElevatedIdle":
                        description = "Elevated idle engine speed UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_CheckEngine":
                        description = "TCM check engine request UNIT : Boolean (0 = no request, 1 = turn on lamp) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.ST_CrankRequest":
                        description = "Engine cranking status UNIT : bool (0 = not cranking, 1 = cranking) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_TCMSport":
                        description = "TCM sport status UNIT : bool (0 = not sport mode, 1 = sport mode) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.ST_ReverseGear":
                        description = "Reverse gear status UNIT : bool (0 = not reverse gear, 1 = reverse gear) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "ActualIn.V_FuelTank":
                        description = "Fuel level UNIT : l (litre) MAX : 100 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "ActualIn.p_AC":
                        description = "AC pressure UNIT : Bar MAX : 30 MIN : 0 TRANS : V = P * 100. Resolution is 0.01 (in step of 0.25). Interval is 100 ms.";


                        break;
                    case "ActualIn.T_AirAmbient":
                        description = "Air temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "ActualIn.T_ACEvaporator":
                        description = "AC evaporator temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "ActualIn.v_Vehicle2":
                        description = "Vehicle speed, measured on the rear wheel, sent from MIU. UNIT : km/h MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "ActualIn.M_TCMLimitReq":
                        description = "Maximum engine torque request from TCM UNIT : Nm MAX : 400 MIN : -100 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "ActualIn.M_TCMLda":
                        description = "Mimum engine torque request from TCM UNIT : Nm MAX : 25 MIN : -100 TRANS : V = P . Resolution is 1. Interval is 10 ms.";


                        break;
                    case "ActualIn.t_TCMTrqLimDuration":
                        description = "Maximum engine torque duration UNIT : ms MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "ActualIn.I_LoadAlternator":
                        description = "Alternator load UNIT : Amp MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "ActualIn.X_GearLever":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 50 ms.";


                        break;
                    case "ActualIn.ImmoCode":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "ActualIn.ST_TCSTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms .";


                        break;
                    case "ActualIn.M_TCSTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "ActualIn.M_TCSLdaTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "ActualIn.M_TCSTotalReq":
                        description = "Total torque request from ESP equiped cars. The differance in torque between In.M_TCSTorqueReq and In.M_TCSTotalReq is taken with ignition retardation. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "ActualIn.T_TCMOil":
                        description = "Oil temperature in automatic gearbox";


                        break;
                    case "ActualIn.ST_TCSLdaTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms.";


                        break;
                    case "ActualIn.ST_ESPReq":
                        description = "ESP intervention Interval is Every 20 ms.";


                        break;
                    case "ActualIn.ST_vVehicle":
                        description = "OBDII diagnos status done by ABS 0 = Value OK 1 = Diagnos not done on left wheel 2 = Sensor fault on left wheel 16 = ABS Fault, diagnos not done by ABS 17 = ABS Fault, diagnos not done on left wheel 18 = ABS Fault, Sensor fault on left wheel";


                        break;
                    case "ActualIn.ST_CarType":
                        description = "Car type read from TWICE node 0 = 9-5 1 = 9-5 Estate 2 = Convertible 3 = 9-3";


                        break;
                    case "ActualIn.ST_BoostMeter":
                        description = "Indication from MIU if Turbo instrument exist";


                        break;
                    case "ActualIn.ST_TCMCSLU":
                        description = "Coast Lock up slip state 0 = No request 1 = Fuel cut inhibit 2 = Fuel cut allowed";


                        break;
                    case "ActualIn.ST_TCMShiftPattern":
                        description = "Active TCM shift pattern 0 = ECO 1 = Pwr 2 = Wusp 3 = Wnt 4 = US1 5 = US2 6 = Hot1 7 = Hot2 8 = Jerk 9 = Rep 10 = DS 11 = Tap U/D";


                        break;
                    case "ActualIn.ST_TCMIntervType":
                        description = "TCM torque request intervention type 0 = No intervention 1 = Reduce torque 2 = Increase torque";


                        break;
                    case "LimpIn.ST_TCMFreezeFrameReq":
                        description = "Request to send Powertrain Freeze Frame to TCM UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is x ms.";


                        break;
                    case "LimpIn.v_GearBoxOut":
                        description = "Transmission output speed Used by the Differential Protection System. Resolution is 0.1 km/h. Interval is every 50 ms.";


                        break;
                    case "LimpIn.n_GearBoxIn":
                        description = "Transmission input rpm (turbine speed) Used to detect when the load is changed for the engine when gear is engaged. Resolution is 1 rpm. Interval is every 50 ms.";


                        break;
                    case "LimpIn.X_ActualGear":
                        description = "Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1 6 - Gear 2 7 - Gear 3 8 - Gear 4 11 - Gear 3, lock up 12 - Gear 4, lock up Interval is every 50 ms.";


                        break;
                    case "LimpIn.I_Egas":
                        description = "Actual current from h_bridge. Resolution is 0.001 A. Interval is every 100 ms.";


                        break;
                    case "LimpIn.n_Engine":
                        description = "Engine speed UNIT : rpm MAX : 8000 MIN : 25 (set to 10 when engine starts to move) TRANS : V = P. Resolution is 1. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "LimpIn.t_TDC_TDC":
                        description = "Time between two top dead center, ia between tow combustions UNIT : us/timerticks MAX : 65000 MIN : 0 TRANS : V = P. Resolution is 7.6 us. Interval is Every combustion / 5 ms when engine is still.";


                        break;
                    case "LimpIn.t_IgnDetect1":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "LimpIn.t_IgnDetect2":
                        description = "Combustion detect puls time UNIT : microseconds (us) MAX : 65535 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "LimpIn.U_KnockDiag":
                        description = "Diagnostic knock level for detection of shortcut between ECS and casette UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "LimpIn.U_Knock":
                        description = "Integrated voltage for knock detection UNIT : mV MAX : 5000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion.";


                        break;
                    case "LimpIn.Q_AirInlet":
                        description = "Mass airflow sensor (gram/sec) UNIT : g/s MAX : 340 MIN : 2 TRANS : V = P * 100. Resolution is 0.01. Interval is Every combustion.";


                        break;
                    case "LimpIn.T_Engine":
                        description = "Engine coolant temperature UNIT : (C MAX : 150 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "LimpIn.T_AirInlet":
                        description = "Inlet air temperature UNIT : (C MAX : 140 MIN : -40 TRANS : V = P. Resolution is 1. Interval is 1000 ms.";


                        break;
                    case "LimpIn.p_AirAmbient":
                        description = "Barometric air pressure UNIT : kPa MAX : 120 MIN : 50 TRANS : V = P * 10. Resolution is 0.1. Interval is 250 ms.";


                        break;
                    case "LimpIn.p_AirInlet":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "LimpIn.p_AirBefThrottle":
                        description = "Engine inlet air pressure UNIT : kPa MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "LimpIn.AD_ThrottlePot1":
                        description = "Throttle position AD value (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.AD_ThrottlePot2":
                        description = "Throttle position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.A_Throttle":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.A_Throttle2":
                        description = "Throttle area UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.AD_PedalPot1":
                        description = "Pedal position AD value from Master CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.AD_SlavePedalPot1":
                        description = "Pedal position AD value from Slave CPU (potentiometer 1) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.AD_PedalPot2":
                        description = "Pedal position AD value (potentiometer 2) UNIT : AD value MAX : 1024 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.X_AccPedal":
                        description = "Pedal position UNIT : % MAX : 130 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 20 ms.";


                        break;
                    case "LimpIn.U_O2SensFront":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "LimpIn.U_O2SensRear":
                        description = "Front oxygen sensor voltage UNIT : mV MAX : 2000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is Every combustion and each 1000 ms when engine is stopped.";


                        break;
                    case "LimpIn.I_HeatO2SensFront":
                        description = "Front oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.I_HeatO2SensRear":
                        description = "Rear oxygen sensor heater current UNIT : mA MAX : 6000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.p_FuelTank":
                        description = "Barometric air pressure UNIT : Pa MAX : 2500 MIN : -2500 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.v_Vehicle":
                        description = "Left front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "LimpIn.v_Vehicle3":
                        description = "Right front wheel speed UNIT : km/h MAX : 300 MIN : 0 (detection of min. 1.0 km/h) TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "LimpIn.n_Wheel":
                        description = "Wheel speed UNIT : rpm MAX : 3000 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.U_Batt":
                        description = "Battery voltage UNIT : V MAX : 25.5 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_IgnitionKey":
                        description = "Ignition key status UNIT : Boolean (0 = ignition key off, 1 = ignition key on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_BrakeLight":
                        description = "Brake light status UNIT : Boolean (0 = brakelight off, 1 = brakelight lit) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_ClutchBrake1":
                        description = "Clutch brake from master processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.ST_ClutchBrake2":
                        description = "Clutch brake from slave processor UNIT : Boolean (0 = inactive, 1 = active) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_CruiseA1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.ST_CruiseB1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.ST_CruiseC1":
                        description = "Cruise controller switches from master processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.ST_CruiseA2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_CruiseB2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_CruiseC2":
                        description = "Cruise controller switches from slave processor UNIT : bool (0 = released, 1 = pressed) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.U_Egr":
                        description = "EGR valve position UNIT : Volt MAX : 5 MIN : 0 TRANS : V = P * 1000. Resolution is 0.001. Interval is 20 ms.";


                        break;
                    case "LimpIn.ST_ACReq":
                        description = "AC request status UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.ST_ElevatedIdle":
                        description = "Elevated idle engine speed UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_CheckEngine":
                        description = "TCM check engine request UNIT : Boolean (0 = no request, 1 = turn on lamp) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.ST_CrankRequest":
                        description = "Engine cranking status UNIT : bool (0 = not cranking, 1 = cranking) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_TCMSport":
                        description = "TCM sport status UNIT : bool (0 = not sport mode, 1 = sport mode) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.ST_ReverseGear":
                        description = "Reverse gear status UNIT : bool (0 = not reverse gear, 1 = reverse gear) MAX : 1 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "LimpIn.V_FuelTank":
                        description = "Fuel level UNIT : l (litre) MAX : 100 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "LimpIn.p_AC":
                        description = "AC pressure UNIT : Bar MAX : 30 MIN : 0 TRANS : V = P * 100. Resolution is 0.01 (in step of 0.25). Interval is 100 ms.";


                        break;
                    case "LimpIn.T_AirAmbient":
                        description = "Air temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "LimpIn.T_ACEvaporator":
                        description = "AC evaporator temperature UNIT : (C MAX : +50 MIN : -40 TRANS : V = P * 10. Resolution is 0.1. Interval is 1000 ms.";


                        break;
                    case "LimpIn.v_Vehicle2":
                        description = "Vehicle speed, measured on the rear wheel, sent from MIU. UNIT : km/h MAX : 300 MIN : 0 TRANS : V = P * 10. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "LimpIn.M_TCMLimitReq":
                        description = "Maximum engine torque request from TCM UNIT : Nm MAX : 400 MIN : -100 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "LimpIn.M_TCMLda":
                        description = "Mimum engine torque request from TCM UNIT : Nm MAX : 25 MIN : -100 TRANS : V = P . Resolution is 1. Interval is 10 ms.";


                        break;
                    case "LimpIn.t_TCMTrqLimDuration":
                        description = "Maximum engine torque duration UNIT : ms MAX : 2500 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "LimpIn.I_LoadAlternator":
                        description = "Alternator load UNIT : Amp MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "LimpIn.X_GearLever":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P. Resolution is 1. Interval is 50 ms.";


                        break;
                    case "LimpIn.ImmoCode":
                        description = "Automatic gearbox mode UNIT : Encoded, 0-255 MAX : 255 MIN : 0. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "LimpIn.ST_TCSTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms .";


                        break;
                    case "LimpIn.M_TCSTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "LimpIn.M_TCSLdaTorqueReq":
                        description = "Maximum torque request from TCS system via CAN. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "LimpIn.M_TCSTotalReq":
                        description = "Total torque request from ESP equiped cars. The differance in torque between In.M_TCSTorqueReq and In.M_TCSTotalReq is taken with ignition retardation. Resolution is 1 Nm. Interval is Every 20 ms.";


                        break;
                    case "LimpIn.T_TCMOil":
                        description = "Oil temperature in automatic gearbox";


                        break;
                    case "LimpIn.ST_TCSLdaTorqueReq":
                        description = "Actual status on the TCS torque request via CAN. 0 - not valid 1 - valid Interval is Every 20 ms.";


                        break;
                    case "LimpIn.ST_ESPReq":
                        description = "ESP intervention Interval is Every 20 ms.";


                        break;
                    case "LimpIn.ST_vVehicle":
                        description = "OBDII diagnos status done by ABS 0 = Value OK 1 = Diagnos not done on left wheel 2 = Sensor fault on left wheel 16 = ABS Fault, diagnos not done by ABS 17 = ABS Fault, diagnos not done on left wheel 18 = ABS Fault, Sensor fault on left wheel";


                        break;
                    case "LimpIn.ST_CarType":
                        description = "Car type read from TWICE node 0 = 9-5 1 = 9-5 Estate 2 = Convertible 3 = 9-3";


                        break;
                    case "LimpIn.ST_BoostMeter":
                        description = "Indication from MIU if Turbo instrument exist";


                        break;
                    case "LimpIn.ST_TCMCSLU":
                        description = "Coast Lock up slip state 0 = No request 1 = Fuel cut inhibit 2 = Fuel cut allowed";


                        break;
                    case "LimpIn.ST_TCMShiftPattern":
                        description = "Active TCM shift pattern 0 = ECO 1 = Pwr 2 = Wusp 3 = Wnt 4 = US1 5 = US2 6 = Hot1 7 = Hot2 8 = Jerk 9 = Rep 10 = DS 11 = Tap U/D";


                        break;
                    case "LimpIn.ST_TCMIntervType":
                        description = "TCM torque request intervention type 0 = No intervention 1 = Reduce torque 2 = Increase torque";


                        break;
                    case "Out.CMD_ThrLimpHome":
                        description = "Control the throttle limphome spring. The output will only be activated for 1 sec. To activate it again must the ignition key be swiched off. Interval is At limphome.";


                        break;
                    case "Out.PW_X_Pedal":
                        description = "Old Pedalposition to TCS system, not used";


                        break;
                    case "Out.PWM_BoostCntrl":
                        description = "Duty-cycle for boost pressure valve. Resolution is 0.1 %. Interval is every 20 ms.";


                        break;
                    case "Out.PW_M_Engine":
                        description = "Old PWM signal send to TCS system, indicating actual engine torque. Not used.";


                        break;
                    case "Out.ST_EGasOff":
                        description = "Is sent when E-gas is in Limp Home. Torque will only be reduce by ignition at torque reduction requests. 1 - - E-gas off 0 - - Normal Interval is every 1000 ms.";


                        break;
                    case "Out.ST_Automatic":
                        description = "Actual indication if vehicle is equiped with automatic gearbox status 1 = Automatic gearbox detected 0 = Manual gearbox";


                        break;
                    case "Out.ST_LimpHome":
                        description = "Boost control valve PWM output UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 20 ms.";


                        break;
                    case "Out.PWM_Purge":
                        description = "Purge valve PWM output UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is Every combustion.";


                        break;
                    case "Out.PWM_Egr":
                        description = "EGR valve PWM output UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 20 ms.";


                        break;
                    case "Out.CMD_SecAirPump":
                        description = "Sec Air Pump UNIT : Boolean (0 = Shut off, 1 = running MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "Out.CMD_ACRelay":
                        description = "AC relay UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "Out.CMD_Bypass":
                        description = "Turbo bypass valve UNIT : bool (0 = opened, 1 = closed) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "Out.CMD_HeatO2SensFront":
                        description = "Front oxygen sensor heater UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "Out.PWM_HeatO2SensFront":
                        description = "PWM heater O2 sensor front UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "Out.CMD_HeatO2SensRear":
                        description = "Rear oxygen sensor heater UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 250 ms.";


                        break;
                    case "Out.PWM_HeatO2SensRear":
                        description = "PWM heater O2 sensor rear UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "Out.CMD_MainRelay":
                        description = "Purge valve PWM output UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "Out.CMD_FuelPumpRelay":
                        description = "Fuel pump relay UNIT : bool (0 = off, 1 = on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "Out.CMD_CanisterCloseVlv":
                        description = "Purge valve PWM output UNIT : Boolean (0 = opened, 1 = closed) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100 ms.";


                        break;
                    case "Out.A_Throttle":
                        description = "Throttle control UNIT : mm( MAX : 2500 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 20 ms.";


                        break;
                    case "Out.PWM_SecAirValve":
                        description = "Secondary air injection valve UNIT : % MAX : 1000 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 100 ms.";


                        break;
                    case "Out.CMD_WarmUpSP":
                        description = "TCM warmup shift pattern command UNIT : Boolean (0 = normal shift pattern, 1 = warmup shift pattern) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms.";


                        break;
                    case "Out.CMD_KickDown":
                        description = "TCM kickdown command UNIT : bool (0 = no kickdown, 1 = kickdown) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 20ms.";


                        break;
                    case "Out.CMD_CheckEngine":
                        description = "Check engine lamp command UNIT : Boolean (0 = turn off, 1 = turn on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100ms + event.";


                        break;
                    case "Out.CMD_ShiftUp":
                        description = "Shift up command UNIT : Boolean (0 = turn off, 1 = turn on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms + event.";


                        break;
                    case "Out.CMD_CruiseLamp":
                        description = "Cruise controller lamp command UNIT : Boolean (0 = turn off, 1 = turn on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms + event.";


                        break;
                    case "Out.ST_CruiseActive":
                        description = "Cruise control active UNIT : Boolean (0 = disabled, 1 = active) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms + event.";


                        break;
                    case "Out.CMD_CheckFillerCap":
                        description = "Check filler cap command UNIT : Boolean (0 = turn off, 1 = turn on) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is event.";


                        break;
                    case "Out.ST_EngineStarted":
                        description = "Engine started flag UNIT : Boolean (0 = engine not started, 1 = engine started) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 250ms.";


                        break;
                    case "Out.ST_ClutchBrake":
                        description = "Clutchbrake flag UNIT : Boolean (0 = neither pressed, 1 = clutch- or brake pedal pressed) MAX : 1 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms + event.";


                        break;
                    case "Out.V_FuelConsumed":
                        description = "Consumed fuel volume UNIT : ml MAX : 65535 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms.";


                        break;
                    case "Out.X_AccPedal":
                        description = "Pedal position UNIT : % MAX : 100 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 20ms.";


                        break;
                    case "Out.n_Engine":
                        description = "Engine RPM UNIT : rpm MAX : 7000 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 10ms.";


                        break;
                    case "Out.n_EngineNomIdle":
                        description = "Nominal engine idle RPM UNIT : rpm MAX : 2000 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100ms.";


                        break;
                    case "Out.M_Engine":
                        description = "Engine torque UNIT : Nm MAX : 400 MIN : -100 TRANS : V = (P+. Resolution is 1. Interval is 10ms.";


                        break;
                    case "Out.M_MaxAtActualRPM":
                        description = "Max engine torque at actual RPM UNIT : Nm MAX : 400 MIN : 0 TRANS : V = P/2. Resolution is 1. Interval is 20ms.";


                        break;
                    case "Out.M_DTI":
                        description = "Drivers Torque Intention. The torque that the driver requests converted from air to torque. Limitations from all functions excluding TCM and TCS are included in the signal UNIT : Nm MAX : 400 MIN : -100";


                        break;
                    case "Out.T_Engine":
                        description = "Engine coolant temperature UNIT : (C MAX : 150 MIN : -40 TRANS : V = P+4. Resolution is 1. Interval is 1000ms.";


                        break;
                    case "Out.v_Vehicle":
                        description = "Vehicle speed UNIT : km/h MAX : 300 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 100ms.";


                        break;
                    case "Out.p_AirBarometric":
                        description = "Barometric air pressure UNIT : kPa MAX : 200 MIN : 0 TRANS : V = P*1. Resolution is 0.1. Interval is 1000ms.";


                        break;
                    case "Out.X_BoostMeter":
                        description = "Turbo boost meter UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100ms.";


                        break;
                    case "Out.X_ActualGear":
                        description = "Actual gear UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 100ms.";


                        break;
                    case "Out.X_EngineType":
                        description = "Engine type UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is 1000ms.";


                        break;
                    case "Out.ImmoCode":
                        description = "Immobilizer code output UNIT : Encoded, 0-255 MAX : 255 MIN : 0 TRANS : V = P *. Resolution is 1. Interval is Event transmittion only.";


                        break;
                    case "Out.X_AccPedalGradient":
                        description = "Accelerator pedal position gradient. The difference between the two latest, consecutive accelerator positions in AD. Resolution is 1 AD. Interval is every 5 ms.";


                        break;
                    case "Out.fi_Ignition":
                        description = "Actual ignition angle. A positive value is before TDC and a negative value is after TDC. Resolution is 0.1 °. Interval is Every combustion.";


                        break;
                    case "Out.fi_Injection":
                        description = "Actual injection end angle. Resolution is 0.1 °. Interval is Every combustion.";


                        break;
                    case "Out.t_Injection":
                        description = "Actual inj time. Resolution is 1 us. Interval is Every combustion.";


                        break;
                    case "Out.AD_Throttle":
                        description = "Actual throttle demand from 332 processor to 592 processor in AD value after the throttle area adaption. Resolution is 1. Interval is every 10ms.";


                        break;
                    case "Out.CMD_WarmUpCycle":
                        description = "Warm up cycle done, information used by TCM Interval is s.";


                        break;
                    case "Out.ST_BrakeLight":
                        description = "Brake light status 0 = brakelight off 1 = brakelight lit";


                        break;
                    case "Out.CMD_Jerk":
                        description = "Order TCM to use jerkprogram if the engine jerk too much";


                        break;
                    case "Out.CMD_REP":
                        description = "Order TCM to use \"Reduced Engine Performance\" program at high altitude to compensate for loss of engine performance";


                        break;
                    case "Out.CMD_GearShiftInhibit":
                        description = "Prevent TCM from shifting.";


                        break;
                    case "Out.ST_NoIgnitionRetard":
                        description = "Ignition retardation is not allowed due to overheating the catalytic converter";


                        break;
                    case "Out.CMD_CoastLUInhibit":
                        description = "Inhibit coast slip lock up ";


                        break;
                    case "ECMStat.ST_ACRequested":
                        description = "Indicates if AC is present in the system. If the AC ones has been requested over the bus this flag will be set and newer cleared.";


                        break;
                    case "ECMStat.ST_CruiseIncluded":
                        description = "Indicates if cruise is present in the system. If the cruise lamp ones have been active will this flag be set and newer cleared.";


                        break;
                    case "ECMStat.ST_EngineStarted":
                        description = "Indicate if engine have started. 1 => started 0 => not started.";


                        break;
                    case "ECMStat.ST_Automatic":
                        description = "Indicate if automatic gearbox is detected. 1 => Automatic 0 => Manual gearbox.";


                        break;
                    case "ECMStat.ST_DICE_Node":
                        description = "Indicate if DICE node is detected on CAN-buss. 1 => DICE Detected 0 => DICE Not detected";


                        break;
                    case "ECMStat.ST_MIU_Node":
                        description = "Indicate if MIU node is detected on CAN-buss. 1 => MIU Detected 0 => MIU Not detected";


                        break;
                    case "ECMStat.ST_SID_Node":
                        description = "Indicate if SID node is detected on CAN-buss. 1 => SID Detected 0 => SID Not detected";


                        break;
                    case "ECMStat.ST_AutNeutral":
                        description = "Indicate if automatic gearbox is in neutral position. 1 => Neutral position 0 => Not neutral position.";


                        break;
                    case "ECMStat.ST_EngineSynced":
                        description = "Indicate if engine have syncronised 1 => engine syncronised 0 => engine not syncronised";


                        break;
                    case "ECMStat.ST_PedalReleased":
                        description = "Indicate if accelerator pedal is released. This flag is set in the idle air routine. 1 => Pedal released 0 => Pedal not released";


                        break;
                    case "ECMStat.ST_EngineMoving":
                        description = "Indicate if engine is moving. 1 => engine is moving. 0 => engine is still.";


                        break;
                    case "ECMStat.ST_EngNotMoving":
                        description = "Indicate if engine not is moving. 1 => engine is not moving. 0 => engine is moving.";


                        break;
                    case "ECMStat.ST_ThrottleLimpHome":
                        description = "Indicate if throttle is in limphome 1 => Throttle is in limphome. 0 => Throttle is not in limphome.";


                        break;
                    case "ECMStat.ST_TCSCANBased":
                        description = "Indicate if Traction control system (TCS) is detected on bus instead from PWM. This implies that v_Vehicle is taken from the bus instead of from analog input.";


                        break;
                    case "ECMStat.ST_BlkHeatStart":
                        description = "The start was identified as a blockheater start and should therefor have extra enrichments since the value of the engine temperature is unreliable";


                        break;
                    case "ECMStat.ST_ESPEquiped":
                        description = "Indicatates if vehicle is equiped with ESP (Electronic Stability Program)";


                        break;
                    case "ECMStat.ST_hotFuelStart":
                        description = "According to CARB's definition of a hot fuel start is fullfilled this vaiable is set and cleared at ignitionOff. Definition : if MissfAdap.T_EngOff >= MissfCal.T_EngOffLim(110) and obdStartTemp >= MissfCal.T_hotStartLim(110) and In.T_AirInlet >= MissfCal.T_hotAirLim(70) and within first 1000 combustions";


                        break;
                    case "ECMStat.ManualGear":
                        description = "Actual gear (manuel gearbox). Fwd 1-5 Rew 'R' Undefined 'U' ";


                        break;
                    case "ECMStat.ST_ActiveAirDem":
                        description = "Active function demanding airmass DRIVE MASTER = 1x LIMIT WHEEL = 3x 10 = PedalMap 30 = Not used 11 = Cruise Control 31 = Max Vehicle Speed 12 = Idle Control MIN LIMIT ENGINE = 4x TORQUE MASTER = 2x 40 = LDA Request 20 = Max Engine Torque 41 = Min Load 21 = Traction Control 22 = Manual Gearbox Limit MAX LIMIT ENGINE = 5x 23 = Automatic Gearbox Lim 50 = Knock Airmass Limit 24 = Stall Limit (Automatic) 51 = Max Engine Speed 25 = Special Mode 52 = Max Air for Lambda 1 26 = Reverse Limit (Automatic) 53 = Max Turbo Speed 27 = Misfire Diagnose Limit 54 = Crankcase vent error 28 = Brake Management 55 = Faulty APC 29 = Diff Prot (Automatic) EMISSION LIMITATION = 6x 61 = Engine Tipin Limitation 62 = Engine Tipout Limitation SAFETY LIMITATION = 7x 70 Safety Switch";


                        break;
                    case "ECMStat.n_CombWhenSync":
                        description = "The combustion count when engine synched.";


                        break;
                    case "ECMStat.msCounter":
                        description = "Milliseconds counter from reset of ECU. Resolution is 1 msec.";


                        break;
                    case "ECMStat.n_Combustion":
                        description = "Number of combustions since engine was started. This flag is cleared when the engine have been still for 200ms. Resolution is 1 combustion. Interval is Every combustion.";


                        break;
                    case "ECMStat.n_CombustionSync":
                        description = "Number of combustions since engine was started. This flag is cleared when the engine is restarting to syncronice ignition and is used for sync diagnose. Resolution is 1 combustion. Interval is Every combustion.";


                        break;
                    case "ECMStat.p_Diff":
                        description = "Differance between inlet manifold air pressure and external air pressure. Resolution is 0.1 kPa.";


                        break;
                    case "ECMStat.n_Engine10ms":
                        description = "Copy of In.n_Engine made early in the 10 ms function caller, to make it possible to use the same engine speed pointer in different functions. Resolution is 0 rpm.";


                        break;
                    case "ECMStat.p_DiffThrot":
                        description = "Differance between inlet manifold air pressure and air pressure before throttle. Resolution is 0.1 kPa.";


                        break;
                    case "ECMStat.t_Soak":
                        description = "Time engine have been stopped. Resolution is 1 sec.";


                        break;
                    case "ECMStat.FuelBe":
                        description = "Fuel consumtion in g/kWh (Be).";


                        break;
                    case "ECMStat.FuelFlow":
                        description = "Fuel flow in g/h.";


                        break;
                    case "ECMStat.AirFuelRatio":
                        description = "Ratio between air (MAF.m_AirInletFuel or MAF.m_AirInmletTorq) and actual injected fuel.";


                        break;
                    case "ECMStat.t_StartTime":
                        description = "Engine start time, measured by measuring the time from that the battery volatage decreases 1.0V to the time engine speed reached 1000 rpm.";


                        break;
                    case "ECMStat.P_Engine":
                        description = "Calculated engine power. Measured in horsepower.";


                        break;
                    case "ECMStat.T_Catalyst":
                        description = "Calculated catalyst temperature.";


                        break;
                    case "ECMStat.n_EngineDelta2":
                        description = "Difference of delta In.n_Engine, measured every combustion";


                        break;
                    case "ECMStat.JerkFactor":
                        description = "This factor describes the jerking of the engine. The formula for calculating this is abs(ECMStat.n_EngineDelta2) * factor. The factor is for scaling it so it will be possible to filter it. The calibratable value used for filtering is nEngCal.FilterFactor. Since the jerk factor is based on every combustion, it is not possible to compare the numbers for 6 cylinder engines and 4 cylinder.";


                        break;
                    case "JerkProt.JerkFactor":
                        description = "Threshold value for changing shift pattern to \"no lockup\"";


                        break;
                    case "JerkProt.T_AirInlet":
                        description = "Temperature where jerk program was activated";


                        break;
                    case "JerkProt.X_AccPedal":
                        description = "Pedal position at detection of jerk";


                        break;
                    case "JerkCal.T_AirInletTab":
                        description = "Threshold value table for changing shift pattern depending on inlet temperature";


                        break;
                    case "JerkCal.T_AirInletSP":
                        description = "Support pointer for T_AirInletTab";


                        break;
                    case "JerkCal.p_AirAmbientTab":
                        description = "Compensation factor for determing jerking of engine depending on ambient pressure";


                        break;
                    case "JerkCal.p_AirAmbientSP":
                        description = "Support pointer for p_AirAmbientTab";


                        break;
                    case "JerkCal.n_EngineTab":
                        description = "Compensation factor for determing jerking of engine depending on engine speed";


                        break;
                    case "JerkCal.n_EngineSP":
                        description = "Support pointer for n_EngineTab";


                        break;
                    case "JerkCal.t_JerkAbove":
                        description = "Duration of ECMStat.JerkFactor above JerkCal.JerkFactor to use \"no lockup\" shiftpattern";


                        break;
                    case "JerkCal.t_JerkBelow":
                        description = "Duration of ECMStat.JerkFactor below JerkCal.JerkFactor to use \"Lockup\" shiftpattern";


                        break;
                    case "JerkCal.CruiseFactor":
                        description = "Factor multiplied with the threshold value when cruise is activated";


                        break;
                    case "JerkCal.JerkFilter":
                        description = "Filter factor to calculate jerkfactor.";


                        break;
                    case "JerkCal.X_JerkTempRed":
                        description = "Temperature must have dropped by this percentage to allow eco-mode jerkprogram";


                        break;
                    case "JerkCal.X_OffSteadyThr":
                        description = "Offset multiplied to jerkfactor at which the transmission should shift to jerkprogram at constant pedal position-";


                        break;
                    case "JerkCal.X_AccPedalLim":
                        description = "Low Limit for pedal position to enable possibility to change gearmode (jerk, eco)";


                        break;
                    case "JerkCal.X_AccPedalDiff":
                        description = "Minimum pedal position differance to change mode to jerkmode. change gearmode (jerk, eco)";


                        break;
                    case "JerkCal.X_AccPedal4Diff":
                        description = "Low Limit for pedal position to enable possibility to change gearmode at 4 lockup (jerk, eco)";


                        break;
                    case "JerkCal.X_AccPedal3Diff":
                        description = "Low Limit for pedal position to enable possibility to change gearmode at 3 lockup (jerk, eco)";


                        break;
                    case "JerkCal.X_3GearFac":
                        description = "Factor multiplied with the threshold value when 3 lockup is activated";


                        break;
                    case "JerkCal.X_4GearFac":
                        description = "Factor multiplied with the threshold value when 4 lockup is activated";


                        break;
                    case "JerkCal.T_AirInletMin":
                        description = "Below this temperature, use 100 as reactivation temperature for jerk->eco program to disable the temperature limit function";


                        break;
                    case "SID.ST_Mode":
                        description = "Mode to switch between SID function 0 = Adaption 1 = Exhaust 2 = TCM FUEL/DTI 3 = TCM GSI/CSLU 4 = TCM TRQ/SPEED 5 = ESP 6 = Purge";


                        break;
                    case "PLT.PlottPosition":
                        description = "Position were sample buffer should been updated. 0 = 66 deg. BTDC. 1 = Before ignition master. 2 = After ignition master. 3 = Before fuel master. 4 = After fuel master. 5 = Before knock master. 6 = After knock master. 7 = Before missfire master. 8 = After missfire master. 9 = Before sync master. 10 = After sync master.";


                        break;
                    case "REPProt.ST_Active":
                        description = "Change shift pattern to \"Reduced Engine Performance\" pattern Bit 0 = Normal detection of low perfomance enables REP Bit 1 = Gear shift support function enables REP 0 = Not active 1 = Normal function request REP 2 = Gear shift support request REP 3 = Normal + Gear shift support request REP";


                        break;
                    case "REPProt.p_AirAmbient":
                        description = "Enable REP shift pattern on altitude below this pressure";


                        break;
                    case "REPProt.ST_GSIState":
                        description = "State of Gear shift inhibit function 0 = Default, no action 1 = Down shift detected, wait until X_AccPedal decreases to change to state 2 or change to state 0 if P_Engine is less that before shift. 2 = Gear inhibit. Inhibit gear shift until P_Engine is lower than before shift and a certai time has elapsed. Activate REP shift pattern to lower the limit where a shift is done 3 = Out.X_AccPedal has been furher pressed than before the shift. This implies that there is not enough power though the gear has been shifted down. Allow further down shifts. 4 = Wait until 5-lockup is inserted to change shift pattern to normal (ECO)";


                        break;
                    case "REPProt.P_Saved":
                        description = "Gear shift inhibit variable. ECMStat.P_Engine before the shift. This is decreased with the hysteresis value at transition to state 2. The actual engine power must be below this value to change state and remove the inhibit signal.";


                        break;
                    case "REPProt.X_LastPedal":
                        description = "Gear shift inhibit variable. Out.X_AccPedal before the shift. If Out.X_AccPedal is increased after the shift above this saved value, goto state 3 and allow gear shift again";


                        break;
                    case "REPCal.T_AirInletSP":
                        description = "T_AirInlet support pointer for T_AirInletTab";


                        break;
                    case "REPCal.T_AirInletTab":
                        description = "Table for activating REP shift pattern below a certain ambient pressure.";


                        break;
                    case "REPCal.p_AirAmbientHyst":
                        description = "Offset added to table value to disactivate REP shift pattern";


                        break;
                    case "REPCal.P_EngineMinLimit":
                        description = "Minimum value of ECMStat.P_Engine to disactivate gear shift inhibit function.";


                        break;
                    case "REPCal.P_EngineHyst":
                        description = "Actual value of ECMStat.P_Engine is saved at shift and this calibratable value creates a lower value that must be passed before disactiving gear shift inhibit function";


                        break;
                    case "REPCal.t_InhibitMin":
                        description = "Minimum time that the gear shift inhibit function actually inhibits the gear shift";


                        break;
                    case "REPCal.ST_GearShiftInhibit":
                        description = "Enables gear shift inhibit function 0 = Do not use function 1 = Only use CMD_GearShiftInhibit 2 = Use both CMD_GearShiftInhibit and CMD_REP 3 = As 2 even without cruise The conditions to enable gear shift inhibit are: 1500 < In.n_Engine < 4000 rpm Out.X_AccPedal < 80% In.v_Vehicle > 50km/h";


                        break;
                    case "SystemCal.ShutOffTime":
                        description = "Time after ignition key is turned off until ECU is turned off. Resolution is 1 sec.";


                        break;
                    case "SystemCal.EngineType":
                        description = "This is the Engine Type information send on VBUS/CAN to other systems. OBS, OBS This data shall NOT be written to by any calibration engineer. This data is automaticly set by AppTool when ECU ID information is entered to the hex file. This data will only be active when T7 is completely handeld by AppTool. As long as T7 is handeld with the old environment, like make_r4/make_v6 shall this data be 0xFF (255) ";


                        break;
                    case "App7Cal.ST_DubbelInjection":
                        description = "Set this flag to continously enable dubbel injection. The engine must first syncronice after start to enable this function in a correct way. Wery long injection times can be a problem in this mode. The ignition pulses will not be dubbel. ";


                        break;
                    case "App7Cal.m_FuelActual":
                        description = "If this data not is zero will it be used as actual fuelmass to obtain a fixed injectiontime. Resolution is 0.01 mg/c.";


                        break;
                    case "App7Cal.X_AccPedReq":
                        description = "If this data not is zero will it be used as In.X_AccPedal. (the \"App7Cal.ST_PedalLoop\" must also be set to trigg this function). ";


                        break;
                    case "App7Cal.X_AccPedReqHigh":
                        description = "This is the high Pedal position during a AirmassStep run. ";


                        break;
                    case "App7Cal.X_AccPedReqLow":
                        description = "This is the low Pedal position during a AirmassStep run. ";


                        break;
                    case "App7Cal.t_Ramp":
                        description = "This is the ramptime both going from low to high and from high to low pedal position during a AirmassStep run. Resolution is 0.01 sec.";


                        break;
                    case "App7Cal.t_HighLevel":
                        description = "This is the time running on the high pedal position during a AirmassStep run. Resolution is 1 sec.";


                        break;
                    case "App7Cal.t_LowLevel":
                        description = "This is the time running on the low airmass level during a AirmassStep run. Resolution is 1 sec.";


                        break;
                    case "App7Cal.ST_PedalLoop":
                        description = "Status bit to activate the APP7 pedal simulation. 0 - Not active ( pedal pos is calc from In.AD_AccPedal ). 1 - loop is activated.";


                        break;
                    case "App7Cal.X_StepCycles":
                        description = "This data is the number of step cycles which will be runned before stoping pedal simulation. 0 -> Running forever (running until ST_PedalLoop = 0).";


                        break;
                    case "App7Cal.AirMode":
                        description = "Select the air control mod. 0 - Normal 1 - App7Cal.m_Request overrides m_Request 2 - Force Boost control to closed loop andOverride the throttle with App7Cal.A_Throttle 3 - Force Boost control to open loop andoverride the Valve withPWM_BoostCntrl 4 - Force the throttle to closed loop";


                        break;
                    case "App7Cal.PWM_BoostCntrl":
                        description = "If AirMod >= 3this data will be used as output. elseApp7CAl.PWM_BoostCntrl = Out.PWM_BoostCntrl";


                        break;
                    case "App7Cal.FuelMode":
                        description = "Select the fuel control mod. 0 - Normal 1 - App7Cal.m_FuelActual overrides the fuel";


                        break;
                    case "App7Cal.IgnMode":
                        description = "Select the fuel control mod. 0 - Normal 1 - App7Cal.fi_Ignition overrides the ignition angle";


                        break;
                    case "App7Cal.FuelFactor":
                        description = "Factor to make fuel corrections in testbeds";


                        break;
                    case "AngleLimCal.AD_GradHigh":
                        description = "Gradient for throttle angle limitation upper range. Resolution is bit.";


                        break;
                    case "AngleLimCal.AD_GradLow":
                        description = "Gradient for throttle angle limitation lower range. Resolution is bit.";


                        break;
                    case "AngleLimCal.AD_StartHigh":
                        description = "startangle for angle limitation upper range. Resolution is bit.";


                        break;
                    case "AngleLimCal.AD_StartLow":
                        description = "startangle for angle limitation lower range. Resolution is bit.";


                        break;
                    case "AngleLimCal.AD_AngleMax":
                        description = "Maximum throttle angle. Resolution is bit.";


                        break;
                    case "AngleLimCal.AD_AngleMin":
                        description = "Minimum throttle angle. Resolution is bit.";


                        break;
                    case "AngleLimCal.ThrottFilter":
                        description = "Filter parameter for throttle demand filter. Resolution is 1 bit.";


                        break;
                    case "AreaData.A_Controller":
                        description = "Area output of the airmass controller. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "AreaData.A_Emission":
                        description = "Area output of the emission limitation. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "AreaData.A_Start":
                        description = "Area input for the start routine. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "AreaData.A_ThrottleDemand":
                        description = "Area output from the area master. Resolution is 1. Interval is 10 ms.";


                        break;
                    case "AreaData.Q_Venturi":
                        description = "Air flow through the venturi valve";


                        break;
                    case "AreaData.m_Venturi":
                        description = "Mass air flow through the venturi valve";


                        break;
                    case "AngleLimProt.RampActHigh":
                        description = "Indicates that the angle limitation in the upper range is active. Resolution is \"0\" => not active.";


                        break;
                    case "AngleLimProt.RampActLow":
                        description = "Indicates that the angle limitation in the lower range is active. Resolution is \"0\" => not active.";


                        break;
                    case "AngleLimProt.OpenDirection":
                        description = "Indicates if tendence of demand value is in open direction. Resolution is \"0\" => close direction.";


                        break;
                    case "AngleLimProt.AD_Difference":
                        description = "Difference between ad_throttleDemand actual and one loop before. Resolution is bit.";


                        break;
                    case "AngleLimProt.AD_ThrotOld":
                        description = "old demand value for throttle before limitation. Resolution is bit.";


                        break;
                    case "AngleLimProt.AD_ThrotDem":
                        description = "Actual value for throttle before limitation. Resolution is mg/c.";


                        break;
                    case "Angle.AD_ThrottleDemand":
                        description = "Absolute throttle demand output of the throttledemand filter. Resolution is 1 bit.";


                        break;
                    case "Angle.ThrottleOut":
                        description = "Absolute throttle demand output of the throttledemand limitation out.ad_throttledemand is called from macro where the input is angle.throttleout. Resolution is 1 bit.";


                        break;
                    case "Angle.ThrottleFilterIn":
                        description = "Filter input absolute throttle demand the input will come from the output of the ad-area conversion. Resolution is 1 bit.";


                        break;
                    case "Angle.ThrottleFilterOld":
                        description = "old filter output. Resolution is 1 bit.";


                        break;
                    case "Angle.ThrottleFilterOut":
                        description = "Filter input. Resolution is 1 bit.";


                        break;
                    case "IEgas.ST_ZeroAdaptionDone":
                        description = "Result of zero adaption of the EGAS current. 0 - No or faulty adaption done 1 - Correct adaption done";


                        break;
                    case "CanIn.v_VehicleLeftFront":
                        description = "Left front wheel speed on TCS/ESP cars. Resolution is 1/16 km/h.";


                        break;
                    case "CanIn.v_VehicleRightFront":
                        description = "Left front wheel speed on TCS/ESP cars. Resolution is 1/16 km/h.";


                        break;
                    case "CanIn.v_VehicleLeftRear":
                        description = "Left front wheel speed on TCS/ESP cars. Resolution is 1/16 km/h.";


                        break;
                    case "CanIn.v_VehicleRightRear":
                        description = "Left front wheel speed on TCS/ESP cars. Resolution is 1/16 km/h.";


                        break;
                    case "CanIn.p_Brake":
                        description = "Brake pressure, only implemented on cars with ESP. Resolution is 2 bar.";


                        break;
                    case "CanIn.a_Lateral":
                        description = "Lateral acceleration, only implemented on cars with ESP. Resolution is 0.5 m/s2.";


                        break;
                    case "CanIn.fi_SteeringAngle":
                        description = "Stearing angle (LwsIn), only implemented on cars with ESP . Resolution is 3 °.";


                        break;
                    case "CanIn.fi_YawVelocity":
                        description = "Yaw velocity (vGiF), only implemented on cars with ESP. Resolution is 0.02 °.";


                        break;
                    case "CanIn.ST_EngineInterv":
                        description = "Engine intervention is requested from ESP (AMR)";


                        break;
                    case "CanIn.ST_BrakeInterv":
                        description = "Brake intervention is requested from ESP (BMR)";


                        break;
                    case "nEngCal.WaitTeeth":
                        description = "Number of teeth on the crankwheel that must be detected before a detection of the gap is done. Resolution is 1.";


                        break;
                    case "nEngCal.RatioStart":
                        description = "To detect a gap must the tooth period be atleast this mutch longer than the last period. This value is used first time after start to find position.";


                        break;
                    case "nEngCal.RatioRunning":
                        description = "To detect a gap must the tooth period be atleast this mutch longer than the last period. This value is used after start when the engine start flag is set.";


                        break;
                    case "ExecCntrlOption.CMD_FuelPumpRelay":
                        description = "Pump trelay active from kw2000 control option. The pump is active in 15 sec, also if the diag communication is turned of.";


                        break;
                    case "ExecCntrlOption.ThrPWM":
                        description = "Request to the throttle pwm master to limit the 592 throttle pwm because of diagnostic control of the throttle current.";


                        break;
                    case "ExecCntrlOption.ThrPWMActive":
                        description = "This flag indicates if the diagnostic current control of the throttle H-bridge is active. This is done by local id control option on the Out.AD_ThrottleDemand.";


                        break;
                    case "ExecCntrlOption.EvapColdStart":
                        description = "This flag indicates for the evap diagnose to do a coldtest and ignore the normal conditions for doing a coldtest.";


                        break;
                    case "ExecCntrlOption.SecAirPumpDiag":
                        description = "This flag indicates for the evap diagnose to do a coldtest and ignore the normal conditions for doing a coldtest.";


                        break;
                    case "VIOSCal.ST_TAirInlet":
                        description = "Which temperature sensor to use. 0 = Old sensor 1 = New sensor";


                        break;
                    case "VIOSCal.M_TCMOffset":
                        description = "Offset added ActualIn.M_TCMLimitReq on first gear as long as In.t_TCMTrqLimDuration == 0. This is a fix for the TCM as they have no possibility to change their software.";


                        break;
                    case "VIOSCal.M_TCSOffset":
                        description = "Offset added ActualIn.M_TCSReq as long as vehicle speed (rear speed sensor) is below a calibratable speed amd the first gear on manual cars is not in position";


                        break;
                    case "VIOSCal.v_TCSOffset":
                        description = "Above this vehicle speed, do not add offset on TCS request. This is since above a certain speed, the brakes will not be activated to regulate the slip.";


                        break;
                    case "VIOSCal.M_TCMLimphome":
                        description = "Limphome value used when the diagnostic system detects an error in the communication";


                        break;
                    case "MAFCal.corr_AirFromp":
                        description = "Correction factor in calculation of airmass from p_AirInlet. Used in formula: m = p * T_komp * Constant * Correction ] ";
                        //

                        break;
                    case "AmosCal":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "TEngDiagCal.m_AirperDegA":
                        description = "Correction of m_air to build limphome curve for watertemp on automatic cars. Is built from y-axel combustion and x-axel T_AirInlet. RANGE : 0 - 65000 UNIT : C RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "TEngDiagCal.m_AirperDegM":
                        description = "Correction of m_air to build limphome curve for watertemp on manual cars. Is built from y-axel combustion and x-axel T_AirInlet. RANGE : 0 - 65000 UNIT : C RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "CatDiagLevCal.ErrorLim":
                        description = "If the evalvalue is above this limit fetched from this matrix, error is reported. The limit depend on the average load during the second phase of the diagnose and the catalyst temp. ] ";
                        //

                        break;
                    case "CatModCal.T_SteadyState":
                        description = "The catalyst temperature when closed loop fuelling. Dependant on engine speed and load. RANGE : 200 - 1200 ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut1OMa":
                        //case "EngTipCal.m_TipInAut1OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut2OMa":
                        //case "EngTipCal.m_TipInAut2OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut3OMa":
                        //case "EngTipCal.m_TipInAut3OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut1BMa":
                    case "EngTipCal.m_TipInAut1BMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on engine break. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut4OMa":
                        //case "EngTipCal.m_TipInAut4OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut5OMa":
                        //case "EngTipCal.m_TipInAut5OMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on open converter. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutMan1Ma":
                        //case "EngTipCal.m_TipOutMan1Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutMan4Ma":
                        //case "EngTipCal.m_TipOutMan4Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fourth gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutMan5Ma":
                        //case "EngTipCal.m_TipOutMan5Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at gear fifth gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutMan2Ma":
                        //case "EngTipCal.m_TipOutMan2Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutMan3Ma":
                        //case "EngTipCal.m_TipOutMan3Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut5OM":
                        //case "EngTipCal.m_TipOutAut5OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut3Ma":
                        //case "EngTipCal.m_TipOutAut3Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut4Ma":
                        //case "EngTipCal.m_TipOutAut4Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipInAut2BMa":
                    case "EngTipCal.m_TipInAut2BMap":
                        description = "Maximum airmass increase matrix to avoid bad comfort (tipin). This matrix is chosen on engine break. This matrix is a bit different than the other tipin matrixes in the way that the pointer is the differance between engine speed and turbine speed RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut5Ma":
                        //case "EngTipCal.m_TipOutAut5Map":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fifth gear (locked gear) RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut4OM":
                        //case "EngTipCal.m_TipOutAut4OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at fourth gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut3OM":
                        //case "EngTipCal.m_TipOutAut3OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at third gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut2OM":
                        //case "EngTipCal.m_TipOutAut2OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at second gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipCal.m_TipOutAut1OM":
                        //case "EngTipCal.m_TipOutAut1OMap":
                        description = "Maximum airmass decrease matrix to avoid bad comfort (tipout). This matrix is chosen at first gear and the matrix is chosen on open converter. The matrix is a bit different than the other tipout matrixes in the way that the pointer is the differance between engine speed and turbine speed. RESOLUTION: 1 mg/c; RANGE: 0 to 2000 mg/c ] ";
                        //

                        break;
                    case "EvapDiagCal.LeakFacTest1":
                        description = " Leakage matrix that contains a ramp2 value with a certain volume of fuel that gives a leakage factor to put into the stack RANGE : -3 - 3 * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "EvapDiagCal.LeakFacTest2":
                        description = " Leakage matrix that contains a ramp2 value with a certain volume of fuel that gives a leakage factor to put into the stack RANGE : * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "ECUID.ScaleTable":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "Immobilizer_Enable":
                        description = "This flag must be set to allowe the immobilizer to cut the fuel. ] ";
                        //

                        break;
                    case "TorqueCal.M_EngTempTab":
                        description = "CR-1562 Maximum torque table when engine temperature is below temperature TorqueCal.T_LimEngTemp. Support points is engine speed. RANGE: 0 - 500 Nm ] ";
                        break;
                    case "TorqueCal.M_EngTempE85Ta":
                        description = " CR-1562 Maximum torque table for E85 when engine temperature is below temperature TorqueCal.T_LimEngTemp. Support points is engine speed. RANGE: 0 - 500 Nm ] ";
                        break;
                    case "ECUID.EngineType":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "FuelCalcDelay":
                        description = "Number of combustions between every call to a specific function. Pos Function 0 TransientFuelAdjustment 1 KnockFuelAdjustment 2 CalcBFuelFactor 3 AfterStartEnrichment1Master 4 AfterStartEnrichment2Master 5 FuelAdaptFunction 6 TempCompensationMaster 7 CatDiagFuelFactor 8 LambdaControler 9 FuelCutMaster 10 HotStartEnrichmentMaster 11 CalcMaxInjTime 12 CalculateBattConst ";
                        //

                        break;
                    case "PurgeCal.PdiffMaxRefFlow":
                        description = "Maximum available air flow in respect to the pressure difference. RANGE : 0 - 3000 mg/s RESOLUTION : 1 mg/s ] ";
                        //

                        break;
                    case "DICRun.ST_FrAllFaultLim":
                        description = "A list which shows status of all tests Position: 0 - DICRun.N_1Cyl comparerd to DICRunCal.N_Cmb1Lim 1 - DICRun.N_2Cyl comparerd to DICRunCal.N_Cmb2Lim 2 - DICRun.N_3Cyl comparerd to DICRunCal.N_Cmb3Lim 3 - DICRun.N_4Cyl comparerd to DICRunCal.N_Cmb4Lim 4 - DICRun.N_FCutTot comparerd to DICRunCal.N_FCutLimTot ] ";
                        //

                        break;
                    case "obdTEngQCStack":
                        description = "obdTEngQCtempDiff is put into this vector. If mean value (obdTEngQCMeanValueStack) is bigger than cal. value then report quick change fault. RANGE : 0 - 65000 UNIT : C RESOLUTION : 0.1 UPDATE : background ] ";
                        //

                        break;
                    case "DICass.ST_FrAllFaultLim":
                        description = "A list which shows status of all tests Position: 0 - DICass.U_AvCyl compared to DICassCal.U_LimAvCyl or DICass.U_AvTot compared to DICassCal.U_LimAvTot 1 - DICass.dU_SumCyl compared to DICassCal.dU_LimSumCyl or DICass.dU_SumTot compared to DICassCal.dU_LimSumTot 2 - DICass.dU_AbsSumCyl compared to DICassCal.dU_LimAbsCyl or DICass.dU_AbsSumTot compared to DICassCal.dU_LimAbsTot 3 - DICass.N_CmbULowCyl compared to DICassCal.N_ULowLimCyl or DICass.N_CmbULowTot compared to DICassCal.N_ULowLimTot 4 - DICass.t_AvCyl compared to DICassCal.t_LimAvCyl or DICass.t_AvTot compared to DICassCal.t_LimAvTot 5 - DICass.dt_SumCyl compared to DICassCal.dt_LimSumCyl or DICass.dt_SumTot compared to DICassCal.dt_LimSumTot 6 - DICass.dt_AbsSumCyl compared to DICassCal.dt_LimAbsCyl or DICass.dt_AbsSumTot compared to DICassCal.dt_LimAbsTot 7 - DICass.N_CmbtLowCyl compared to DICassCal.N_tLowLimCyl or ";
                        //

                        break;
                    case "ECUID.VehicleIdNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "ECUID.ECUSoftwNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "MisfDiagProt.dt_SumCyl":
                        description = "The sum for a number DICassCal.N_CmbLimdt_Sum of Missf.DetectLevel values. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "KnkDiagProt.dU_AbsSumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "KnkDiagProt.U_SumCyl":
                        description = "The sum for a number (KnockDiagCal.N_KnkAve) of In.U_KnockDiag values. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "CatDiagLevCal.m_SP":
                        description = "Support points for the average load during the second phase of the diagnose. ] ";
                        //

                        break;
                    case "MisfDiagProt.dt_AbsSumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "MisfDiagProt.t_SumCyl":
                        description = "The sum for a number DICassCal.N_CmbLimdt_Sum of Missf.DetectLevel values. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "CatDiagLevCal.T_CatSP":
                        description = "Support points for the catalyst temp. ] ";
                        //

                        break;
                    case "SyncProt.N_Det1Cnt":
                        description = "Number of Detection1 on ActualCyl RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "TEngDiagCal.n_CombFactTA":
                        description = "Correction for warm start, increase local combustion counter for y-axel (TEngDiagCal.n_CombSP) depending of start temp to get result from this table. RANGE : 0 - 65000 UNIT : comb RESOLUTION : 50% UPDATE : background ] ";
                        //

                        break;
                    case "SyncProt.N_Det2Cnt":
                        description = "Number of Detection2 on ActualCyl RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "CatModCal.m_SP":
                        description = "Load support points for the catalyst temperature matrix. RANGE : 0 - 1200 mg/c ] ";
                        //

                        break;
                    case "CatModCal.n_SP":
                        description = "Engine speed support points for the catalyst temperature matrix. RANGE : 0 - 7000 rpm ] ";
                        //

                        break;
                    case "CatModCal.T_LambdaOffset":
                        description = "Temperature offset to be added to the steady state catalyst temp fetched from the matrix. RANGE : 0 - 1000 C * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "CatModCal.LambdaSP":
                        description = "Lambda value support points for the offset catalyst temperature table. RANGE : 70 - 130 (lambda 0.70 - 1.30) * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "CatModCal.n_CombStart":
                        description = "Do not start the cat temp model until a number of cobustion have passed. The number of combustions depend on the engine coolant temp. RANGE : 0 - 10000 ] ";
                        //

                        break;
                    case "DICass.dU_SumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the difference between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dU_LimSumCyl. ] ";
                        //

                        break;
                    case "CatModCal.T_SPCombStart":
                        description = "Support points for engine coolant temp. Used to determine how many combustion to wait for before the cat temp model is started. RANGE : -100 - 200 ] ";
                        //

                        break;
                    case "DICass.dt_AbsSumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dt_LimAbsCyl. ] ";
                        //

                        break;
                    case "DICass.dt_SumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dt_LimSumCyl. ] ";
                        //

                        break;
                    case "DICass.dU_AbsSumCyl":
                        description = "When is diagnos is done this symbol contains the sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.dU_LimAbsCyl. ] ";
                        //

                        break;
                    case "EngTipCal.X_TipInRFA2OTa":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 2nd gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                        //

                        break;
                    case "EngTipCal.X_TipInRFA1OTa":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 1st gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                        //

                        break;
                    case "EngTipCal.X_TipInRFA5OTa":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 5th gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                        //

                        break;
                    case "EngTipCal.X_TipInRFA4OTa":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 4th gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                        //

                        break;
                    case "EngTipCal.X_TipInRFA3OTa":
                        description = "Increase maximum airmass ramp step at high airmass requests for automatic gearbox with open converter. The ramp factor table is for the 3rd gear. RESOLUTION: 0.01; RANGE: 0 to 256 ] ";
                        //

                        break;
                    case "n_LostFuelMasterCalls":
                        description = "When the system is heawy loaded might the fuelmaster not be called on every combustion, this variable calculates the total amount of lost calls. ] ";
                        //

                        break;
                    case "ECUID.ECUHardwNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "PLT_pointer":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "EvapDiagCal.V_Test2FuelS":
                        description = " Y-axel in matris for leakagefactor for ramp2 evaluation. Only for test 2 * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "EvapDiagCal.V_Test1FuelS":
                        description = " Y-axel in matris for leakagefactor for ramp2 evaluation. Only for test 1 * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "EvapDiagCal.Test2Ramp2Re":
                        description = " X-axel in matris for leakagefactor for ramp2 evaluation. Only for test 2 * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "EvapDiagCal.Test1Ramp2Re":
                        description = " X-axel in matris for leakagefactor for ramp2 evaluation. Only for test 1 * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "Data_name":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "ECUID.TesterSerialNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "X_AccPedalManTAB":
                        description = "Tab for interpolation of In.X_AccPedal. : (manual gearbox). RANGE : 0 - 1300 Resolution is 0.1 %";
                        //

                        break;
                    case "X_AccPedalAutSP":
                        description = "AD supportpoints for recalculating of Pedal position in % : (automatic gearbox). RANGE : 0 - 1024 ] ";
                        //

                        break;
                    case "X_AccPedalAutTAB":
                        description = "Tab for interpolation of In.X_AccPedal : (automatic gearbox). RANGE : 0 - 1300 Resolution is 0.1 %";
                        //

                        break;
                    case "TimerCheck":
                        description = "This timers measures the actual time elapsed during the timer routines. The ECMStat.msCounter is read between every start of timer routines: 1 - 20 ms 2 - 50 ms 3 - 100 ms 4 - 250 ms 5 - 1000 ms 6 - Background 7 - 5 ms 8 - Time for ROM cheksum calculation RESOLUTION : 1 ms ] ";
                        //

                        break;
                    case "ECUID.ECUSoftwVersNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "IdleCal.NeutralAirPartTA":
                        description = "The percent of the idle neutral air calibration data to use to get the total idle air, when neutral control is active. The rest is fetched from the idle drive air calibration. RANGE : 0 - 100 % RESOLUTION : 1 ] ";
                        //

                        break;
                    case "CalibrationData592":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "IgnOffsCal.NCMaxNegRampT":
                        description = "This is the most negative ignition offset allowed from the neutral control ignition ramping. It s a table as function of m_request. This is part of the D/N compensation. RANGE : -500 - 0 RESOLUTION : 0.1 degree ] ";
                        //

                        break;
                    case "IgnOffsCal.NCMaxNegRampS":
                        description = "Support points in m_Request for the NCMaxNegRampTAB. This is part of the D/N compensation. RANGE : 0 - 1000 RESOLUTION : mg/c ] ";
                        //

                        break;
                    case "ECUID.PartNrAlphaCode":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "DICRun.N_OKCyl":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL or NON misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.N_CmbtLowCyl":
                        description = "Number of counts when Missf.DetectLevel signal is lower or equal to the limit DetSigDiagCal.t_DetectLimit. The counter is decreased when the signal is greater. RANGE : -32768 to 32767 ] ";
                        //

                        break;
                    case "MisfDiag.dt_AvCyl":
                        description = "The average derivate of Missf.DetectLevel for DiCassCal.N_CmbLimit combustions. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                        //

                        break;
                    case "DICass.t_AvCyl":
                        description = "When is diagnos is done this symbol contains the average value of In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.t_LimAvCyl. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRun.N_2Cyl":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.U_AvCyl":
                        description = "When is diagnos is done this symbol contains the average value of In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (for every cylinder). This sum is compared to DICassCal.U_LimAvCyl. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRun.N_4Cyl":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is NON misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.N_CmbULowCyl":
                        description = "Number of counts when In.U_KnockDiag signal is lower or equal to the limit KnockDiagCal.errorLevel. The counter is decreased when the signal is greater. RANGE : -32768 to 32767 ] ";
                        //

                        break;
                    case "DICRun.N_3Cyl":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "KnkDiagProt.U_KnockDiagPrevious":
                        description = "In.U_KnockDiag value for previous combustion for each cylinder. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "KnkDiag.U_KnkDiagCyl":
                        description = "In.U_KnockDiag separate for each cylinder. This is only a variable for development aid. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "KnkDiag.dU_Cyl":
                        description = "The derivate of previous and actual In.U_KnockDiag. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                        //

                        break;
                    case "DICRun.N_1Cyl":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel, then this counter is increased. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "MisfDiagProt.t_DetLevelPrevious":
                        description = "Missf.DetectLevel value for previous combustion for each cylinder. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "SyncProt.ST_CylFault":
                        description = "Detect fault on cylinder 2: Detect fault: High 1: Detect fault: Low 0: No detect fault RESOLUTION : High / Low / No fault ] ";
                        //

                        break;
                    case "KnkDiag.dU_AvCyl":
                        description = "The average derivate of In.U_KnockDiag for DiCassCal.N_CmbLimit combustions. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                        //

                        break;
                    case "PLT_TriggVar":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "MisfDiag.dt_Cyl":
                        description = "The derivate of previous and actual Missf.DetectLevel. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                        //

                        break;
                    case "ECUID.ECUHardwVersNr":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "Fault.fi_Ignition":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "ECUID.SoftwareDate":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "Fault.ImmoCode":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "Fault.t_Injection":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "ImmoCode":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "throtDiaAdapErrorBuf":
                        description = "This buffer contains the throttle error number reported throttle diagnose in thrlimp.jsp. * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "DICassCal.dU_LimSumCyl":
                        description = "Limit where the sum ( DICass.dU_SumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "BFuelProt.combCounter":
                        description = "Comb after EngineStarted to continue with crank fuel ] ";
                        //

                        break;
                    case "hfmOffsetSimFac":
                        description = "this factor is used to create an offset on the hfm signal to simulate a faulty hfm ] ";
                        //

                        break;
                    case "ECUID.ECUDiagDataID":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "AdapStableTimer":
                        description = "Stable timer for when to allow adaption from rear o2 sensor. ] ";
                        //

                        break;
                    case "DICassCal.dt_LimSumCyl":
                        description = "Limit where the sum ( DICass.dt_SumCyl) is to low. Test is done after DICassCal.N_CmbLimit RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.dU_SumTot":
                        description = "When is diagnos is done this symbol contains the sum of the difference between In.U_KnockDiag and previous In.U_KnockDiag signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dU_LimSumTot. ] ";
                        //

                        break;
                    case "DICass.dU_AbsSumTot":
                        description = "When is diagnos is done this symbol contains the total sum of the absolute difference value between In.U_KnockDiag and previous In.U_KnockDiag signal. for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dU_LimAbsTot. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.dt_LimSumTot":
                        description = "Limit where the sum ( DICass.dt_SumTot ) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.dU_LimSumTot":
                        description = "Limit where the sum (DICass.dU_SumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.dU_LimAbsTot":
                        description = "Limit where the sum of absolute values ( DICass.dU_AbsSumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.dU_LimAbsCyl":
                        description = "Limit where the sum of absolute values ( DICass.dU_AbsSumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "FlashSave.l_Elapsed":
                        description = "CR-1006. Save elapsed distance, distance in meters. If the battery voltage drops the elapsed distance from the last Power up is lost . RANGE: 0 - 4 294 967 290 m RESOLUTION: 10m ] ";
                        //

                        break;
                    case "CatOx2ProcessInvalidTime":
                        description = "Accumulated time when data is processed but when ox2 signal is below lim ] ";
                        //

                        break;
                    case "CatOx2ProcessTime":
                        description = "Accumulated time when data is processed ] ";
                        //

                        break;
                    case "MisfDiagProt.t_TmpdSum1":
                        description = "The delta sum for all 4 or 6 cylinders. (Missf.DetectLevel - MisfDiagProt.t_DetLevelPrevious) Updated every combustion. RANGE : 0 - ] ";
                        //

                        break;
                    case "DICassCal.dt_LimAbsTot":
                        description = "Limit where the sum of absolute values ( DICass.dt_AbsSumTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "LocalID":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "obdAirmCompLastMeanVal":
                        description = "This is the meanvalue calculated from the last defined number of samples for the low load window. ] ";
                        //

                        break;
                    case "obdLatestHiMeanAirmCompEval":
                        description = "This is the actual mean value of the difference in airmass compare taken before the last sample interval has begun. For the hi load window. ] ";
                        //

                        break;
                    case "obdAirmCompLastHiMeanVal":
                        description = "This is the meanvalue calculated from the last defined number of samples for the hi load window. ] ";
                        //

                        break;
                    case "DICassCal.dt_LimAbsCyl":
                        description = "Limit where the sum of absolute values ( DICass.dt_AbsSumCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.dt_AbsSumTot":
                        description = "When is diagnos is done this symbol contains the total sum of the absolute difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dt_LimAbsTot. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.dt_SumTot":
                        description = "When is diagnos is done this symbol contains the sum of the difference between Missf.DetectLevel and previous Missf.DetectLevel signal for DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.dt_LimSumTot. ] ";
                        //

                        break;
                    case "obdLatestMeanAirmCompEval":
                        description = "This is the actual mean value of the difference in airmass compare taken before the last sample interval has begun. For the low load window. ] ";
                        //

                        break;
                    case "SyncCal.n_DiagCombLimit":
                        description = "Number of combustions before the sync diagnose will be run if the engine doesn t sync RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "obdTEngineAccumAir":
                        description = "RANGE : 0 - 4294967296 UNIT : mg/c RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "offset":
                        description = "Description : Hysteresis for gear shift support function The ShiftSupCal.M_Hysteresis is converted to wheel torque and add to the wheel integrator. The addition of aboth must be lower than the max possible engine torque to release the function and ramp down the airmass offset Resolution : 1 Nm (Wheel torque) Range : -32535 - 32535 Nm ] ";
                        //

                        break;
                    case "obdFuelLevel.DistanceFro":
                        description = "When a fault is set on Fuel Level diagnose, this distance counter starts because if there is a fault, limphome value is set to 50L and then the Evap leakage test starts. If the real volume is full, fuel covers the purge tubes and it s impossible to suck the system down with purge and BIG_LEAK will be reported. Therefor a distance of 25 kilometers is required before Evap diagnose can report BIG_LEAK. RANGE : 0 - 100000 UNIT : m (meters) RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngDeadCombustion":
                        description = "Dead signal test shall only be preformed with vehicle speed therfore a combustion counter is made that increase only when vehicle speed > 25. RANGE : 0 - 4 byte UNIT : comb RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "O2SensPostCal.t_LowToHea":
                        description = "If the rear sensor signal is shorted to heater ground for more than this time ms error low signal is reported. RANGE : 0 - 1000000 ms ] ";
                        //

                        break;
                    case "PLT_TriggValue":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "O2SPreCal.t_LowToHeatErr":
                        description = "If the front sensor signal is shorted to heater ground for more than this time ms error low signal is reported. RANGE : 0 - 1000000 ms ] ";
                        //

                        break;
                    case "PLT_variablesize":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "SyncProt.ST_Det2Cnt":
                        description = "Detect2 status on cylinder 2: Detect High 1: Detect Low 0: Detect Undefined (Neither High or Low) RESOLUTION : High / Low / Undefined ] ";
                        //

                        break;
                    case "KnkDiagProt.U_TmpdSum1":
                        description = "The delta sum for all 4 or 6 cylinders. (ActualIn.U_KnockDiag - KnkDiagProt.U_KnockDiagPrevious) Updated every combustion. RANGE : 0 - ] ";
                        //

                        break;
                    case "SyncProt.ST_Det1Cnt":
                        description = "Detect1 status on cylinder 2: Detect High 1: Detect Low 0: Detect Undefined (Neither High or Low) RESOLUTION : High / Low / Undefined ] ";
                        //

                        break;
                    case "WriteProtectedECU":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "X_AccPedalManSP":
                        description = "AD supportpoints for recalculating of Pedal position in %. : (manual gearbox). RANGE : 0 - 1024 ] ";
                        //

                        break;
                    case "AdaptionData592":
                        description = "Adaptive data from the 592 cpu. Byte 0 => Pedal1 adaption Byte 1 => Friction compensation Byte 2 => Pedal2 adaption * * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "DICassCal.N_CmbLimit":
                        description = "The number of consecutive combustions per cylinder that the In.U_KnockDiag and Missf.DetectLevel should be read before calculating and evaluating the limits. The counter DICass.N_Combustion is compared to this limit. ] ";
                        //

                        break;
                    case "BlockHeatCal.T_AirInletM":
                        description = "CR-375 Minimum In.T_AirInlet to enable start factor ] ";
                        //

                        break;
                    case "obdTEngineStatus":
                        description = "Status on Temp engine sensor diagnose. 0 = perhaps not running or running but not finished 1 = Ok report 0x0115 ENGINE_TEMPERATURE_DEAD reported 0x0117 ENGINE_TEMPERATURE_CIRCUIT_LOW reported 0x0118 ENGINE_TEMPERATURE_CIRCUIT_HIGH reported 0x0119 ENGINE_TEMPERATURE_QUICK_CHANGE reported RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTCoolingSystemPreCond":
                        description = "Show cooling system diagnose pre condition 0 = running 1 = Out Of Limits 2 = Tengine diagnose reported fault 3 = Warm start RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngQCMeanValueStack":
                        description = "Mean value from the stack (obdTEngQCStack). If mean value is bigger than cal. value then report quick change fault. RANGE : 0 - 65000 UNIT : RESOLUTION : 0.1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngQCtempDiff":
                        description = "The difference between In.T_Engine this loop and last. This value is put into quick change stack (obdTEngQCStack). RANGE : 0 - 65000 UNIT : C RESOLUTION : 0.1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTCoolingSystemStatus":
                        description = "Status on Cooling system diagnose. 0 = perhaps not running or running but not finished 1 = Ok report 0x0116 COOLING_SYSTEM_RANGE reported RANGE : 0 - FFFF UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdFuelLevel.V_FuelTankR":
                        description = " Reference for low pass filter of ActualIn.V_FuelTank RANGE : 0 - 700 UNIT : Litre RESOLUTION : 0,1 UPDATE : background ] ";
                        //

                        break;
                    case "obdFuelLevel.V_FuelTankF":
                        description = "Low pass filtered ActualIn.V_FuelTank. Active when vehicle speed is above 40.0 km/h RANGE : 0 - 700 UNIT : Litre RESOLUTION : 0,1 UPDATE : background ] ";
                        //

                        break;
                    case "DICRunCal.N_CmbDiagLim":
                        description = "The number of consecutive combustions before the counters DICRun.N_1Cyl to DICRun.N_4Cyl is compared to DICRunCal.N_Cmb1Lim to DICRunCal.N_Cmb4Lim limit. Test is done after DICRunCal.N_CmbDiagLim combustions. ] ";
                        //

                        break;
                    case "DICRunCal.N_FCutLimTot":
                        description = "Number of combustions detected during engine running Then counter for fuel cut FCUT.CutStatus = 12. is compared to this limit. DICRun.N_FCutTot > DICRunCal.N_FCutLimTot This is done after DICRunCal.N_CmbDiagLim combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRunCal.N_Cmb2Lim":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is > than KnockDiagCal.errorLevel. The counter DICRun..N_2Cyl is compared to limit DICRunCal.N_Cmb2Lim. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRunCal.N_Cmb1Lim":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a FILTERED misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_1Cyl is compared to limit DICRunCal.N_Cmb1Lim. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRunCal.N_Cmb4Lim":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is NON misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_4Cyl is compared to limit DICRunCal.N_Cmb4Lim. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICRunCal.N_Cmb3Lim":
                        description = "Number of combustions detected during engine running where the DI cassette might be faulty. If there is a REAL misfire when Actual.In_UKnockDiag is <= than KnockDiagCal.errorLevel. The counter DICRun..N_3Cyl is compared to limit DICRunCal.N_CmbLim. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "ThrErrProt.SwMonOf339Fail":
                        description = "Software monitoring of 339 failed. Error 17. RANGE : ON = Error OFF = No error ] ";
                        //

                        break;
                    case "EnableThrError":
                        description = "Storage of throttle enable status: 1 - Wait for 592 to indicate limphome 2 - Wait for block adaption 3 - Wait for 592 to indicate no limphome 9999 - serial communication error ] ";
                        //

                        break;
                    case "SyncCal.Pc_DetHighLimCyl":
                        description = "Percent of possible detects that need to be registered to count the detect as high. RESOLUTION : 100/1024 percent ] ";
                        //

                        break;
                    case "SyncCal.Pc_DetLowLimCyl":
                        description = "Percent of possible detects that registered detects must be lower than to count the detect as low. RESOLUTION : 100/1024 percent ] ";
                        //

                        break;
                    case "SyncCal.N_SyncMode1":
                        description = "Number of engine cycles to try to sync with n_CombLimit number of combustions. RESOLUTION : 1 engine cycle ] ";
                        //

                        break;
                    case "PurgeCal.HC100FastFiltFa":
                        description = "Filter factor for fast HC adaption at 100% HC. RANGE : 0 - 32000 RESOLUTION : 1 ] ";
                        //

                        break;
                    case "PurgeCal.HC100NormFiltFa":
                        description = "Filter factor for normal HC adaption at 100% HC. RANGE : 0 - 32000 RESOLUTION : 1 ] ";
                        //

                        break;
                    case "PurgeCal.AdpFreezeTimeNe":
                        description = "Freeze time at negative load transient. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                        //

                        break;
                    case "PurgeCal.AdpFreezeTimeBr":
                        description = "Freeze time at brake if n_Engine < 1200 rpm. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                        //

                        break;
                    case "PurgeCal.AdpFreezeTimePo":
                        description = "Freeze time at positive load transient. RANGE : 0.0 - 10.0 s RESOLUTION : 0.1 s ] ";
                        //

                        break;
                    case "AreaCal.m_ReqFacForceAda":
                        description = "CR-305 Percent of m_Request to start throttle area adaption. ] ";
                        //

                        break;
                    case "IgnLOffCal.NegDeltaLim":
                        description = "Maximal decrement of Light Off ignition offset when the start phase is over. RANGE : RESOLUTION : 0.1?/7.5 ms ] ";
                        //

                        break;
                    case "IgnTemp.fi_Offset":
                        description = "Both air and engine temp offset value. RANGE : -10.0? to 45.0? RESOLUTION : 0.1? ] ";
                        //

                        break;
                    case "IgnOffsCal.NCIgnPosRampS":
                        description = "This is the step with which the DNComp.fi_NCOffset is increased when the neutral control is disengaged and the In.n_GearBoxIn increases or becomes 0. This is part of the D/N compensation. RANGE : 0 - 200 RESOLUTION : 0.1 degree ] ";
                        //

                        break;
                    case "IgnOffsCal.NCIgnNegRampS":
                        description = "This is the step with which the DNComp.fi_NCOffset is decreased when the neutral control is disengaged and the In.n_GearBoxIn drops under IgnOffsCal.n_NCIgnNegRamp rpm limit. This is part of the D/N compensation. RANGE : 0 - 200 RESOLUTION : 0.1 degree ] ";
                        //

                        break;
                    case "IgnOffsCal.n_NCIgnNegRam":
                        description = "The In.n_GearBoxIn must be lower than this limit to activate the the negative ramping of the ignition when neutral control is disengaged. This is part of the D/N compensation. RANGE : -500 - 0 RESOLUTION : 0.1 degree ] ";
                        //

                        break;
                    case "PurgeCal.AdpFuelFacLimLo":
                        description = "Minimum fuel factor to disable fast adaption and start ramp. RANGE : -50.0 - 0.0 % RESOLUTION : 0.1 % ] ";
                        //

                        break;
                    case "BFuelProt.CurrentFuelCon":
                        description = "Current fuel consumption, calculated every 2000ms RANGE : 0 to 3276l / 100km RESOLUTION : 0.1l / 100km ] ";
                        //

                        break;
                    case "m_Driver":
                        description = "Airmass request from pedal map. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_CC":
                        description = "Airmass request from cruise control. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_DriveMaster":
                        description = "Airmass request from thre drive master select high between pedal and cruise control RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_nHigh":
                        description = "Airmass request from the max limit function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_Master":
                        description = "Airmass request from the output of the airmass master It s input for the emision limitation function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_Request":
                        description = "Airmass request from the output of the emision limitation.It s the global airmass request for the whole system and the input for the airmass controller RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_nLow":
                        description = "Airmass request from the min limit function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_LoadComp":
                        description = "Airmass request from Load compensation RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_Idle":
                        description = "Airmass request from idle speed RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "m_Wheel":
                        description = "Airmass request from the limit wheel function RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "PurgeProt.SetPurgePercen":
                        description = "Set purge percent at start ramp. Under this level the flow is ramped fast. RANGE : 0.00 - 10.00 % RESOLUTION : 0.01 % ] ";
                        //

                        break;
                    case "VIOSCal.X_nEngMaxInc":
                        description = "A factor how much engine speed could increase from combustion to combustion in engine start. This is used to calculate the max number of ignition pulses during multi ignition mode. RANGE : 0 - 64 ] ";
                        //

                        break;
                    case "VIOSCal.t_DetWinMulti":
                        description = "The detect window length before sync and during multiign. The actual detect window length is this value - VIOSCal.t_DetBefWin - 1. WARNING!!! The length of the detect window must not be too long on hi rpm. RESOLUTION: 0.1 ms ] ";
                        //

                        break;
                    case "CatDeltaLoad":
                        description = "Result of delta load calculation ] ";
                        //

                        break;
                    case "CatOx2Filt":
                        description = "Filtrated value from ox2 sensor ] ";
                        //

                        break;
                    case "AdapDeltaLoad":
                        description = "LP filtered load signal, start with a normal value. ] ";
                        //

                        break;
                    case "ECMStat.n_EngineDelta2Ma":
                        description = "DESCRIPITON: Maximum n_EngineDelta2 during 100ms ] ";
                        //

                        break;
                    case "PLT_buffer":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "TorqueCal.T_LimEngTemp":
                        description = "CR-1562 Maximum engine temperature where engine temperature torque reduction is active. RANGE: -40 to +200 C ] ";
                        //

                        break;
                    case "TorqueCal.M_IncEngTemp":
                        description = "CR-1562 Maximum torque increase when engine temperature torque reduction is deactivated and torque ramping up. When engine temperature >= TorqueCal.T_LimEngTemp this ramping is started. RANGE: 0 - 500 Nm ] ";
                        //

                        break;
                    case "CatDevDiffFiltMax":
                        description = "Maximum value during one trip of the CatDevDiff ] ";
                        //

                        break;
                    case "MisfDiag.dt_Tot":
                        description = "The derivate of previous and actual Missf.DetectLevel. It s a average value of MisfDiag.dt_Cyl for all cylinders. This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                        //

                        break;
                    case "KnkDiag.dU_AvTot":
                        description = "The average derivate (all cylinders) of In.U_KnockDiag for DiCassCal.N_CmbLimit combustions. It s calc from DICass.dU_SumTot / (nr of cylinders) This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                        //

                        break;
                    case "MisfDiag.dt_AvTot":
                        description = "The average derivate (all cylinders) of Missf.DetectLevel for DiCassCal.N_CmbLimit combustions. It s calc from DICass.dt_SumTot / (nr of cylinders) This is only a variable for development aid. RANGE : -32768 to +32767 ] ";
                        //

                        break;
                    case "DICassAdap.ST_Diagnose":
                        description = "Status of diagnose. Updates the first time after ignition on when a fault is found. RANGE : 0 : No faults detected 131 - 255 : Status falt code ] ";
                        //

                        break;
                    case "DICassAdap.N_DownFrom40":
                        description = "Every time a fault is detected this counter is set to 40. In every ignition off is this counter decreased with 1 if a warmup cycle is done and the last engine running dignose reported an OK. RANGE : 0 : No faults 1 - 40 : Faults detected ] ";
                        //

                        break;
                    case "KnkDiag.dU_Tot":
                        description = "The derivate of previous and actual In.U_KnockDiag. It s a average value of KnkDiag.dU_Cyl for all cylinders. This is only a variable for development aid. RANGE : -32767 - +32768 ] ";
                        //

                        break;
                    case "KnkDiagProt.N_CmbLimitCalc":
                        description = "The number of consecutive combustions that the In.U_KnockDiag and Missf.DetectLevel should be read before calculating and evaluating the limits. This variable is set from DICassCal.N_CmbLimit and minimum value is 1; ] ";
                        //

                        break;
                    case "DICass.t_AvTot":
                        description = "When is diagnos is done this symbol contains the total average value of Missf.DetectLevel signal DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.t_LimAvTot. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.N_CmbULowTot":
                        description = "Number of counts when In.U_KnockDiag signal is lower or equal to the limit KnockDiagCal.errorLevel. The counter is decreased when the signal is greater. Sum of all cylinders in DICass.N_CmbULowCyl. RANGE : -32768 to 32767 ] ";
                        //

                        break;
                    case "DICass.N_CmbtLowTot":
                        description = "Number of counts when Missf.DetectLevel signal is lower or equal to the limit DetSigDiagCal.t_DetectLimit. The counter is decreased when the signal is greater. Sum of all cylinders in DICass.N_CmbULowCyl. RANGE : -32768 to 32767 ] ";
                        //

                        break;
                    case "DICass.ST_Diagnose":
                        description = "Status of diagnose. Same as DICass.ST_ExecuteDiag but after first complete engine running diagnose this shows the last condition, diagnose OK condition or diagnose fault condition. If a fault condition is detected then this fault is hold to ignition off. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "DICass.ST_ExecuteDiag":
                        description = "Status of diagnose. Shows which diagnose is executing. Status of pre or break condition, state, faultcode. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "DICass.N_Combustion":
                        description = "Number of combustions engine cranking diagnosis have collected data. When DICass.N_Combustion >= DICassCal.N_CmbLimit the diagnose is done. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.U_AvTot":
                        description = "When is diagnos is done this symbol contains the total average value of In.U_KnockDiag signal DiCassCal.N_CmbLimit combustions (all cylinders). This sum is compared to DICassCal.U_LimAvTot. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "SondDeltaLoad":
                        description = "Result of delta load calculation ] ";
                        //

                        break;
                    case "obdPurge.ST_NeedForSpeed":
                        description = "Run Purgediagnose only one standing still sequence, when require vehicle speed > 0 RANGE : 0 - 1 UNIT : BOOL RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "DICRun.N_Combustion":
                        description = "Number of combustions engine running diagnosis have collected data. When DICRun.N_Combustion >= DICRunCal.N_CmbDiagLim the diagnose on DICRun.Cnt1_Cyl, DICRun.Cnt2_Cyl, DICRun.Cnt3_Cyl and DICRun.Cnt4_Cyl is done. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICass.ST_DiagCont":
                        description = "Status of diagnose. Same as DICass.ST_Diagnose but shows always the last fault conditions. This variable is reset in ignition off. RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "DICRun.N_FCutTot":
                        description = "Number of combustions detected during engine running when fuel cut FCUT.CutStatus = 12. DICRun.N_FCutTot is compared in diagnose to DICRunCal.N_FCutLimTot. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "t_O2SPreHeatBefTest":
                        description = "O2 Sensor front Cat. Support points for start temp. Used for time to wait before test of dead sensor. RANGE : -255 - 255 ] ";
                        //

                        break;
                    case "obdStartTemp":
                        description = "This timer is running until lambda closed loop is entered. ] ";
                        //

                        break;
                    case "CatHlTimer":
                        description = "timer incremented during high load ] ";
                        //

                        break;
                    case "CatLowLoadTimer":
                        description = "If rpm and load is to low this timer is incremented. If above lim HlTimer is decremented! ] ";
                        //

                        break;
                    case "CatIdleTimer":
                        description = "Time out timer when vehi.speed = 0 ] ";
                        //

                        break;
                    case "CatOx1CycleTimeHiLim":
                        description = "Hi lim for the cycle time on the front ox sensor signal ] ";
                        //

                        break;
                    case "CatFcTimer":
                        description = "Time out timer when fuelcut is enabled ] ";
                        //

                        break;
                    case "CatStartTimer":
                        description = "Timer increments every second, used to enable CATMON ] ";
                        //

                        break;
                    case "CatDevDiff":
                        description = "The CatSignalQuote multiplied with CatDevLim. ] ";
                        //

                        break;
                    case "CatOx2Dev":
                        description = "Difference between CatOx2Filt and in.U_O2SensRear ] ";
                        //

                        break;
                    case "CatOx2DevLim":
                        description = "Result from deviation calibration map ] ";
                        //

                        break;
                    case "CatReadyTimer":
                        description = "Timer value for cat warm up delay, used for Catalyst evaluation ] ";
                        //

                        break;
                    case "CatStableTimer":
                        description = "Timer value for cat warm up delay, used for Adaption_Allowed flag ] ";
                        //

                        break;
                    case "obdCatDiagLevLambdaIntMeanValue":
                        description = "The meanvalue of the lambda integrator during a cal time before the fuel is controlled by the Cat diag. ] ";
                        //

                        break;
                    case "CatOx1CycleTime":
                        description = "Hi lim for the cycle time on the front ox sensor signal ] ";
                        //

                        break;
                    case "CatOx1CycleTimeLoLim":
                        description = "Lo lim for the cycle time on the front ox sensor signal ] ";
                        //

                        break;
                    case "CatOx1DutyCycle":
                        description = "Calculated duty cycle of the front ox sensor ] ";
                        //

                        break;
                    case "IdleCal.n_LOffSmallStep":
                        description = "";
                        //

                        break;
                    case "IdleCal.n_LOffStep":
                        description = "RESOLUTION : ] ";
                        //

                        break;
                    case "IdleCal.n_IdleMovAutOffs":
                        description = "Extra offset added to the nominal engine speed when idle regulator is active and the car is moving. Used on automatic cars only. ] ";
                        //

                        break;
                    case "AreaData.A_ThrottleDeman":
                        description = "Area output from the area master UPDATE : 10 ms RESOLUTION : 1 RANGE : 10 - 1826 ] ";
                        //

                        break;
                    case "IgnDef.ActualKnockCyl":
                        description = "Actual cylinder number used during the complete knockwindow phases. The normal cylinder counter Crank.Cylinder can be updated to the next cylinder before knock and detectwindow is finished because of owerlap on the 6Cyl variant. RANGE : 0 - 5 => (Cyl 1 to Cyl 6) ] ";
                        //

                        break;
                    case "EngTipProt.n_EngTrnDiff":
                        description = "Difference between engine speed and turbine speed. RESOLUTION : 1 rpm RANGE : 0 - 7000 rpm ] ";
                        //

                        break;
                    case "EngTipProt.X_TipInRampFa":
                        description = "Factor to increase speed of airmass ramp at high airmass requests. RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "EngTipProt.m_TipOutVal":
                        description = "Pointer to tip-out matrix. The pointer is calculated as: m_TipInLimit - m_Backlash RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "CanIn.v_VehicleRightFron":
                        description = "Left front wheel speed on TCS/ESP cars RANGE : 0 - 300 km/h RESOLUTION : 1/16 km/h ] ";
                        //

                        break;
                    case "EngTipProt.m_TipInVal":
                        description = "Pointer to tip-in matrix. The pointer is calculated as: ( m_TipInLimit - m_Backlash) * X_TipInRampFac RESOLUTION : 1 mg/c RANGE : 0 - 2000 mg/c ] ";
                        //

                        break;
                    case "EmLimCal.t_ClutchDelay":
                        description = "Delay time for detecting a gearshift. See info: EmLimCal.ClutchMode. ] ";
                        //

                        break;
                    case "TorqueProt.M_LimEngTemp":
                        description = "CR-1562 Maximum torque when engine temperature is below temperature TorqueCal.T_LimEngTemp. This value is copied from table TorqueCal.M_EngTempTab, where In.n_Engine is the support variable. This limit is ramped up when engine temperature is above temperature TorqueCal.T_LimEngTemp. RANGE: 0 - 500 Nm ] ";
                        //

                        break;
                    case "IgnDef.t_DetectWindow":
                        description = "Actual time in msec for misfire detect window. RANGE : 0 - 500msec. ] ";
                        //

                        break;
                    case "IgnDef.t_TriggerHigh":
                        description = "Actual high time for ignition trigger pin. The ignition cassette is charging the 400V capacitor during this time. The charge time is depending on battery voltage. This symbol is only updating during multi igition mode. RANGE : 2.8 - 10msec. ] ";
                        //

                        break;
                    case "PedalMapCal.SentronicFac":
                        description = "CR-934, When Sentronic mode is selected will the pedal position pointer in the pedal map be multiplied with this factor before the interpolation is done to calculate m_Driver. RESOLUTION : 0.001 ] ";
                        //

                        break;
                    case "TEngDiagCal.n_deadCombLi":
                        description = "Number of combustions that is needed before we can decide if the TEngine signal has change enought to say it s alive. RANGE : 0 - 65000 UNIT : comb RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "TEngDiagCal.T_MaxLimphom":
                        description = "Max temperature for limphome calculation. This limit is used stop limphome value. RANGE : -40 - 160 RESOLUTION : 1.0 UPDATE : background ] ";
                        //

                        break;
                    case "TEngDiagCal.T_LimForMaxL":
                        description = "If limphome temp is above this limit and a fault either on temp sensor or cooling system is reported, limphome temp is set to max due to force cooling fan to start. This will prevent engine to overheat. RANGE : -40 - 160 RESOLUTION : 1.0 UPDATE : background ] ";
                        //

                        break;
                    case "pTankDiagCal.V_FuelMin":
                        description = "The min volume in fuel tank to allow test. ] ";
                        //

                        break;
                    case "pTankDiagCal.V_FuelMax":
                        description = "The max volume in fuel tank to allow test. ] ";
                        //

                        break;
                    case "pTankDiagCal.compLim":
                        description = "The higher limit of the adaption on actualin.p_fueltank. RANGE : -1000 - 1000 RESOLUTION : 1 UNIT : ] ";
                        //

                        break;
                    case "EvapTestCal1.PurgeTimeFo":
                        description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                        //

                        break;
                    case "EvapTestCal1.TimeForExtr":
                        description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                        //

                        break;
                    case "EvapTestCal1.Level1Press":
                        description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal1.Level2Press":
                        description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal1.LambdaIntLi":
                        description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                        //

                        break;
                    case "EvapTestCal1.Level3Press":
                        description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal1.pAirAmbient":
                        description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                        //

                        break;
                    case "EvapTestCal1.PurgeDiagFl":
                        description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                        //

                        break;
                    case "EvapTestCal2.MinTankPres":
                        description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal1.Preconditio":
                        description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                        //

                        break;
                    case "EvapTestCal1.t_breakWait":
                        description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                        //

                        break;
                    case "EvapDiagCal.Ramp1allFuel":
                        description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP1 ] ";
                        //

                        break;
                    case "EvapDiagCal.p_Ramp1MaxDi":
                        description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). ] ";
                        //

                        break;
                    case "EvapTestCal1.MinTankPres":
                        description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal3.TimeForExtr":
                        description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                        //

                        break;
                    case "EvapTestCal3.PurgeTimeFo":
                        description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                        //

                        break;
                    case "EvapTestCal3.Level2Press":
                        description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal3.Level1Press":
                        description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal3.Level3Press":
                        description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal3.LambdaIntLi":
                        description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                        //

                        break;
                    case "EvapTestCal3.pAirAmbient":
                        description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                        //

                        break;
                    case "EvapTestCal3.PurgeDiagFl":
                        description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                        //

                        break;
                    case "EvapTestCal3.Preconditio":
                        description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                        //

                        break;
                    case "EvapTestCal3.t_breakWait":
                        description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                        //

                        break;
                    case "DICassCal.N_tLowLimCyl":
                        description = "Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbtLowCyl is compared to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "EvapTestCal2.TimeForExtr":
                        description = " The time for extra decrease of the tank pressure. RANGE : 0 - 2000 ] ";
                        //

                        break;
                    case "EvapTestCal2.PurgeTimeFo":
                        description = " The time for a stabile pressure after purge valve is closed. RANGE : 0 - 20000 ] ";
                        //

                        break;
                    case "EvapTestCal2.Level2Press":
                        description = " The middle pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal2.Level1Press":
                        description = " The high pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal2.Level3Press":
                        description = " The low pressure level where the time is measured. RANGE : -2000 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal2.LambdaIntLi":
                        description = " Below this limit in lambda.lambdaint the normal evap test should be halted. ] ";
                        //

                        break;
                    case "EvapTestCal2.pAirAmbient":
                        description = " Delta pAirAmbient max and min from obdEvappAirAmbientStack RANGE: 0 - 65535 UNIT: KPa ] ";
                        //

                        break;
                    case "EvapTestCal3.MinTankPres":
                        description = " Minimum allowed tank underpressure RANGE : -2500 - 0 ] ";
                        //

                        break;
                    case "EvapTestCal2.PurgeDiagFl":
                        description = " PWM signal sent to the Purge valve. 0 = closed valve 1000 = open valve RANGE : 0 - 1000 ] ";
                        //

                        break;
                    case "EvapTestCal2.Preconditio":
                        description = " Time for precondition to be fulfilled. RANGE : 0 - 10000 ] ";
                        //

                        break;
                    case "EvapTestCal2.t_breakWait":
                        description = " If preconditionduring test is not OK, wait this time until next try. ] ";
                        //

                        break;
                    case "CatModCal.m_AirInletHigh":
                        description = "Upper limit for MAF.m_AirInlet -> CatModCal.highLoadFiltCoef used. RANGE : 1 - 1000 ] ";
                        //

                        break;
                    case "CatModCal.AirInletCoef":
                        description = "FiltCoef used for CatModProt.m_AirInletFilt calculation. RANGE : 0,000 - 1,000 ] ";
                        //

                        break;
                    case "CatModCal.m_AirInletLow":
                        description = "Lower limit for MAF.m_AirInlet -> CatModCal.lowLoadFiltCoef used. RANGE : 1 - 1000 ] ";
                        //

                        break;
                    case "CatModCal.m_CombFacLim":
                        description = "Load limit to get a combustion factor to compensate for start heat up RANGE : 0-2000 ] ";
                        //

                        break;
                    case "ratio_filter_const":
                        description = "Description : Actual filter constant for gear ratio filter Resolution : 1 Bit Range : 1- 1000 ] ";
                        //

                        break;
                    case "CatModCal.LowLoadFiltCoef":
                        description = "FiltCoef used for ECMStat.T_Catalyst calculation, low load. RANGE : 0,0000 - 1,0000 ] ";
                        //

                        break;
                    case "CatModCal.DecFiltCoef":
                        description = "FiltCoef used when the catalyst temp value is decreasing. RANGE : 0,0000 - 1,0000 ] ";
                        //

                        break;
                    case "CatModCal.IncFiltCoef":
                        description = "FiltCoef used when the catalyst temp value is increasing. RANGE : 0,0000 - 1,0000 ] ";
                        //

                        break;
                    case "CatModCal.LambdaOffsetCoef":
                        description = "FiltCoef used for lambda offset calculation RANGE : 0 - 10000 ] ";
                        //

                        break;
                    case "CatModCal.MedLoadFiltCoef":
                        description = "FiltCoef used for ECMStat.T_Catalyst calculation, medium load. RANGE : 0,0000 - 1,0000 ] ";
                        //

                        break;
                    case "CatModCal.HighLoadFiltCoef":
                        description = "FiltCoef used for ECMStat.T_Catalyst calculation, high load. RANGE : 0,0000 - 1,0000 ] ";
                        //

                        break;
                    case "DICassCal.N_ULowLimCyl":
                        description = "Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbULowCyl is compare to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.N_ULowLimTot":
                        description = "Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbULowTot is compare to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.t_LimAvTot":
                        description = "Limit where average value ( DICass.t_AvTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.N_tLowLimTot":
                        description = "Number of combustions detected during cranking where the DI cassette might be faulty. The low value counter DICass.N_CmbtLowTot is compared to this limit. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.t_LimAvCyl":
                        description = "Limit where average value ( DICass.t_AvCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.U_LimAvCyl":
                        description = "Limit where average value ( DICass.U_AvCyl) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "DICassCal.U_LimAvTot":
                        description = "Limit where average value ( DICass.U_AvTot) is to low. Test is done after DICassCal.N_CmbLimit combustions. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "CatDiagLevCal.T_CatLim":
                        description = "The catalyst temp must be above this lim to run the diag. ] ";
                        //

                        break;
                    case "CatDiagLevCal.t_FromStartLim":
                        description = "Engine must have run more than this time in seconds for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.Ox2LowStartLim":
                        description = "Only start the third diag phase if the rear sensor is above this limit. Otherwise reset diagnose and try again. ] ";
                        //

                        break;
                    case "CatDiagLevCal.SecondFuelFac":
                        description = "Fuel factor used the first manipulation of the fuel. ] ";
                        //

                        break;
                    case "CatDiagLevCal.FirstFuelFac":
                        description = "Fuel factor used the first manipulation of the fuel. ] ";
                        //

                        break;
                    case "CatDiagLevCal.m_LoLim":
                        description = "Engine load must be above this for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.m_HiLim":
                        description = "Engine load must be below this for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.n_HiLim":
                        description = "Engine rpm must be below this for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.t_ThrotClosed":
                        description = "Throt must be closed more than this time for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.n_LoLim":
                        description = "Engine rpm must be above this for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.T_EngLim":
                        description = "Engine temp must be above this for cat diag to run ] ";
                        //

                        break;
                    case "CatDiagLevCal.Ox2LowLim":
                        description = "When the rear ox sensor reaches this limit, the timer measuring the time to reach this lim, is stopped. This time is then LP filtered and evaluated. ] ";
                        //

                        break;
                    case "CatDiagLevCal.FirstFacTime":
                        description = "Time that the first fuel factor is used. ] ";
                        //

                        break;
                    case "CatDiagLevCal.Ox2HiLim":
                        description = "When the rear ox sensor reaches this limit, the timer measuring the time to reach this lim, is stopped. This time is then LP filtered and evaluated. ] ";
                        //

                        break;
                    case "CatDiagLevCal.EvalFiltCoef":
                        description = "This coef is used when LP filtering the time that it took for the rear ox2 sensor to reach its limit. ] ";
                        //

                        break;
                    case "CatDiagLevCal.OKTimeLim":
                        description = "If the time before the rear ox sensor reaches its limit exceeds this lim, the timer is stopped and the time evaluated. ] ";
                        //

                        break;
                    case "DetSigDiagCal.t_DetectLimit":
                        description = "Min limit for detect signals for counter Missf.Det1HighCount and Missf.Det2HighCount. RESOLUTION : 1 us ACCURACY : 8 us ] ";
                        //

                        break;
                    case "linkstatus":
                        description = "0 problem with both rx & tx. Current tx status is actually unknown, but there was a problem before rx failed. 1 problem with tx 2 problem with rx, tx status unknown 3 ok ] ";
                        //

                        break;
                    case "MissfCal.T_ActiveLim1":
                        description = "If engine start coolant temp is below this limit, we wait until the temperature has passed MisfCal.T_ActiveLim2 - before activating misfire evaluation. Only used for MY05 and later. RANGE : -40 - 215 ] ";
                        //

                        break;
                    case "MissfCal.CVSErrorLimHotS":
                        description = "Limit for setting CVS misfire fault the first 1000 revs with hot fuel start criteria. RANGE : 0 - 32767 ] ";
                        //

                        break;
                    case "MissfCal.T_ActiveLim2":
                        description = "If engine start coolant temp is below MisfCal.T_ActiveLim1, we wait until the temperature has passed this limit - before activating misfire evluation. Only used for MY05 and later. RANGE : -40 - 215 ] ";
                        //

                        break;
                    case "OBDAdapEvap.LeakageResul":
                        description = " Saves the obdEvap.LeakageResult for scantool evalutation, If there is a big leak the result is 1000. RANGE: -3 - 4, 1000 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                        //

                        break;
                    case "obdTEngine_mAirperDegree":
                        description = "The factor from loadtable is multipliced with the matrix result. The factor is scale with 2 decimals. RANGE : 0 - 65536 UNIT : mg/C RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdStartTempState":
                        description = "This timer is running until lambda closed loop is entered. ] ";
                        //

                        break;
                    case "MissfCal.CVSErrorLimStar":
                        description = "Limit for setting CVS misfire fault the first 1000 revs. Example: 3% misfire = 60 misfire in this limit. RANGE : 0 - 65535 ] ";
                        //

                        break;
                    case "obdTEngineLoadFac":
                        description = "On low/high loads the temp is slower/quicker than the matrix returns, therfor a factor from this table based on the result from matrix is used. RANGE : 0 - 32767 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngStartCombFac":
                        description = "Get a start combustion from start temp. If a warm start, the combustion factor is valued higher (more combustions). RANGE : 0 - 32767 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngCombust":
                        description = "Engine combustion support points to get correct amount of m_air from table. Due to interpolation routine can t handle 32 bits, the combustion counter can t be > 32000. Therefor local comb counter is = ECMStat.n_Combustion / 2 RANGE : 0 - 32760 UNIT : comb RESOLUTION : 50% UPDATE : background ] ";
                        //

                        break;
                    case "obdTEngine_mAirComb":
                        description = "Switch points for TEngDiagCal.m_LoadFac table that gets correction factor for m_air/comb due to high/low loads. RANGE : 0 - 32000 UNIT : mg/comb RESOLUTION : 0.01 UPDATE : background ] ";
                        //

                        break;
                    case "Missf.DetectLevel":
                        description = "This variable shows information from the combustion. It s updated from In.t_IgnDetect1 and In.t_IgnDetec2 depending on which cylinder is active. RANGE : 0-65535 UPDATED : every combustion ] ";
                        //

                        break;
                    case "SyncProt.ST_SyncMode":
                        description = "Number of following combustions the engine have synced on. RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "SyncProt.N_DecreaseCntr":
                        description = "Number of combustions to subtract from SyncCal.n_CombLimit after SyncCal.N_SyncMode1 number of engine cycles. RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "SyncProt.ST_SyncDiagMode":
                        description = "Status of the sync diagnose. 3: Engine not synced. Possible detect fault. 2: Engine synced. Possible cylinder fault. 1: Engine synced. No faults. 0: Diagnose not performed yet. RESOLUTION : 1 combustion ] ";
                        //

                        break;
                    case "SyncProt.ST_Det2Fault":
                        description = "Detect 2 fault 2: High fault 1: Low fault 0: No fault RESOLUTION : Fault / No fault ] ";
                        //

                        break;
                    case "VIOS_ExceptionReason":
                        description = "Indicate wat has caused a reset: 2 - Bus_error_handler 3 - Adress_error_handler 4 - Illegal_instruction_handler 5 - Zero_divide 6 - CHK_error_handler 7 - TRAPcc_handler 8 - Privilige_violation_handler 9 - Trace_handler 12 - Hard_bkpt 14 - Format_error 15 - Uninitialized_interrupt 16-48 - Other error ] ";
                        //

                        break;
                    case "VIOS_ExceptionAddress":
                        description = "This variable include the programcode address at which an exeption occured, like division by zero etc. ] ";
                        //

                        break;
                    case "VIOSCal.t_DetWinNormal":
                        description = "The detect window length before sync but after multiign. The actual detect window length is this value - VIOSCal.t_DetBefWin - 1. RESOLUTION: 0.1 ms ] ";
                        //

                        break;
                    case "Out.CMD_NCInhibit":
                        description = "DESCRITPION: Inhibit neutral control in order to adapt drive air or on high altitudes. ] ";
                        //

                        break;
                    case "ActualIn.X_ActGearTipin":
                        description = "Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1, with engine break 6 - Gear 2, with engine break 7 - Gear 3 8 - Gear 4 9 - Gear 5 11 - Gear 3, lock up 12 - Gear 4, lock up 13 - Gear 5, lock up 21 - Gear 1, without engine break 22 - Gear 2, without engine break 27 - Gear 3, slipping lockup 28 - Gear 4, slipping lockup 29 - Gear 5, slipping lockup ";
                        //

                        break;
                    case "VIOSCal.t_BefDetWin":
                        description = "The time between the ign trigg start flank and start of the detect win. RESOLUTION: 0.1 ms ] ";
                        //

                        break;
                    case "SyncProt.ST_Det1Fault":
                        description = "Detect 1 fault 2: High fault 1: Low fault 0: No fault RESOLUTION : Fault / No fault ] ";
                        //

                        break;
                    case "ActualIn.ST_TCMIntervTyp":
                        description = "TCM torque request intervention type 0 = No intervention 1 = Reduce torque 2 = Increase torque ] ";
                        //

                        break;
                    case "ActualIn.ST_TCMShiftPatt":
                        description = "Active TCM shift pattern 0 = ECO 1 = Pwr 2 = Wusp 3 = Wnt 4 = US1 5 = US2 6 = Hot1 7 = Hot2 8 = Jerk 9 = Rep 10 = DS 11 = Tap U/D ] ";
                        //

                        break;
                    case "In.X_ActGearTipin":
                        description = "Actual gear on automatic gearbox. 2 - Reverse 3 - Neutral 5 - Gear 1, with engine break 6 - Gear 2, with engine break 7 - Gear 3 8 - Gear 4 9 - Gear 5 11 - Gear 3, lock up 12 - Gear 4, lock up 13 - Gear 5, lock up 21 - Gear 1, without engine break 22 - Gear 2, without engine break 27 - Gear 3, slipping lockup 28 - Gear 4, slipping lockup 29 - Gear 5, slipping lockup ";
                        //

                        break;
                    case "HardwareRevision":
                        description = "Hardware revision letter. Example, in a 7.7B unit will the byte in this string be ascii B ] ";
                        //

                        break;
                    case "IgnDef.MulIgnPulses":
                        description = "Max number of multi ignition pulses in 60 degree window when multi ignition mode is enabled: ( 60degress in time - t_DetWinMulti) / (IgnDef.t_TriggerHigh + t_TrigLow) This symbol is max limited to IgnDefProt.MaxMultiPulses. RANGE : 1 - 255 ] ";
                        //

                        break;
                    case "Sync.ST_DICFault":
                        description = "Fault information from the sync diagnose. RESOLUTION : 1 ] ";
                        //

                        break;
                    case "IgnDef.IgnActive":
                        description = "Normal or multi ignition is active, ignition trigger output pin is low (it s also active during multi ignition burst ). RANGE : 0 - Not active 1 - Active ] ";
                        //

                        break;
                    case "IgnDef.CntLowTrigg":
                        description = "Counts if ignition trigg is low when Multi Ignition 60degree window ends. If this increases a new calibration should be done. RANGE : 0-65535 ] ";
                        //

                        break;
                    case "PLT_TriggDelay":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        //

                        break;
                    case "DICRun.ST_EngRunDiag":
                        description = "Engine running diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                        //

                        break;
                    case "DICass.N_KnkBank1Low":
                        description = "Counts number of detections when In.U_KnockDiag is below the limit KnockDiagCal.errorLevel. This counts for all cylinders for a 4 cylinder engine and counts for (bank 1) cylinder 1,3 and 5 for V6 engine. RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "DICass.N_KnkBank2Low":
                        description = "Counts number of detections when In.U_KnockDiag is below the limit KnockDiagCal.errorLevel. This counts only for (bank 2) cylinder 2,4 and 6 for V6 engine. RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "DICRun.ST_MisfStarted":
                        description = "Misfire diagnose is started, this is a pre condition for engine running diagnose. RANGE : 0 - Not Ready 1 - Started ] ";
                        //

                        break;
                    case "DICRun.ST_FuelCut":
                        description = "If FCut.CutStatus is indicated a fulcut then this variable is set to FCut.CutStatus. This variable is cleared in diagnose function which operate in background when FCut.CutStatus is 0. The delay Before the variable is change is approx 100ms. RANGE : 0 - No fuel cut >0 - read FCut.CutStatus ] ";
                        //

                        break;
                    case "DICass.ST_OfDiagnosis":
                        description = "Status of diagnose. Shows latest condition of the diagnose. This variable is set to 0 in ignition off. The variable status is set every time when a engine running diagnose is done Fault status could be set in cranking or sync diagnose also. RANGE : 0 - Diagnose is not done once 1 - OK, 2 - Fault found ] ";
                        //

                        break;
                    case "DICass.ST_CrankDiag":
                        description = "Cranking diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                        //

                        break;
                    case "DICass.ST_PreCondOK":
                        description = "Status if pre condition was OK in engine cranking diagnose. RANGE : 0 - Not OK 1 - Pre condition was OK ] ";
                        //

                        break;
                    case "DICass.ST_BreakCond":
                        description = "Status if break condition was detected in engine cranking and sync diagnose. RANGE : 0 - No break 1 - Break condition detected ] ";
                        //

                        break;
                    case "DICass.ST_SyncDiag":
                        description = "SyncDiag diagnos ready for evaluation. RANGE : 0 - Not Ready 1 - Diagnose started , conditions OK 2 - Diagnose data sampling finished 3 - Diagnose stopped 4 - Diagnose done ] ";
                        //

                        break;
                    case "DICass.ST_CrankKnk":
                        description = "Cranking diagnos ready for evaluation on Knock diagnose signals. RANGE : 0 - Not Ready 1 - Done ] ";
                        //

                        break;
                    case "DICass.ST_CrankMisf":
                        description = "Cranking diagnos ready for evaluation on misfire dignose signals. RANGE : 0 - Not Ready 1 - Done ] ";
                        //

                        break;
                    case "obdAirmThrottleAreafilte":
                        description = "ActualIn.A_Throttle >= QAirDiagCal.minArea and ActualIn.A_Throttle <= QAirDiagCal.maxArea RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmHiSpeedTimerFilte":
                        description = "if HiSpeedStartTimer >= QAirDiagCal.timeToStart RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmLoadfilterOK":
                        description = "In.p_AirInlet <= QAirDiagCal.maxLoad and In.p_AirInlet >= QAirDiagCal.minLoad RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmPDiffFilterOK":
                        description = "MAF.p_InlBefQuote >= QAirDiagCal.minPDiff and MAF.p_InlBefQuote <= QAirDiagCal.maxPDiff RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmRPMfilterOK":
                        description = "In.n_Engine <= QAirDiagCal.maxRPM and In.n_Engine >= QAirDiagCal.minRPM RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmThrottleAreaAdpCo":
                        description = "During Throttle adaption or if adaption not has been performed once, the QAirInlet diagnose is restarted until pre conditions is OK. RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "obdAirmTempfilterOK":
                        description = "In.T_Engine >= QAirDiagCal.T_MinForTest and In.T_Engine <= QAirDiagCal.T_MaxForTest RANGE : 0 - 1 UNIT : BIT UPDATE : background ] ";
                        //

                        break;
                    case "catStatusReadyTimerOk":
                        description = "Ready timer is ok and monitoring of the second oxygen sensor signal is allowed . ] ";
                        //

                        break;
                    case "CatStableOK":
                        description = "Indicates when the conditions except dutycycle and periodtime has been OK during a cal. time. (CatDiagCal.StableTimeLim) ] ";
                        //

                        break;
                    case "obdCatDiagLevActive":
                        description = "Indicates for the lambda and purge regulation that the diagnose is active. ] ";
                        //

                        break;
                    case "obdPurge.BreakCondDurTes":
                        description = "3 = obdFuelLevel.V_FuelTankFilt < EvapDiagCal.V_FuelMin 4 = obdFuelLevel.V_FuelTankFilt > EvapDiagCal.V_FuelMax RANGE : 1 - 255 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdPurge.BreakPreConditi":
                        description = "1 = In.v_Vehicle > 0 2 = obdPurge.ST_NeedForSpeed 5 = obdPurge.ST_DiagDone 6 = obdCCV.DiagActive 7 = evapEnvironTempToLow 8 = Environ.inletAirStartTemp() < EvapDiagCal.T_LoLim 9 = Environ.inletAirStartTemp() > EvapDiagCal.T_HiLim 10 = Environ.engineStartTemp() < EvapDiagCal.T_LoLim 11 = Environ.engineStartTemp() > EvapDiagCal.T_HiLim 12 = obdEvap.n_BrakeChanges > pEvapTestCal->nrOfBrakeChangeLim 13 = (In.U_Batt <= 100) || (In.U_Batt >= 160) 14 = ECMStat.p_Diff > -200 15 = Purge.Status != 0 16 = Out_CMD_Purge.hasReportedFault 18 = obdEvap.p_AirAmbientDelta > pEvapTestCal->pAirAmbientDelta 19 = obdpTankAdap.ST_FirstTimeAfterPowerUp == false RANGE : 1 - 255 ";
                        //

                        break;
                    case "Missf.Detect1Active":
                        description = "This variable shows if misfire detection for cylinder 1 and 2 is active or for V6 cylinder 1 , 3 and 5. RANGE : 0 - Not active 1 - Active UPDATED : every combustion ] ";
                        //

                        break;
                    case "obdMisfAdjustForO2RearSensor":
                        description = "Enables new calibration for AdjustForRearSond during misfire. Enable : If there is more misfire (Missf.nrOfCountedMisfire) than cal. limit (MissfCal.O2AdjMFErrLim) during a misfire temp block, then increase a block error counter. When block error counter >= cal. limit, (MissfCal.O2AdjBlockErrLim) set this flag. Disable : If there is less misfire (Missf.nrOfCountedMisfire) than cal. limit (MissfCal.O2AdjMFOKLim) during a misfire temp block, then increase a block OK counter. When block OK counter >= cal. limit, (MissfCal.O2AdjBlockOKLim) clear this flag. RANGE : 0-1 UNIT : BIT ";
                        //

                        break;
                    case "Missf.ST_WasTooCold":
                        description = "Flag to indicate if temperature conditions are fulfilled or not, according to ODB2 regulations. If so, misfire evaluation is performed. Only used for MY05 and later. RANGE : 0 - 1 UPDATED : Background ] ";
                        //

                        break;
                    case "obdMisfO2RearAdjBlockOKCnt":
                        description = "Block OK counter for AdjustForRearSond RANGE : 0-255 UNIT : BIT RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdMisfO2RearAdjBlockErrCnt":
                        description = "Block error counter for AdjustForRearSond RANGE : 0-255 UNIT : BIT RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "EngTipCal.ST_EnableTipou":
                        description = "Enable tipout function 0 = Disable Tip-out 1 = Enable Tip-out ] ";
                        //

                        break;
                    case "EngTipCal.ST_EnableActG2":
                        description = "Enable the use of In.X_ActGearTipin and special engine break tipin maps. In.X_ActualGear and the normal maps for open converter is used when disabled. 0 = Disable engine break maps 1 = Enable engine break maps ] ";
                        //

                        break;
                    case "a601_status":
                        description = "Requested status from the drive master output RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "AreaAdap.ST_ForceAdapDon":
                        description = "ForceAdaption of throttle area has been performed once. UPDATE : 250ms ] ";
                        //

                        break;
                    case "AirmassMaster_Status":
                        description = "Identification which select low/high function is active. RESOLUTION : 1 bit RANGE : no bit set => no function active bit 0 => driver pedal is active bit 1 => driver cruise is active bit 2 => select low limit wheel is active bit 3 => select high m_nlow is active bit 4 => select low m_nhigh is active ] ";
                        //

                        break;
                    case "m_DriverStatus":
                        description = "Requested status from the pedal map RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "m_nHighStatus":
                        description = "Requested status from the m_nhigh functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "m_RequestStatus":
                        description = "requested status from the airmass master.It s the gobal status for the airmass controller RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "m_nLowStatus":
                        description = "Requested status from the m_nlow functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "m_WheelStatus":
                        description = "Requested status from the wheel master RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "m_IdleStatus":
                        description = "Requested status from the idle speed functions RESOLUTION : 1 bit RANGE : 0 => not active 1 => open loop 2 => closed loop ] ";
                        //

                        break;
                    case "TorqueProt.ST_NoIgnition":
                        description = "Status flag of ignitionretardation: 0 = Ignition retardation allowed 1 = Ignition retardation not allowed ] ";
                        //

                        break;
                    case "TorqueProt.ST_LimEngTemp":
                        description = "Status flag of engine temperature torque reduction: 0 = reduction not allowed 1 = reduction allowed ] ";
                        //

                        break;
                    case "LoadCoProt.ST_ACCrankDon":
                        description = "This flag will be set to 1 when the AC activation during engine crank is finsihed and normal AC-control is active. ] ";
                        //

                        break;
                    case "PedalMapProt.SentronicMo":
                        description = "Actual Sentronic mode (CR-934): 0 - Normal mode 1 - Ramping to Sentronic mode 2 - Sentronic mode active ] ";
                        //

                        break;
                    case "PurgeProt.LocalMaxFuelFa":
                        description = "Maximum allowed fuelfac at actual load/rpm. RANGE : -50.0 - 0.0 % RESOLUTION : 0.1 % ] ";
                        //

                        break;
                    case "PurgeCal.MaxAdpFreezeInd":
                        description = "Maximum allowed ratio between the time the purge adaption is frozen resp. unfrozen. RANGE : 0 - 0.99 RESOLUTION : 0.01 ] ";
                        //

                        break;
                    case "PurgeCal.HCContEvapFiltF":
                        description = "Filter factor for HC adaption during tank diagnosis. RANGE : 0 - 8 RESOLUTION : 1 ] ";
                        //

                        break;
                    case "n_FuelCalc":
                        description = "Number of fuelfactor functions called from FuelMaster. ] ";
                        //

                        break;
                    case "ExhaustCal.ST_JerkEnable":
                        description = "DESCRITION: Flag to enable jerk enrichment on automatic cars. ] ";
                        //

                        break;
                    case "MIUErrorCountDone":
                        description = "This flag is set if one or more devicedriver faultindications for MIU have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                        //

                        break;
                    case "TCMErrorCountDone":
                        description = "This flag is set if one or more devicedriver faultindications for TCM have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                        //

                        break;
                    case "TCSErrorCountDone":
                        description = "This flag is set if one or more devicedriver faultindications for TCS have occured during active cpu powerup. RANGE : 0 - No fault 1 - Fault occured during active CPU powerup ] ";
                        //

                        break;
                    case "CatDiagLevCal.loadInc":
                        description = "Abort the diag if the load has increased more than this limit since diag start. ] ";
                        //

                        break;
                    case "DICassCal.T_EngLimit":
                        description = "Engine coolant temperature limit, the diagnos is not started if In.T_Engine is below the limit. ] ";
                        //

                        break;
                    case "DICassCal.U_BattLimit":
                        description = "Battery voltage limit, the diagnos is not started if In.U_Batt is below the limit. ] ";
                        //

                        break;
                    case "obdTEngTempChange":
                        description = "If the In.T_Engine diffs between obdStartTemp >= TEngDiagCal.n_deadDiffLim and vehicle speed > 0 then this variable is set. It s erased when ignition off. RANGE : false - true UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdpTank.p_MeasurementRe":
                        description = " Result from fuel tank pressure measurement. It can be : 0 OKAY 1 NOTOK 4 INTERRUPTED RANGE : 0 - 4 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdpTank.ST_ReportedErro":
                        description = " Show the current reported fault in pTank 0 - no error detected 5 - PTANK LOW 6 - PTANK HI 7 - PTANK RANGE RANGE : 0 - 7 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdpTankAdap.ST_FirstTim":
                        description = " When ECU boots this variable will be set to 1 and cleared at ignition. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background and when ECU boots ] ";
                        //

                        break;
                    case "obdFuelLevel.ST_CheckDon":
                        description = " 10 s after start and if fuel level is 10 l more than last reference (probably filled fuel during ignition off). Update reference with current fuel volume else use saved reference. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "obdFuelLevel.ST_Activity":
                        description = " When fuel level diff from start is bigger than FuelLevelCal.V_ActivityCheck this variable is set. RANGE : 0 - 1 UNIT : Status RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "EvapDiagCal.p_Ramp0MaxDi":
                        description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). THIS ONLY VALID FOR RAMP0 ] ";
                        //

                        break;
                    case "EvapDiagCal.Ramp2allFuel":
                        description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP2 ] ";
                        //

                        break;
                    case "EvapDiagCal.Ramp0allFuel":
                        description = " This change in the fueltank pressure, opposite to the expected pressure ramp, is allowed. If the pressure ramp is expected to be positive the pressure is allowed to decrease this amount between two readings. THIS ONLY VALID FOR RAMP0 ] ";
                        //

                        break;
                    case "OBDAdapEvap.N_OutOfLimTe":
                        description = " Every time that precondition has been fullfiled except the temperature limit, this counter will be increased. When counter >= 3 the diagnose will report readiness. It s cleared when diagnose reports either fault or ok; RANGE: 0-255 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                        //

                        break;
                    case "OBDAdapEvap.Evap2BigResD":
                        description = " This counter will increase if the leakageresult i evap diagnose is a bigger diff than 2 compared to the last result in EvapStack and the result will not be inserted to the stack. Next time a diagnose has performed the result will automaticly be inserted due to this counter > 0. It will be set to 0 when a value is inserted into the stack. RANGE: 0 - 1 UNIT: RESOLUTION: 1 UPDATE: background ] ";
                        //

                        break;
                    case "EvapDiagCal.p_Ramp2MaxDi":
                        description = " This change in the fueltank pressure is allowed. (independant of expected direction of the pressure ramp). THIS ONLY VALID FOR RAMP2 ] ";
                        //

                        break;
                    case "TEngDiagCal.n_deadDiffLi":
                        description = "When engine start temp (obdStartTemp) differs more than this limit, the Tengine signal is alive, else it s dead. RANGE : 0 - 255 UNIT : RESOLUTION : 1 UPDATE : background ] ";
                        //

                        break;
                    case "CatDiagLevCal.v_VehicleLim":
                        description = "Perform diagnose only if vehicle speed is less than this lim. ] ";
                        //

                        break;
                    case "CatDiagLevCal.loadDec":
                        description = "Abort the diag if the load has decreased more than this limit since diag start. ] ";
                        //

                        break;
                    case "CatDiagLevCal.nrOfLambdaSwitches":
                        description = "This is the number of lambda switches the integrator should perform during the integrator sampling for meanvalue calc. ] ";
                        //

                        break;
                    case "EvapTestCal1.nrOfBrakeCh":
                        description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "EvapDiagCal.HCContFiltFa":
                        description = "Filter factor for HC adaption during tank diagnosis. RANGE : 0 - 8 RESOLUTION : 1 ] ";
                        //

                        break;
                    case "EvapDiagCal.T_StartExecC":
                        description = " If ExecCntrlOption.EvapColdStart is enabled the purge startlim needs to be lower. This calib is used as a diff from PurgeCal.T_EngineLim. (PurgeCal.T_EngineLim - (ExecCntrlOption.EvapColdStart ? EvapDiagCal.T_StartExecCtrl : 0)) UNIT: C ] ";
                        //

                        break;
                    case "EvapTestCal1.maxnrOfRamp":
                        description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                        //

                        break;
                    case "EvapTestCal3.maxnrOfRamp":
                        description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                        //

                        break;
                    case "EvapTestCal3.nrOfBrakeCh":
                        description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "EvapTestCal2.nrOfBrakeCh":
                        description = " Max nr of brake changes RANGE : 0 - 255 ] ";
                        //

                        break;
                    case "EvapTestCal2.maxnrOfRamp":
                        description = " Number of evaluations in ramp2 RANGE: 0-9 ] ";
                        //

                        break;
                    case "v_VehicleConstant":
                        description = "Constant for calculating vehiclespeed In.v_Vehicle . SpeedConstant = 20 * PI * Radius[mm] * 3600[sec/h] / Pulses_per_rev Example1: Example2: Radius = 296 mm Radius = 316 mm Pulses_per_rev = 29 Pulses_per_rev = 29 Then is SpeedConstant = 2308746 Then is SpeedConstant = 2464742 ] ";
                        //

                        break;
                    case "REPCal.ST_GearShiftInhib":
                        description = "Enables gear shift inhibit function 0 = Do not use function 1 = Only use CMD_GearShiftInhibit 2 = Use both CMD_GearShiftInhibit and CMD_REP 3 = As 2 even without cruise The conditions to enable gear shift inhibit are: 1500 < In.n_Engine < 4000 rpm Out.X_AccPedal < 80% In.v_Vehicle > 50km/h ] ";
                        //

                        break;
                    case "IgnDef.MultiIgnMode":
                        description = "Shows the status of multi ignition. RANGE : 1-4 1 - Multi ignition enabled 2 - Multi ignition disabled 3 - Multi ignition stopps 4 - Multi ignition start request ] ";
                        break;
                    case "WorkShopSnapshotBuffer":
                        description = "* * Warning, check if this symbol is displayed correctly * * ";
                        break;
                    case "LastModifiedBy":
                        description = "Name of the PC interface that was connected when last modification of data was done. * * Warning, check if this symbol is displayed correctly * * ";
                        break;
                    case "VIOS_ResetType":
                        description = "Last containg of Reset Status Register. Reference MC68332 SIM manual page 4-9. MSB bit 7 - External reset bit 6 - Powerup Reset bit 5 - Watchdog reset bit 4 - Halt Monitor reset bit 3 - Not Used bit 2 - Loss of clock reset bit 1 - System reset LSB bit 0 - Test submodule reset ] ";
                        break;
                }

            if (symbolname.StartsWith("obdFF1"))
            {
                switch (symbolname)
                {
                    case "obdFF1.code":
                        description = "OBD2 Freeze frame code";
                        break;
                    case "obdFF1.time":
                        description = "OBD2 Freeze frame timestamp";
                        break;
                    case "obdFF1.totalTime":
                        description = "OBD2 Freeze frame total time";
                        break;
                    case "obdFF1.runs":
                        description = "OBD2 Freeze frame number of runs";
                        break;
                    case "obdFF1.nCombustions":
                        description = "OBD2 Freeze frame number of combustions";
                        break;
                    case "obdFF1.vVehicle":
                        description = "OBD2 Freeze frame vehicle speed";
                        break;
                    case "obdFF1.nEngine":
                        description = "OBD2 Freeze frame engine speed";
                        break;
                    case "obdFF1.qAirInlet":
                        description = "OBD2 Freeze airmass AREA";
                        break;
                    case "obdFF1.m_Request":
                        description = "OBD2 Freeze frame airmass request";
                        break;
                    case "obdFF1.mAirInlet":
                        description = "OBD2 Freeze frame airmass inlet";
                        break;
                    case "obdFF1.V_FuelTank":
                        description = "OBD2 Freeze frame fueltank content";
                        break;
                    case "obdFF1.pAirInlet":
                        description = "OBD2 Freeze frame inlet pressure";
                        break;
                    case "obdFF1.pAirBefThrottle":
                        description = "OBD2 Freeze frame inlet pressure before throttle";
                        break;
                    case "obdFF1.pAir":
                        description = "OBD2 Freeze frame airpressure";
                        break;
                    case "obdFF1.pAirInletTest":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.pAirBefThrotTest":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.pAirTest":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.pFuelTank":
                        description = "OBD2 Freeze frame fuel tank pressure";
                        break;
                    case "obdFF1.tEngine":
                        description = "OBD2 Freeze frame engine temperature";
                        break;
                    case "obdFF1.tEngineLimp":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.tEngineStart":
                        description = "OBD2 Freeze frame engine start temperature";
                        break;
                    case "obdFF1.tInletStart":
                        description = "OBD2 Freeze frame air inlet start temperature ";
                        break;
                    case "obdFF1.tAirInlet":
                        description = "OBD2 Freeze frame air inlet temperature";
                        break;
                    case "obdFF1.LambdaStartTimer":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.lambdaInt":
                        description = "OBD2 Freeze frame lambda intergrator value";
                        break;
                    case "obdFF1.mulFuelAdapt":
                        description = "OBD2 Freeze frame multiplicative fuel adaption factor";
                        break;
                    case "obdFF1.addFuelAdapt":
                        description = "OBD2 Freeze frame additiative fuel adaption factor";
                        break;
                    case "obdFF1.iHeatLambdaCat":
                        description = "OBD2 Freeze frame current to rear lambda sonde";
                        break;
                    case "obdFF1.iHeatLambdaEng":
                        description = "OBD2 Freeze frame current to front lambda sonde";
                        break;
                    case "obdFF1.uLambdaCat":
                        description = "OBD2 Freeze frame voltage from rear lambda sonde";
                        break;
                    case "obdFF1.uLambdaEng":
                        description = "OBD2 Freeze frame voltage from front lambda sonde";
                        break;
                    case "obdFF1.O2SensFreqCombustCnt":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.O2SensFreqFlankShiftCnt":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.obdAirmCompEval":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.obdAirmCompHiEval":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.uKnock":
                        description = "OBD2 Freeze frame knock voltage";
                        break;
                    case "obdFF1.uKnockDiag":
                        description = "OBD2 Freeze frame knock diagnostics voltage";
                        break;
                    case "obdFF1.missfTotCntCat":
                        description = "OBD2 Freeze frame total missfire count for catalyst overheat";
                        break;
                    case "obdFF1.missfTotCntEmis":
                        description = "OBD2 Freeze frame total missfire count for emission degradation";
                        break;
                    case "obdFF1.misfCountCyl1Temp":
                    case "obdFF1.misfCountCyl2Temp":
                    case "obdFF1.misfCountCyl3Temp":
                    case "obdFF1.misfCountCyl4Temp":
                    case "obdFF1.misfCountCyl5Temp":
                    case "obdFF1.misfCountCyl6Temp":
                        description = "OBD2 Freeze frame catalyst overheat missfire counters for each cylinder";

                        break;
                    case "obdFF1.misfCountCyl1CVS":
                    case "obdFF1.misfCountCyl2CVS":
                    case "obdFF1.misfCountCyl3CVS":
                    case "obdFF1.misfCountCyl4CVS":
                    case "obdFF1.misfCountCyl5CVS":
                    case "obdFF1.misfCountCyl6CVS":
                        description = "OBD2 Freeze frame emission degradation missfire counters for each cylinder";
                        break;
                    case "obdFF1.purgeHCCont":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.injectionTime":
                        description = "OBD2 Freeze frame injection duration";
                        break;
                    case "obdFF1.aThrottleActual":
                        description = "OBD2 Freeze frame throttle opening";
                        break;
                    case "obdFF1.AD_ThrottleActual":
                        description = "OBD2 Freeze frame A/D value from TPS";
                        break;
                    case "obdFF1.p_AirInletAdap":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.p_AirBefThrotAdap":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.CatDevDiffFilt":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.PW_APC":
                        description = "OBD2 Freeze frame duty cycle on APC valve";
                        break;
                    case "obdFF1.T_Air":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.ThrotIPart":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.BoostSetValue":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.BoostIFac":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.n_EngineNominal":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.idle_I_Part":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.maxLoad":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.CatTemp":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.CatIdleMonLoad":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.CatIdleMonResult":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.CatIdleMonEval":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.SAIIntrResult":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.obdAirmQuickChange":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.ST_BrakeLight":
                        description = "OBD2 Freeze frame brake light indicator";
                        break;
                    case "obdFF1.CMD_Bypass":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.lambdaStatus":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.lambdaRichConst":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.lambdaLeanConst":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.ST_EngineSynced":
                        description = "OBD2 Freeze frame engine synchronized indicator";
                        break;
                    case "obdFF1.FuelCut":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.FCutStatus":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.uBatt":
                        description = "OBD2 Freeze frame battery voltage";
                        break;
                    case "obdFF1.status":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.warmUpCycleDone":
                        description = "OBD2 Freeze frame warmup cycle done indicator";
                        break;
                    case "obdFF1.ST_Immo":
                        description = "OBD2 Freeze frame immobilizer status";
                        break;
                    case "obdFF1.runningIdle":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.drivingCycleDone":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.outOfDiagnoseLimits":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.keyOn":
                        description = "OBD2 Freeze frame ignition key on indicator";
                        break;
                    case "obdFF1.AD_PedalPot1":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.AD_SlavePedalPot1":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.AD_PedalPot2":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.AD_ThrottlePot1":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.AD_ThrottlePot2":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.AD_Throttle":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.SAIIntegratorArea":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.SAIIntrm_air":
                        description = "OBD2 Freeze frame parameter";
                        break;
                    case "obdFF1.SAIIntrIntDiff":
                        description = "OBD2 Freeze frame parameter";
                        break;
                }
            }

        return description;
        }
    }
}
